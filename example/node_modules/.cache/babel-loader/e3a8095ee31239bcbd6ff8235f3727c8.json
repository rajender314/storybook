{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n/** @jsx jsx */\nimport { memo } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport { getBackground } from './utils';\nimport { commonSVGStyles, getIconSize } from './styles';\n\n/**\n * We are hiding these props from consumers as they're used to\n * hack around icon sizing specifically for icon-file-type.\n */\n\nvar iconStyles = css({\n  display: 'inline-block',\n  flexShrink: 0,\n  lineHeight: 1,\n  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles\n  '> svg': _objectSpread(_objectSpread({}, commonSVGStyles), {}, {\n    maxWidth: '100%',\n    maxHeight: '100%',\n    color: 'var(--icon-primary-color)',\n    fill: 'var(--icon-secondary-color)',\n    verticalAlign: 'bottom'\n  })\n});\n/**\n * For windows high contrast mode\n */\nvar baseHcmStyles = css({\n  '@media screen and (forced-colors: active)': {\n    // eslint-disable-next-line @atlaskit/design-system/no-nested-styles\n    '> svg': {\n      filter: 'grayscale(1)',\n      '--icon-primary-color': 'CanvasText',\n      // foreground\n      '--icon-secondary-color': 'Canvas' // background\n    }\n  }\n});\n\nvar primaryEqualsSecondaryHcmStyles = css({\n  '@media screen and (forced-colors: active)': {\n    // eslint-disable-next-line @atlaskit/design-system/no-nested-styles\n    '> svg': {\n      // if the primaryColor is the same as the secondaryColor we\n      // set the --icon-primary-color to Canvas\n      // this is usually to convey state i.e. Checkbox checked -> not checked\n      '--icon-primary-color': 'Canvas' // foreground\n    }\n  }\n});\n\nvar secondaryTransparentHcmStyles = css({\n  '@media screen and (forced-colors: active)': {\n    // eslint-disable-next-line @atlaskit/design-system/no-nested-styles\n    '> svg': {\n      '--icon-secondary-color': 'transparent' // background\n    }\n  }\n});\n\n/**\n * __Icon__\n *\n * An icon is used as a visual representation of common actions and commands to provide context.\n *\n * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)\n * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)\n */\nexport var Icon = /*#__PURE__*/memo(function Icon(props) {\n  var _ref = props,\n    Glyph = _ref.glyph,\n    dangerouslySetGlyph = _ref.dangerouslySetGlyph,\n    _ref$primaryColor = _ref.primaryColor,\n    primaryColor = _ref$primaryColor === void 0 ? 'currentColor' : _ref$primaryColor,\n    secondaryColor = _ref.secondaryColor,\n    size = _ref.size,\n    testId = _ref.testId,\n    label = _ref.label,\n    width = _ref.width,\n    height = _ref.height;\n  var glyphProps = dangerouslySetGlyph ? {\n    dangerouslySetInnerHTML: {\n      __html: dangerouslySetGlyph\n    }\n  } : {\n    children: Glyph ? jsx(Glyph, {\n      role: \"presentation\"\n    }) : null\n  };\n  var dimensions = getIconSize({\n    width: width,\n    height: height,\n    size: size\n  });\n  var _useGlobalTheme = useGlobalTheme(),\n    mode = _useGlobalTheme.mode;\n  return jsx(\"span\", _extends({\n    \"data-testid\": testId,\n    role: label ? 'img' : undefined,\n    \"aria-label\": label ? label : undefined,\n    \"aria-hidden\": label ? undefined : true,\n    style: {\n      '--icon-primary-color': primaryColor,\n      '--icon-secondary-color': secondaryColor || getBackground(mode)\n    }\n  }, glyphProps, {\n    css: [iconStyles, baseHcmStyles, primaryColor === secondaryColor && primaryEqualsSecondaryHcmStyles, secondaryColor === 'transparent' && secondaryTransparentHcmStyles,\n    // NB: This can be resolved if this component, composes base SVG / and/or skeleton\n    // We could then simplify how common styles are dealt with simply by encapsualting them\n    // at their appropriate level and/or having a singular approach to css variables in the package\n    dimensions &&\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    css({\n      width: dimensions.width,\n      height: dimensions.height,\n      '> svg': dimensions\n    })]\n  }));\n});\nexport default Icon;","map":{"version":3,"names":["_extends","_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","memo","css","jsx","useGlobalTheme","getBackground","commonSVGStyles","getIconSize","iconStyles","display","flexShrink","lineHeight","maxWidth","maxHeight","color","fill","verticalAlign","baseHcmStyles","primaryEqualsSecondaryHcmStyles","secondaryTransparentHcmStyles","Icon","props","_ref","Glyph","glyph","dangerouslySetGlyph","_ref$primaryColor","primaryColor","secondaryColor","size","testId","label","width","height","glyphProps","dangerouslySetInnerHTML","__html","children","role","dimensions","_useGlobalTheme","mode","undefined","style"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/icon/dist/esm/components/icon.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/** @jsx jsx */\nimport { memo } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport { getBackground } from './utils';\nimport { commonSVGStyles, getIconSize } from './styles';\n\n/**\n * We are hiding these props from consumers as they're used to\n * hack around icon sizing specifically for icon-file-type.\n */\n\nvar iconStyles = css({\n  display: 'inline-block',\n  flexShrink: 0,\n  lineHeight: 1,\n  // eslint-disable-next-line @atlaskit/design-system/no-nested-styles\n  '> svg': _objectSpread(_objectSpread({}, commonSVGStyles), {}, {\n    maxWidth: '100%',\n    maxHeight: '100%',\n    color: 'var(--icon-primary-color)',\n    fill: 'var(--icon-secondary-color)',\n    verticalAlign: 'bottom'\n  })\n});\n/**\n * For windows high contrast mode\n */\nvar baseHcmStyles = css({\n  '@media screen and (forced-colors: active)': {\n    // eslint-disable-next-line @atlaskit/design-system/no-nested-styles\n    '> svg': {\n      filter: 'grayscale(1)',\n      '--icon-primary-color': 'CanvasText',\n      // foreground\n      '--icon-secondary-color': 'Canvas' // background\n    }\n  }\n});\n\nvar primaryEqualsSecondaryHcmStyles = css({\n  '@media screen and (forced-colors: active)': {\n    // eslint-disable-next-line @atlaskit/design-system/no-nested-styles\n    '> svg': {\n      // if the primaryColor is the same as the secondaryColor we\n      // set the --icon-primary-color to Canvas\n      // this is usually to convey state i.e. Checkbox checked -> not checked\n      '--icon-primary-color': 'Canvas' // foreground\n    }\n  }\n});\n\nvar secondaryTransparentHcmStyles = css({\n  '@media screen and (forced-colors: active)': {\n    // eslint-disable-next-line @atlaskit/design-system/no-nested-styles\n    '> svg': {\n      '--icon-secondary-color': 'transparent' // background\n    }\n  }\n});\n\n/**\n * __Icon__\n *\n * An icon is used as a visual representation of common actions and commands to provide context.\n *\n * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)\n * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)\n */\nexport var Icon = /*#__PURE__*/memo(function Icon(props) {\n  var _ref = props,\n    Glyph = _ref.glyph,\n    dangerouslySetGlyph = _ref.dangerouslySetGlyph,\n    _ref$primaryColor = _ref.primaryColor,\n    primaryColor = _ref$primaryColor === void 0 ? 'currentColor' : _ref$primaryColor,\n    secondaryColor = _ref.secondaryColor,\n    size = _ref.size,\n    testId = _ref.testId,\n    label = _ref.label,\n    width = _ref.width,\n    height = _ref.height;\n  var glyphProps = dangerouslySetGlyph ? {\n    dangerouslySetInnerHTML: {\n      __html: dangerouslySetGlyph\n    }\n  } : {\n    children: Glyph ? jsx(Glyph, {\n      role: \"presentation\"\n    }) : null\n  };\n  var dimensions = getIconSize({\n    width: width,\n    height: height,\n    size: size\n  });\n  var _useGlobalTheme = useGlobalTheme(),\n    mode = _useGlobalTheme.mode;\n  return jsx(\"span\", _extends({\n    \"data-testid\": testId,\n    role: label ? 'img' : undefined,\n    \"aria-label\": label ? label : undefined,\n    \"aria-hidden\": label ? undefined : true,\n    style: {\n      '--icon-primary-color': primaryColor,\n      '--icon-secondary-color': secondaryColor || getBackground(mode)\n    }\n  }, glyphProps, {\n    css: [iconStyles, baseHcmStyles, primaryColor === secondaryColor && primaryEqualsSecondaryHcmStyles, secondaryColor === 'transparent' && secondaryTransparentHcmStyles,\n    // NB: This can be resolved if this component, composes base SVG / and/or skeleton\n    // We could then simplify how common styles are dealt with simply by encapsualting them\n    // at their appropriate level and/or having a singular approach to css variables in the package\n    dimensions &&\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    css({\n      width: dimensions.width,\n      height: dimensions.height,\n      '> svg': dimensions\n    })]\n  }));\n});\nexport default Icon;"],"mappings":"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"},"metadata":{},"sourceType":"module"}