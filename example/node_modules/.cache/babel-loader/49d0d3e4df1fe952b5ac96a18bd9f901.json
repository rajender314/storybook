{"ast":null,"code":"/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { memo } from 'react';\nimport { sizeStyleMap } from './styles';\nvar skeletonStyles = css({\n  display: 'inline-block',\n  borderRadius: \"var(--ds-border-radius-circle, 50%)\"\n});\nvar subtleOpacityStyles = css({\n  opacity: 0.15\n});\nvar strongOpacityStyles = css({\n  opacity: 0.3\n});\n\n/**\n * __Skeleton__\n */\nvar Skeleton = /*#__PURE__*/memo(function Skeleton(_ref) {\n  var testId = _ref.testId,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$weight = _ref.weight,\n    weight = _ref$weight === void 0 ? 'normal' : _ref$weight;\n  return jsx(\"div\", {\n    \"data-testid\": testId,\n    style: {\n      backgroundColor: color\n    },\n    css: [skeletonStyles, weight === 'strong' ? strongOpacityStyles : subtleOpacityStyles, sizeStyleMap[size]]\n  });\n});\nexport default Skeleton;","map":{"version":3,"names":["css","jsx","memo","sizeStyleMap","skeletonStyles","display","borderRadius","subtleOpacityStyles","opacity","strongOpacityStyles","Skeleton","_ref","testId","_ref$size","size","_ref$color","color","_ref$weight","weight","style","backgroundColor"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/icon/dist/esm/components/skeleton.js"],"sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { memo } from 'react';\nimport { sizeStyleMap } from './styles';\nvar skeletonStyles = css({\n  display: 'inline-block',\n  borderRadius: \"var(--ds-border-radius-circle, 50%)\"\n});\nvar subtleOpacityStyles = css({\n  opacity: 0.15\n});\nvar strongOpacityStyles = css({\n  opacity: 0.3\n});\n\n/**\n * __Skeleton__\n */\nvar Skeleton = /*#__PURE__*/memo(function Skeleton(_ref) {\n  var testId = _ref.testId,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$weight = _ref.weight,\n    weight = _ref$weight === void 0 ? 'normal' : _ref$weight;\n  return jsx(\"div\", {\n    \"data-testid\": testId,\n    style: {\n      backgroundColor: color\n    },\n    css: [skeletonStyles, weight === 'strong' ? strongOpacityStyles : subtleOpacityStyles, sizeStyleMap[size]]\n  });\n});\nexport default Skeleton;"],"mappings":"AAAA;AACA,SAASA,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;AACzC,SAASC,IAAI,QAAQ,OAAO;AAC5B,SAASC,YAAY,QAAQ,UAAU;AACvC,IAAIC,cAAc,GAAGJ,GAAG,CAAC;EACvBK,OAAO,EAAE,cAAc;EACvBC,YAAY,EAAE;AAChB,CAAC,CAAC;AACF,IAAIC,mBAAmB,GAAGP,GAAG,CAAC;EAC5BQ,OAAO,EAAE;AACX,CAAC,CAAC;AACF,IAAIC,mBAAmB,GAAGT,GAAG,CAAC;EAC5BQ,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA,IAAIE,QAAQ,GAAG,aAAaR,IAAI,CAAC,SAASQ,QAAQA,CAACC,IAAI,EAAE;EACvD,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;IACtBC,SAAS,GAAGF,IAAI,CAACG,IAAI;IACrBA,IAAI,GAAGD,SAAS,KAAK,KAAK,CAAC,GAAG,QAAQ,GAAGA,SAAS;IAClDE,UAAU,GAAGJ,IAAI,CAACK,KAAK;IACvBA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAAC,GAAG,cAAc,GAAGA,UAAU;IAC3DE,WAAW,GAAGN,IAAI,CAACO,MAAM;IACzBA,MAAM,GAAGD,WAAW,KAAK,KAAK,CAAC,GAAG,QAAQ,GAAGA,WAAW;EAC1D,OAAOhB,GAAG,CAAC,KAAK,EAAE;IAChB,aAAa,EAAEW,MAAM;IACrBO,KAAK,EAAE;MACLC,eAAe,EAAEJ;IACnB,CAAC;IACDhB,GAAG,EAAE,CAACI,cAAc,EAAEc,MAAM,KAAK,QAAQ,GAAGT,mBAAmB,GAAGF,mBAAmB,EAAEJ,YAAY,CAACW,IAAI,CAAC;EAC3G,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,eAAeJ,QAAQ"},"metadata":{},"sourceType":"module"}