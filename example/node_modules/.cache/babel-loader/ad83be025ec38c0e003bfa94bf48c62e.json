{"ast":null,"code":"/** @jsx jsx */\nimport React, { useContext, useEffect, useLayoutEffect as useRealLayoutEffect } from 'react';\nimport { css, jsx, keyframes } from '@emotion/react';\nimport InteractionContext from '@atlaskit/interaction-context';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\n/**\n * Returns the appropriate circle stroke color.\n */\nfunction getStrokeColor(_ref) {\n  var mode = _ref.mode,\n    appearance = _ref.appearance;\n  if (mode === 'light') {\n    return appearance === 'inherit' ? \"var(--ds-icon-subtle, \".concat(N500, \")\") : \"var(--ds-icon-inverse, \".concat(N0, \")\");\n  }\n  return appearance === 'inherit' ? \"var(--ds-icon-subtle, \".concat(DN900, \")\") : \"var(--ds-icon-inverse, \".concat(DN500, \")\");\n}\nvar rotate = keyframes({\n  to: {\n    transform: 'rotate(360deg)'\n  }\n});\nvar rotateStyles = css({\n  animation: \"\".concat(rotate, \" 0.86s infinite\"),\n  animationTimingFunction: 'cubic-bezier(0.4, 0.15, 0.6, 0.85)',\n  transformOrigin: 'center'\n});\n\n/**\n * There are three parts to the load in animation:\n * 1. Fade in\n * 2. Accelerated spin\n * 3. Stretch the spinner line\n */\nvar loadIn = keyframes({\n  from: {\n    transform: 'rotate(50deg)',\n    opacity: 0,\n    strokeDashoffset: 60\n  },\n  to: {\n    transform: 'rotate(230deg)',\n    opacity: 1,\n    strokeDashoffset: 50\n  }\n});\nvar loadInStyles = css({\n  animation: \"\".concat(loadIn, \" 1s ease-in-out\"),\n  /**\n   * When the animation completes, stay at the last frame of the animation.\n   */\n  animationFillMode: 'forwards',\n  /**\n   * We are going to animate this in.\n   */\n  opacity: 0\n});\nvar wrapperStyles = css({\n  display: 'inline-flex',\n  /**\n   * Align better inline with text.\n   */\n  verticalAlign: 'middle'\n});\nvar circleStyles = css({\n  fill: 'none',\n  strokeDasharray: 60,\n  strokeDashoffset: 'inherit',\n  strokeLinecap: 'round',\n  strokeWidth: 1.5,\n  '@media screen and (forced-colors: active)': {\n    filter: 'grayscale(100%)',\n    stroke: 'CanvasText'\n  }\n});\n\n/**\n * `useLayoutEffect` is being used in SSR safe form. On the server, this work doesn’t need to run.\n * `useEffect` is used in-place, because `useEffect` is not run on the server and it matches types\n * which makes things simpler than doing an `isServer` check or a `null` check.\n *\n * @see https://hello.atlassian.net/wiki/spaces/DST/pages/2081696628/DSTDACI-010+-+Interaction+Tracing+hooks+in+DS+components\n */\nvar useLayoutEffect = typeof window === 'undefined' ? useEffect : useRealLayoutEffect;\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Spinner(_ref2, ref) {\n  var _ref2$appearance = _ref2.appearance,\n    appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,\n    _ref2$delay = _ref2.delay,\n    delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n    interactionName = _ref2.interactionName,\n    label = _ref2.label,\n    _ref2$size = _ref2.size,\n    providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size,\n    testId = _ref2.testId;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  var animationDelay = \"\".concat(delay, \"ms\");\n  var _useGlobalTheme = useGlobalTheme(),\n    mode = _useGlobalTheme.mode;\n  var stroke = getStrokeColor({\n    mode: mode,\n    appearance: appearance\n  });\n  var context = useContext(InteractionContext);\n  useLayoutEffect(function () {\n    if (context != null) {\n      return context.hold(interactionName);\n    }\n  }, [context, interactionName]);\n\n  /**\n   * The Spinner animation uses a combination of two\n   * css animations on two separate elements.\n   */\n  return jsx(\"span\", {\n    /**\n     * This span exists to off-load animations from the circle element,\n     * which were causing performance issues (style recalculations)\n     * on Safari and older versions of Chrome.\n     *\n     * This can be removed and styles placed back on the circle element once\n     * Safari fixes this bug and off-loads rendering to the GPU from the CPU.\n     */\n    css: [wrapperStyles, rotateStyles],\n    \"data-testid\": testId && \"\".concat(testId, \"-wrapper\"),\n    style: {\n      animationDelay: animationDelay,\n      width: size,\n      height: size\n    }\n  }, jsx(\"svg\", {\n    height: size,\n    width: size,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-testid\": testId,\n    ref: ref,\n    \"aria-label\": label,\n    css: loadInStyles,\n    style: {\n      animationDelay: animationDelay\n    }\n  }, jsx(\"circle\", {\n    cx: \"8\",\n    cy: \"8\",\n    r: \"7\",\n    css: circleStyles,\n    style: {\n      stroke: stroke\n    }\n  })));\n}));","map":{"version":3,"names":["React","useContext","useEffect","useLayoutEffect","useRealLayoutEffect","css","jsx","keyframes","InteractionContext","DN500","DN900","N0","N500","useGlobalTheme","presetSizes","getStrokeColor","_ref","mode","appearance","concat","rotate","to","transform","rotateStyles","animation","animationTimingFunction","transformOrigin","loadIn","from","opacity","strokeDashoffset","loadInStyles","animationFillMode","wrapperStyles","display","verticalAlign","circleStyles","fill","strokeDasharray","strokeLinecap","strokeWidth","filter","stroke","window","memo","forwardRef","Spinner","_ref2","ref","_ref2$appearance","_ref2$delay","delay","interactionName","label","_ref2$size","size","providedSize","testId","animationDelay","_useGlobalTheme","context","hold","style","width","height","viewBox","xmlns","cx","cy","r"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/spinner/dist/esm/spinner.js"],"sourcesContent":["/** @jsx jsx */\nimport React, { useContext, useEffect, useLayoutEffect as useRealLayoutEffect } from 'react';\nimport { css, jsx, keyframes } from '@emotion/react';\nimport InteractionContext from '@atlaskit/interaction-context';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\n/**\n * Returns the appropriate circle stroke color.\n */\nfunction getStrokeColor(_ref) {\n  var mode = _ref.mode,\n    appearance = _ref.appearance;\n  if (mode === 'light') {\n    return appearance === 'inherit' ? \"var(--ds-icon-subtle, \".concat(N500, \")\") : \"var(--ds-icon-inverse, \".concat(N0, \")\");\n  }\n  return appearance === 'inherit' ? \"var(--ds-icon-subtle, \".concat(DN900, \")\") : \"var(--ds-icon-inverse, \".concat(DN500, \")\");\n}\nvar rotate = keyframes({\n  to: {\n    transform: 'rotate(360deg)'\n  }\n});\nvar rotateStyles = css({\n  animation: \"\".concat(rotate, \" 0.86s infinite\"),\n  animationTimingFunction: 'cubic-bezier(0.4, 0.15, 0.6, 0.85)',\n  transformOrigin: 'center'\n});\n\n/**\n * There are three parts to the load in animation:\n * 1. Fade in\n * 2. Accelerated spin\n * 3. Stretch the spinner line\n */\nvar loadIn = keyframes({\n  from: {\n    transform: 'rotate(50deg)',\n    opacity: 0,\n    strokeDashoffset: 60\n  },\n  to: {\n    transform: 'rotate(230deg)',\n    opacity: 1,\n    strokeDashoffset: 50\n  }\n});\nvar loadInStyles = css({\n  animation: \"\".concat(loadIn, \" 1s ease-in-out\"),\n  /**\n   * When the animation completes, stay at the last frame of the animation.\n   */\n  animationFillMode: 'forwards',\n  /**\n   * We are going to animate this in.\n   */\n  opacity: 0\n});\nvar wrapperStyles = css({\n  display: 'inline-flex',\n  /**\n   * Align better inline with text.\n   */\n  verticalAlign: 'middle'\n});\nvar circleStyles = css({\n  fill: 'none',\n  strokeDasharray: 60,\n  strokeDashoffset: 'inherit',\n  strokeLinecap: 'round',\n  strokeWidth: 1.5,\n  '@media screen and (forced-colors: active)': {\n    filter: 'grayscale(100%)',\n    stroke: 'CanvasText'\n  }\n});\n\n/**\n * `useLayoutEffect` is being used in SSR safe form. On the server, this work doesn’t need to run.\n * `useEffect` is used in-place, because `useEffect` is not run on the server and it matches types\n * which makes things simpler than doing an `isServer` check or a `null` check.\n *\n * @see https://hello.atlassian.net/wiki/spaces/DST/pages/2081696628/DSTDACI-010+-+Interaction+Tracing+hooks+in+DS+components\n */\nvar useLayoutEffect = typeof window === 'undefined' ? useEffect : useRealLayoutEffect;\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Spinner(_ref2, ref) {\n  var _ref2$appearance = _ref2.appearance,\n    appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,\n    _ref2$delay = _ref2.delay,\n    delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n    interactionName = _ref2.interactionName,\n    label = _ref2.label,\n    _ref2$size = _ref2.size,\n    providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size,\n    testId = _ref2.testId;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  var animationDelay = \"\".concat(delay, \"ms\");\n  var _useGlobalTheme = useGlobalTheme(),\n    mode = _useGlobalTheme.mode;\n  var stroke = getStrokeColor({\n    mode: mode,\n    appearance: appearance\n  });\n  var context = useContext(InteractionContext);\n  useLayoutEffect(function () {\n    if (context != null) {\n      return context.hold(interactionName);\n    }\n  }, [context, interactionName]);\n\n  /**\n   * The Spinner animation uses a combination of two\n   * css animations on two separate elements.\n   */\n  return jsx(\"span\", {\n    /**\n     * This span exists to off-load animations from the circle element,\n     * which were causing performance issues (style recalculations)\n     * on Safari and older versions of Chrome.\n     *\n     * This can be removed and styles placed back on the circle element once\n     * Safari fixes this bug and off-loads rendering to the GPU from the CPU.\n     */\n    css: [wrapperStyles, rotateStyles],\n    \"data-testid\": testId && \"\".concat(testId, \"-wrapper\"),\n    style: {\n      animationDelay: animationDelay,\n      width: size,\n      height: size\n    }\n  }, jsx(\"svg\", {\n    height: size,\n    width: size,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-testid\": testId,\n    ref: ref,\n    \"aria-label\": label,\n    css: loadInStyles,\n    style: {\n      animationDelay: animationDelay\n    }\n  }, jsx(\"circle\", {\n    cx: \"8\",\n    cy: \"8\",\n    r: \"7\",\n    css: circleStyles,\n    style: {\n      stroke: stroke\n    }\n  })));\n}));"],"mappings":"AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,eAAe,IAAIC,mBAAmB,QAAQ,OAAO;AAC5F,SAASC,GAAG,EAAEC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;AACpD,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,SAASC,KAAK,EAAEC,KAAK,EAAEC,EAAE,EAAEC,IAAI,QAAQ,wBAAwB;AAC/D,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,WAAW,QAAQ,aAAa;AACzC;AACA;AACA;AACA,SAASC,cAAcA,CAACC,IAAI,EAAE;EAC5B,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;IAClBC,UAAU,GAAGF,IAAI,CAACE,UAAU;EAC9B,IAAID,IAAI,KAAK,OAAO,EAAE;IACpB,OAAOC,UAAU,KAAK,SAAS,GAAG,wBAAwB,CAACC,MAAM,CAACP,IAAI,EAAE,GAAG,CAAC,GAAG,yBAAyB,CAACO,MAAM,CAACR,EAAE,EAAE,GAAG,CAAC;EAC1H;EACA,OAAOO,UAAU,KAAK,SAAS,GAAG,wBAAwB,CAACC,MAAM,CAACT,KAAK,EAAE,GAAG,CAAC,GAAG,yBAAyB,CAACS,MAAM,CAACV,KAAK,EAAE,GAAG,CAAC;AAC9H;AACA,IAAIW,MAAM,GAAGb,SAAS,CAAC;EACrBc,EAAE,EAAE;IACFC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AACF,IAAIC,YAAY,GAAGlB,GAAG,CAAC;EACrBmB,SAAS,EAAE,EAAE,CAACL,MAAM,CAACC,MAAM,EAAE,iBAAiB,CAAC;EAC/CK,uBAAuB,EAAE,oCAAoC;EAC7DC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,MAAM,GAAGpB,SAAS,CAAC;EACrBqB,IAAI,EAAE;IACJN,SAAS,EAAE,eAAe;IAC1BO,OAAO,EAAE,CAAC;IACVC,gBAAgB,EAAE;EACpB,CAAC;EACDT,EAAE,EAAE;IACFC,SAAS,EAAE,gBAAgB;IAC3BO,OAAO,EAAE,CAAC;IACVC,gBAAgB,EAAE;EACpB;AACF,CAAC,CAAC;AACF,IAAIC,YAAY,GAAG1B,GAAG,CAAC;EACrBmB,SAAS,EAAE,EAAE,CAACL,MAAM,CAACQ,MAAM,EAAE,iBAAiB,CAAC;EAC/C;AACF;AACA;EACEK,iBAAiB,EAAE,UAAU;EAC7B;AACF;AACA;EACEH,OAAO,EAAE;AACX,CAAC,CAAC;AACF,IAAII,aAAa,GAAG5B,GAAG,CAAC;EACtB6B,OAAO,EAAE,aAAa;EACtB;AACF;AACA;EACEC,aAAa,EAAE;AACjB,CAAC,CAAC;AACF,IAAIC,YAAY,GAAG/B,GAAG,CAAC;EACrBgC,IAAI,EAAE,MAAM;EACZC,eAAe,EAAE,EAAE;EACnBR,gBAAgB,EAAE,SAAS;EAC3BS,aAAa,EAAE,OAAO;EACtBC,WAAW,EAAE,GAAG;EAChB,2CAA2C,EAAE;IAC3CC,MAAM,EAAE,iBAAiB;IACzBC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIvC,eAAe,GAAG,OAAOwC,MAAM,KAAK,WAAW,GAAGzC,SAAS,GAAGE,mBAAmB;AACrF,eAAe,aAAaJ,KAAK,CAAC4C,IAAI,EAAE,aAAa5C,KAAK,CAAC6C,UAAU,CAAC,SAASC,OAAOA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACjG,IAAIC,gBAAgB,GAAGF,KAAK,CAAC7B,UAAU;IACrCA,UAAU,GAAG+B,gBAAgB,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGA,gBAAgB;IACvEC,WAAW,GAAGH,KAAK,CAACI,KAAK;IACzBA,KAAK,GAAGD,WAAW,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,WAAW;IAChDE,eAAe,GAAGL,KAAK,CAACK,eAAe;IACvCC,KAAK,GAAGN,KAAK,CAACM,KAAK;IACnBC,UAAU,GAAGP,KAAK,CAACQ,IAAI;IACvBC,YAAY,GAAGF,UAAU,KAAK,KAAK,CAAC,GAAG,QAAQ,GAAGA,UAAU;IAC5DG,MAAM,GAAGV,KAAK,CAACU,MAAM;EACvB,IAAIF,IAAI,GAAG,OAAOC,YAAY,KAAK,QAAQ,GAAGA,YAAY,GAAG1C,WAAW,CAAC0C,YAAY,CAAC;EACtF,IAAIE,cAAc,GAAG,EAAE,CAACvC,MAAM,CAACgC,KAAK,EAAE,IAAI,CAAC;EAC3C,IAAIQ,eAAe,GAAG9C,cAAc,CAAC,CAAC;IACpCI,IAAI,GAAG0C,eAAe,CAAC1C,IAAI;EAC7B,IAAIyB,MAAM,GAAG3B,cAAc,CAAC;IAC1BE,IAAI,EAAEA,IAAI;IACVC,UAAU,EAAEA;EACd,CAAC,CAAC;EACF,IAAI0C,OAAO,GAAG3D,UAAU,CAACO,kBAAkB,CAAC;EAC5CL,eAAe,CAAC,YAAY;IAC1B,IAAIyD,OAAO,IAAI,IAAI,EAAE;MACnB,OAAOA,OAAO,CAACC,IAAI,CAACT,eAAe,CAAC;IACtC;EACF,CAAC,EAAE,CAACQ,OAAO,EAAER,eAAe,CAAC,CAAC;;EAE9B;AACF;AACA;AACA;EACE,OAAO9C,GAAG,CAAC,MAAM,EAAE;IACjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACID,GAAG,EAAE,CAAC4B,aAAa,EAAEV,YAAY,CAAC;IAClC,aAAa,EAAEkC,MAAM,IAAI,EAAE,CAACtC,MAAM,CAACsC,MAAM,EAAE,UAAU,CAAC;IACtDK,KAAK,EAAE;MACLJ,cAAc,EAAEA,cAAc;MAC9BK,KAAK,EAAER,IAAI;MACXS,MAAM,EAAET;IACV;EACF,CAAC,EAAEjD,GAAG,CAAC,KAAK,EAAE;IACZ0D,MAAM,EAAET,IAAI;IACZQ,KAAK,EAAER,IAAI;IACXU,OAAO,EAAE,WAAW;IACpBC,KAAK,EAAE,4BAA4B;IACnC,aAAa,EAAET,MAAM;IACrBT,GAAG,EAAEA,GAAG;IACR,YAAY,EAAEK,KAAK;IACnBhD,GAAG,EAAE0B,YAAY;IACjB+B,KAAK,EAAE;MACLJ,cAAc,EAAEA;IAClB;EACF,CAAC,EAAEpD,GAAG,CAAC,QAAQ,EAAE;IACf6D,EAAE,EAAE,GAAG;IACPC,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,GAAG;IACNhE,GAAG,EAAE+B,YAAY;IACjB0B,KAAK,EAAE;MACLpB,MAAM,EAAEA;IACV;EACF,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}