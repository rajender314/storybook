{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"level\", \"variant\"];\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { useHeading } from './heading-context';\nimport NewHeading from './heading.partial';\n// https://atlassian.design/foundations/typography\nvar levelMap = {\n  h900: 'h1',\n  h800: 'h1',\n  h700: 'h2',\n  h600: 'h3',\n  h500: 'h4',\n  h400: 'h5',\n  h300: 'h6',\n  // NB: These two levels are not covered at all by the existing @atlaskit/css-reset\n  h200: 'div',\n  h100: 'div'\n};\nvar headingResetStyles = css({\n  color: \"var(--ds-text, #172B4D)\",\n  marginBlock: \"var(--ds-space-0, 0px)\"\n});\nvar h900Styles = css({\n  fontSize: \"var(--ds-font-size-600, 35px)\",\n  fontWeight: \"var(--ds-font-weight-medium, 500)\",\n  letterSpacing: '-0.01em',\n  lineHeight: \"var(--ds-font-lineHeight-600, 40px)\"\n});\nvar h800Styles = css({\n  fontSize: \"var(--ds-font-size-500, 29px)\",\n  fontWeight: \"var(--ds-font-weight-semibold, 600)\",\n  letterSpacing: '-0.01em',\n  lineHeight: \"var(--ds-font-lineHeight-500, 32px)\"\n});\nvar h700Styles = css({\n  fontSize: \"var(--ds-font-size-400, 24px)\",\n  fontWeight: \"var(--ds-font-weight-medium, 500)\",\n  letterSpacing: '-0.01em',\n  lineHeight: \"var(--ds-font-lineHeight-400, 28px)\"\n});\nvar h600Styles = css({\n  fontSize: \"var(--ds-font-size-300, 20px)\",\n  fontWeight: \"var(--ds-font-weight-medium, 500)\",\n  letterSpacing: '-0.008em',\n  lineHeight: \"var(--ds-font-lineHeight-300, 24px)\"\n});\nvar h500Styles = css({\n  fontSize: \"var(--ds-font-size-200, 16px)\",\n  fontWeight: \"var(--ds-font-weight-semibold, 600)\",\n  letterSpacing: '-0.006em',\n  lineHeight: \"var(--ds-font-lineHeight-200, 20px)\"\n});\nvar h400Styles = css({\n  fontSize: \"var(--ds-font-size-100, 14px)\",\n  fontWeight: \"var(--ds-font-weight-semibold, 600)\",\n  letterSpacing: '-0.003em',\n  lineHeight: \"var(--ds-font-lineHeight-100, 16px)\"\n});\nvar h300Styles = css({\n  fontSize: \"var(--ds-font-size-075, 12px)\",\n  fontWeight: \"var(--ds-font-weight-semibold, 600)\",\n  letterSpacing: 0,\n  lineHeight: \"var(--ds-font-lineHeight-100, 16px)\",\n  textTransform: 'uppercase'\n});\nvar h200Styles = css({\n  fontSize: \"var(--ds-font-size-075, 12px)\",\n  fontWeight: \"var(--ds-font-weight-semibold, 600)\",\n  letterSpacing: 0,\n  lineHeight: \"var(--ds-font-lineHeight-100, 16px)\"\n});\nvar h100Styles = css({\n  fontSize: \"var(--ds-font-size-050, 11px)\",\n  fontWeight: \"var(--ds-font-weight-bold, 700)\",\n  letterSpacing: 0,\n  lineHeight: \"var(--ds-font-lineHeight-100, 16px)\"\n});\nvar inverseStyles = css({\n  color: \"var(--ds-text-inverse, #FFF)\"\n});\nvar subtlestStyles = css({\n  color: \"var(--ds-text-subtlest, #6B778C)\"\n});\n\n/**\n * __Heading__\n *\n * A heading is a typography component used to display text in different sizes and formats.\n *\n * @example\n *\n * ```jsx\n * import Heading from '@atlaskit/heading';\n *\n * const H100 = () => (\n *   <Heading level=\"h100\">h100</Heading>\n * );\n * ```\n */\nvar Heading = function Heading(_ref) {\n  var children = _ref.children,\n    level = _ref.level,\n    id = _ref.id,\n    testId = _ref.testId,\n    as = _ref.as,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'default' : _ref$color;\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' && as && typeof as !== 'string') {\n    throw new Error('`as` prop should be a string.');\n  }\n  var _useHeading = useHeading(levelMap[level]),\n    _useHeading2 = _slicedToArray(_useHeading, 2),\n    hLevel = _useHeading2[0],\n    inferredElement = _useHeading2[1];\n  var Markup = as || inferredElement;\n  var isSubtleHeading = level === 'h200' || level === 'h100';\n  var needsAriaRole = Markup === 'div' && hLevel;\n  return jsx(Markup, {\n    id: id,\n    \"data-testid\": testId,\n    role: needsAriaRole ? 'heading' : undefined,\n    \"aria-level\": needsAriaRole ? hLevel : undefined,\n    css: [headingResetStyles, level === 'h100' && h100Styles, level === 'h200' && h200Styles, level === 'h300' && h300Styles, level === 'h400' && h400Styles, level === 'h500' && h500Styles, level === 'h600' && h600Styles, level === 'h700' && h700Styles, level === 'h800' && h800Styles, level === 'h900' && h900Styles, color === 'inverse' && inverseStyles, color === 'default' && isSubtleHeading && subtlestStyles]\n  }, children);\n};\nexport default (function (_ref2) {\n  var level = _ref2.level,\n    variant = _ref2.variant,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  return level ?\n  // eslint-disable-next-line jsx-a11y/heading-has-content\n  jsx(Heading, _extends({\n    level: level\n  }, props)) :\n  // eslint-disable-next-line jsx-a11y/heading-has-content\n  jsx(NewHeading, _extends({\n    variant: variant\n  }, props));\n});","map":{"version":3,"names":["_extends","_objectWithoutProperties","_slicedToArray","_excluded","css","jsx","useHeading","NewHeading","levelMap","h900","h800","h700","h600","h500","h400","h300","h200","h100","headingResetStyles","color","marginBlock","h900Styles","fontSize","fontWeight","letterSpacing","lineHeight","h800Styles","h700Styles","h600Styles","h500Styles","h400Styles","h300Styles","textTransform","h200Styles","h100Styles","inverseStyles","subtlestStyles","Heading","_ref","children","level","id","testId","as","_ref$color","process","env","NODE_ENV","Error","_useHeading","_useHeading2","hLevel","inferredElement","Markup","isSubtleHeading","needsAriaRole","role","undefined","_ref2","variant","props"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/heading/dist/esm/heading.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"level\", \"variant\"];\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { useHeading } from './heading-context';\nimport NewHeading from './heading.partial';\n// https://atlassian.design/foundations/typography\nvar levelMap = {\n  h900: 'h1',\n  h800: 'h1',\n  h700: 'h2',\n  h600: 'h3',\n  h500: 'h4',\n  h400: 'h5',\n  h300: 'h6',\n  // NB: These two levels are not covered at all by the existing @atlaskit/css-reset\n  h200: 'div',\n  h100: 'div'\n};\nvar headingResetStyles = css({\n  color: \"var(--ds-text, #172B4D)\",\n  marginBlock: \"var(--ds-space-0, 0px)\"\n});\nvar h900Styles = css({\n  fontSize: \"var(--ds-font-size-600, 35px)\",\n  fontWeight: \"var(--ds-font-weight-medium, 500)\",\n  letterSpacing: '-0.01em',\n  lineHeight: \"var(--ds-font-lineHeight-600, 40px)\"\n});\nvar h800Styles = css({\n  fontSize: \"var(--ds-font-size-500, 29px)\",\n  fontWeight: \"var(--ds-font-weight-semibold, 600)\",\n  letterSpacing: '-0.01em',\n  lineHeight: \"var(--ds-font-lineHeight-500, 32px)\"\n});\nvar h700Styles = css({\n  fontSize: \"var(--ds-font-size-400, 24px)\",\n  fontWeight: \"var(--ds-font-weight-medium, 500)\",\n  letterSpacing: '-0.01em',\n  lineHeight: \"var(--ds-font-lineHeight-400, 28px)\"\n});\nvar h600Styles = css({\n  fontSize: \"var(--ds-font-size-300, 20px)\",\n  fontWeight: \"var(--ds-font-weight-medium, 500)\",\n  letterSpacing: '-0.008em',\n  lineHeight: \"var(--ds-font-lineHeight-300, 24px)\"\n});\nvar h500Styles = css({\n  fontSize: \"var(--ds-font-size-200, 16px)\",\n  fontWeight: \"var(--ds-font-weight-semibold, 600)\",\n  letterSpacing: '-0.006em',\n  lineHeight: \"var(--ds-font-lineHeight-200, 20px)\"\n});\nvar h400Styles = css({\n  fontSize: \"var(--ds-font-size-100, 14px)\",\n  fontWeight: \"var(--ds-font-weight-semibold, 600)\",\n  letterSpacing: '-0.003em',\n  lineHeight: \"var(--ds-font-lineHeight-100, 16px)\"\n});\nvar h300Styles = css({\n  fontSize: \"var(--ds-font-size-075, 12px)\",\n  fontWeight: \"var(--ds-font-weight-semibold, 600)\",\n  letterSpacing: 0,\n  lineHeight: \"var(--ds-font-lineHeight-100, 16px)\",\n  textTransform: 'uppercase'\n});\nvar h200Styles = css({\n  fontSize: \"var(--ds-font-size-075, 12px)\",\n  fontWeight: \"var(--ds-font-weight-semibold, 600)\",\n  letterSpacing: 0,\n  lineHeight: \"var(--ds-font-lineHeight-100, 16px)\"\n});\nvar h100Styles = css({\n  fontSize: \"var(--ds-font-size-050, 11px)\",\n  fontWeight: \"var(--ds-font-weight-bold, 700)\",\n  letterSpacing: 0,\n  lineHeight: \"var(--ds-font-lineHeight-100, 16px)\"\n});\nvar inverseStyles = css({\n  color: \"var(--ds-text-inverse, #FFF)\"\n});\nvar subtlestStyles = css({\n  color: \"var(--ds-text-subtlest, #6B778C)\"\n});\n\n/**\n * __Heading__\n *\n * A heading is a typography component used to display text in different sizes and formats.\n *\n * @example\n *\n * ```jsx\n * import Heading from '@atlaskit/heading';\n *\n * const H100 = () => (\n *   <Heading level=\"h100\">h100</Heading>\n * );\n * ```\n */\nvar Heading = function Heading(_ref) {\n  var children = _ref.children,\n    level = _ref.level,\n    id = _ref.id,\n    testId = _ref.testId,\n    as = _ref.as,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'default' : _ref$color;\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' && as && typeof as !== 'string') {\n    throw new Error('`as` prop should be a string.');\n  }\n  var _useHeading = useHeading(levelMap[level]),\n    _useHeading2 = _slicedToArray(_useHeading, 2),\n    hLevel = _useHeading2[0],\n    inferredElement = _useHeading2[1];\n  var Markup = as || inferredElement;\n  var isSubtleHeading = level === 'h200' || level === 'h100';\n  var needsAriaRole = Markup === 'div' && hLevel;\n  return jsx(Markup, {\n    id: id,\n    \"data-testid\": testId,\n    role: needsAriaRole ? 'heading' : undefined,\n    \"aria-level\": needsAriaRole ? hLevel : undefined,\n    css: [headingResetStyles, level === 'h100' && h100Styles, level === 'h200' && h200Styles, level === 'h300' && h300Styles, level === 'h400' && h400Styles, level === 'h500' && h500Styles, level === 'h600' && h600Styles, level === 'h700' && h700Styles, level === 'h800' && h800Styles, level === 'h900' && h900Styles, color === 'inverse' && inverseStyles, color === 'default' && isSubtleHeading && subtlestStyles]\n  }, children);\n};\nexport default (function (_ref2) {\n  var level = _ref2.level,\n    variant = _ref2.variant,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  return level ?\n  // eslint-disable-next-line jsx-a11y/heading-has-content\n  jsx(Heading, _extends({\n    level: level\n  }, props)) :\n  // eslint-disable-next-line jsx-a11y/heading-has-content\n  jsx(NewHeading, _extends({\n    variant: variant\n  }, props));\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}