{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"isSelected\", \"defaultSelected\", \"onClick\", \"shouldTitleWrap\", \"shouldDescriptionWrap\"];\nimport React, { useCallback } from 'react';\nimport noop from '@atlaskit/ds-lib/noop';\nimport { SELECTION_STYLE_CONTEXT_DO_NOT_USE } from '@atlaskit/menu';\nimport ButtonItem from '@atlaskit/menu/button-item';\nimport { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport RadioIcon from '../internal/components/radio-icon';\nimport useRadioState from '../internal/hooks/use-radio-state';\nimport useRegisterItemWithFocusManager from '../internal/hooks/use-register-item-with-focus-manager';\nimport isVoiceOverSupported from '../internal/utils/is-voice-over-supported';\n/**\n * __Dropdown item radio__\n *\n * A dropdown item radio displays groups that have a single selection.\n *\n * - [Examples](https://atlassian.design/components/dropdown-menu/dropdown-item-radio/examples)\n * - [Code](https://atlassian.design/components/dropdown-menu/dropdown-item-radio/code)\n * - [Usage](https://atlassian.design/components/dropdown-menu/dropdown-item-radio/usage)\n */\nvar DropdownItemRadio = function DropdownItemRadio(props) {\n  var id = props.id,\n    isSelected = props.isSelected,\n    defaultSelected = props.defaultSelected,\n    _props$onClick = props.onClick,\n    providedOnClick = _props$onClick === void 0 ? noop : _props$onClick,\n    _props$shouldTitleWra = props.shouldTitleWrap,\n    shouldTitleWrap = _props$shouldTitleWra === void 0 ? true : _props$shouldTitleWra,\n    _props$shouldDescript = props.shouldDescriptionWrap,\n    shouldDescriptionWrap = _props$shouldDescript === void 0 ? true : _props$shouldDescript,\n    rest = _objectWithoutProperties(props, _excluded);\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' && typeof isSelected !== 'undefined' && typeof defaultSelected !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console.warn(\"[DropdownItemRadio] You've used both `defaultSelected` and `isSelected` props. This is dangerous and can lead to unexpected results. Use one or the other depending if you want to control the components state yourself.\");\n  }\n  var _useRadioState = useRadioState({\n      id: id,\n      isSelected: isSelected,\n      defaultSelected: defaultSelected\n    }),\n    _useRadioState2 = _slicedToArray(_useRadioState, 2),\n    selected = _useRadioState2[0],\n    setSelected = _useRadioState2[1];\n  var onClickHandler = useCallback(function (event) {\n    setSelected(function (selected) {\n      return !selected;\n    });\n    providedOnClick(event);\n  }, [providedOnClick, setSelected]);\n  var itemRef = useRegisterItemWithFocusManager();\n  return /*#__PURE__*/React.createElement(SELECTION_STYLE_CONTEXT_DO_NOT_USE.Provider, {\n    value: \"none\"\n  }, /*#__PURE__*/React.createElement(ButtonItem, _extends({\n    id: id,\n    onClick: onClickHandler,\n    role: isVoiceOverSupported() ? 'radio' : 'menuitemradio',\n    \"aria-checked\": selected,\n    shouldTitleWrap: shouldTitleWrap,\n    shouldDescriptionWrap: shouldDescriptionWrap,\n    iconBefore: /*#__PURE__*/React.createElement(RadioIcon, {\n      checked: selected\n    }),\n    isSelected: selected && getBooleanFF('platform.design-system-team.menu-selected-state-change_0see9'),\n    ref: itemRef\n    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props\n  }, rest)));\n};\nexport default DropdownItemRadio;","map":{"version":3,"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","React","useCallback","noop","SELECTION_STYLE_CONTEXT_DO_NOT_USE","ButtonItem","getBooleanFF","RadioIcon","useRadioState","useRegisterItemWithFocusManager","isVoiceOverSupported","DropdownItemRadio","props","id","isSelected","defaultSelected","_props$onClick","onClick","providedOnClick","_props$shouldTitleWra","shouldTitleWrap","_props$shouldDescript","shouldDescriptionWrap","rest","process","env","NODE_ENV","console","warn","_useRadioState","_useRadioState2","selected","setSelected","onClickHandler","event","itemRef","createElement","Provider","value","role","iconBefore","checked","ref"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/dropdown-menu/dist/esm/radio/dropdown-item-radio.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"isSelected\", \"defaultSelected\", \"onClick\", \"shouldTitleWrap\", \"shouldDescriptionWrap\"];\nimport React, { useCallback } from 'react';\nimport noop from '@atlaskit/ds-lib/noop';\nimport { SELECTION_STYLE_CONTEXT_DO_NOT_USE } from '@atlaskit/menu';\nimport ButtonItem from '@atlaskit/menu/button-item';\nimport { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport RadioIcon from '../internal/components/radio-icon';\nimport useRadioState from '../internal/hooks/use-radio-state';\nimport useRegisterItemWithFocusManager from '../internal/hooks/use-register-item-with-focus-manager';\nimport isVoiceOverSupported from '../internal/utils/is-voice-over-supported';\n/**\n * __Dropdown item radio__\n *\n * A dropdown item radio displays groups that have a single selection.\n *\n * - [Examples](https://atlassian.design/components/dropdown-menu/dropdown-item-radio/examples)\n * - [Code](https://atlassian.design/components/dropdown-menu/dropdown-item-radio/code)\n * - [Usage](https://atlassian.design/components/dropdown-menu/dropdown-item-radio/usage)\n */\nvar DropdownItemRadio = function DropdownItemRadio(props) {\n  var id = props.id,\n    isSelected = props.isSelected,\n    defaultSelected = props.defaultSelected,\n    _props$onClick = props.onClick,\n    providedOnClick = _props$onClick === void 0 ? noop : _props$onClick,\n    _props$shouldTitleWra = props.shouldTitleWrap,\n    shouldTitleWrap = _props$shouldTitleWra === void 0 ? true : _props$shouldTitleWra,\n    _props$shouldDescript = props.shouldDescriptionWrap,\n    shouldDescriptionWrap = _props$shouldDescript === void 0 ? true : _props$shouldDescript,\n    rest = _objectWithoutProperties(props, _excluded);\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' && typeof isSelected !== 'undefined' && typeof defaultSelected !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console.warn(\"[DropdownItemRadio] You've used both `defaultSelected` and `isSelected` props. This is dangerous and can lead to unexpected results. Use one or the other depending if you want to control the components state yourself.\");\n  }\n  var _useRadioState = useRadioState({\n      id: id,\n      isSelected: isSelected,\n      defaultSelected: defaultSelected\n    }),\n    _useRadioState2 = _slicedToArray(_useRadioState, 2),\n    selected = _useRadioState2[0],\n    setSelected = _useRadioState2[1];\n  var onClickHandler = useCallback(function (event) {\n    setSelected(function (selected) {\n      return !selected;\n    });\n    providedOnClick(event);\n  }, [providedOnClick, setSelected]);\n  var itemRef = useRegisterItemWithFocusManager();\n  return /*#__PURE__*/React.createElement(SELECTION_STYLE_CONTEXT_DO_NOT_USE.Provider, {\n    value: \"none\"\n  }, /*#__PURE__*/React.createElement(ButtonItem, _extends({\n    id: id,\n    onClick: onClickHandler,\n    role: isVoiceOverSupported() ? 'radio' : 'menuitemradio',\n    \"aria-checked\": selected,\n    shouldTitleWrap: shouldTitleWrap,\n    shouldDescriptionWrap: shouldDescriptionWrap,\n    iconBefore: /*#__PURE__*/React.createElement(RadioIcon, {\n      checked: selected\n    }),\n    isSelected: selected && getBooleanFF('platform.design-system-team.menu-selected-state-change_0see9'),\n    ref: itemRef\n    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props\n  }, rest)));\n};\nexport default DropdownItemRadio;"],"mappings":"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"},"metadata":{},"sourceType":"module"}