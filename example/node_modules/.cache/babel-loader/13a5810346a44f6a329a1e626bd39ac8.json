{"ast":null,"code":"import { dimensions } from '../constants';\nimport { css } from '@emotion/react';\nexport var commonSVGStyles = {\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  /**\n   * Stop-color doesn't properly apply in chrome when the inherited/current color changes.\n   * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS\n   * rule) and then override it with currentColor for the color changes to be picked up.\n   */\n  stop: {\n    stopColor: 'currentColor'\n  }\n};\nvar smallStyles = css(dimensions.small);\nvar mediumStyles = css(dimensions.medium);\nvar largeStyles = css(dimensions.large);\nvar xlargeStyles = css(dimensions.xlarge);\n\n// pre-built css style-size map\nexport var sizeStyleMap = {\n  small: smallStyles,\n  medium: mediumStyles,\n  large: largeStyles,\n  xlarge: xlargeStyles\n};\n\n/**\n * Returns the width of the icon's parent span. This function has\n * special behaviour to deal with icon-file-type specifically.\n *\n * The reality is the SVG still has its own dimensions, so this is\n * a secondary fallback which in 95% of cases is not required.\n * It's only really being kept to maintain backward compatability.\n */\nexport var getIconSize = function getIconSize(_ref) {\n  var width = _ref.width,\n    height = _ref.height,\n    size = _ref.size;\n  if (width && height) {\n    return {\n      width: width,\n      height: height\n    };\n  }\n  if (size) {\n    return dimensions[size];\n  }\n  return undefined;\n};","map":{"version":3,"names":["dimensions","css","commonSVGStyles","overflow","pointerEvents","stop","stopColor","smallStyles","small","mediumStyles","medium","largeStyles","large","xlargeStyles","xlarge","sizeStyleMap","getIconSize","_ref","width","height","size","undefined"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/icon/dist/esm/components/styles.js"],"sourcesContent":["import { dimensions } from '../constants';\nimport { css } from '@emotion/react';\nexport var commonSVGStyles = {\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  /**\n   * Stop-color doesn't properly apply in chrome when the inherited/current color changes.\n   * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS\n   * rule) and then override it with currentColor for the color changes to be picked up.\n   */\n  stop: {\n    stopColor: 'currentColor'\n  }\n};\nvar smallStyles = css(dimensions.small);\nvar mediumStyles = css(dimensions.medium);\nvar largeStyles = css(dimensions.large);\nvar xlargeStyles = css(dimensions.xlarge);\n\n// pre-built css style-size map\nexport var sizeStyleMap = {\n  small: smallStyles,\n  medium: mediumStyles,\n  large: largeStyles,\n  xlarge: xlargeStyles\n};\n\n/**\n * Returns the width of the icon's parent span. This function has\n * special behaviour to deal with icon-file-type specifically.\n *\n * The reality is the SVG still has its own dimensions, so this is\n * a secondary fallback which in 95% of cases is not required.\n * It's only really being kept to maintain backward compatability.\n */\nexport var getIconSize = function getIconSize(_ref) {\n  var width = _ref.width,\n    height = _ref.height,\n    size = _ref.size;\n  if (width && height) {\n    return {\n      width: width,\n      height: height\n    };\n  }\n  if (size) {\n    return dimensions[size];\n  }\n  return undefined;\n};"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAO,IAAIC,eAAe,GAAG;EAC3BC,QAAQ,EAAE,QAAQ;EAClBC,aAAa,EAAE,MAAM;EACrB;AACF;AACA;AACA;AACA;EACEC,IAAI,EAAE;IACJC,SAAS,EAAE;EACb;AACF,CAAC;AACD,IAAIC,WAAW,GAAGN,GAAG,CAACD,UAAU,CAACQ,KAAK,CAAC;AACvC,IAAIC,YAAY,GAAGR,GAAG,CAACD,UAAU,CAACU,MAAM,CAAC;AACzC,IAAIC,WAAW,GAAGV,GAAG,CAACD,UAAU,CAACY,KAAK,CAAC;AACvC,IAAIC,YAAY,GAAGZ,GAAG,CAACD,UAAU,CAACc,MAAM,CAAC;;AAEzC;AACA,OAAO,IAAIC,YAAY,GAAG;EACxBP,KAAK,EAAED,WAAW;EAClBG,MAAM,EAAED,YAAY;EACpBG,KAAK,EAAED,WAAW;EAClBG,MAAM,EAAED;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIG,WAAW,GAAG,SAASA,WAAWA,CAACC,IAAI,EAAE;EAClD,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IACpBC,MAAM,GAAGF,IAAI,CAACE,MAAM;IACpBC,IAAI,GAAGH,IAAI,CAACG,IAAI;EAClB,IAAIF,KAAK,IAAIC,MAAM,EAAE;IACnB,OAAO;MACLD,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA;IACV,CAAC;EACH;EACA,IAAIC,IAAI,EAAE;IACR,OAAOpB,UAAU,CAACoB,IAAI,CAAC;EACzB;EACA,OAAOC,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module"}