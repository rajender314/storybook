{"ast":null,"code":"/** @jsx jsx */\nimport { Children, createRef, useCallback, useMemo } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport { useTabList } from '../hooks';\nimport { TabContext } from '../internal/context';\nimport { getTabListStyles } from '../internal/styles';\nimport { onMouseDownBlur } from '../internal/utils';\nvar baseStyles = css({\n  display: 'flex',\n  padding: \"var(--ds-space-0, 0px)\",\n  position: 'relative'\n});\n\n/**\n * __TabList__\n *\n * A TabList groups `Tab` components together.\n *\n * - [Examples](https://atlassian.design/components/tabs/examples)\n * - [Code](https://atlassian.design/components/tabs/code)\n * - [Usage](https://atlassian.design/components/tabs/usage)\n */\nvar TabList = function TabList(_ref) {\n  var children = _ref.children;\n  var _useGlobalTheme = useGlobalTheme(),\n    mode = _useGlobalTheme.mode;\n  var _useTabList = useTabList(),\n    tabsId = _useTabList.tabsId,\n    selected = _useTabList.selected,\n    onChange = _useTabList.onChange;\n  var ref = /*#__PURE__*/createRef();\n\n  // Don't include any conditional children\n  var childrenArray = Children.toArray(children).filter(Boolean);\n  var length = childrenArray.length;\n  var tabListStyles = useMemo(function () {\n    return getTabListStyles(mode);\n  }, [mode]);\n  var selectTabByIndex = useCallback(function (index) {\n    var _ref$current;\n    var newSelectedNode = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.querySelector(\"[id='\".concat(tabsId, \"-\").concat(index, \"']\"));\n    if (newSelectedNode) {\n      newSelectedNode.focus();\n    }\n    onChange(index);\n  }, [tabsId, ref, onChange]);\n  var onKeyDown = useCallback(function (e) {\n    if (!['ArrowRight', 'ArrowLeft', 'Home', 'End'].includes(e.key)) {\n      return;\n    }\n\n    // preventing horizontal or vertical scroll\n    e.preventDefault();\n    var lastTabIndex = length - 1;\n    if (['Home', 'End'].includes(e.key)) {\n      var _newSelected = e.key === 'Home' ? 0 : lastTabIndex;\n      selectTabByIndex(_newSelected);\n      return;\n    }\n\n    // We use aria-posinset so we don't rely on the selected variable\n    // If we used the selected variable this would regenerate each time\n    // and create an unstable reference\n    var selectedIndex = parseInt(e.currentTarget.getAttribute('aria-posinset') || '0') - 1;\n    var modifier = e.key === 'ArrowRight' ? 1 : -1;\n    var newSelected = selectedIndex + modifier;\n    if (newSelected < 0 || newSelected >= length) {\n      // Cycling focus to move from last to first and from first to last\n      newSelected = newSelected < 0 ? lastTabIndex : 0;\n    }\n    selectTabByIndex(newSelected);\n  }, [length, selectTabByIndex]);\n\n  // Memoized so the function isn't recreated each time\n  var getTabWithContext = useCallback(function (_ref2) {\n    var tab = _ref2.tab,\n      isSelected = _ref2.isSelected,\n      index = _ref2.index;\n    return jsx(TabContext.Provider, {\n      value: {\n        onClick: function onClick() {\n          return onChange(index);\n        },\n        onMouseDown: onMouseDownBlur,\n        onKeyDown: onKeyDown,\n        'aria-setsize': length,\n        role: 'tab',\n        id: \"\".concat(tabsId, \"-\").concat(index),\n        'aria-posinset': index + 1,\n        'aria-selected': isSelected,\n        'aria-controls': \"\".concat(tabsId, \"-\").concat(index, \"-tab\"),\n        tabIndex: isSelected ? 0 : -1\n      },\n      key: index\n    }, tab);\n  }, [length, onKeyDown, onChange, tabsId]);\n  return (\n    // Only styles that affect the TabList itself have been applied via primitives.\n    // The other styles applied through the CSS prop are there for styling children\n    // through inheritance. This is important for custom cases that use the useTab(),\n    // which applies accessibility atributes that we use as a styling hook.\n    jsx(\"div\", {\n      role: \"tablist\",\n      ref: ref\n      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n      ,\n\n      css: [baseStyles, tabListStyles]\n    }, childrenArray.map(function (child, index) {\n      return getTabWithContext({\n        tab: child,\n        index: index,\n        isSelected: index === selected\n      });\n    }))\n  );\n};\nexport default TabList;","map":{"version":3,"names":["Children","createRef","useCallback","useMemo","css","jsx","useGlobalTheme","useTabList","TabContext","getTabListStyles","onMouseDownBlur","baseStyles","display","padding","position","TabList","_ref","children","_useGlobalTheme","mode","_useTabList","tabsId","selected","onChange","ref","childrenArray","toArray","filter","Boolean","length","tabListStyles","selectTabByIndex","index","_ref$current","newSelectedNode","current","querySelector","concat","focus","onKeyDown","e","includes","key","preventDefault","lastTabIndex","_newSelected","selectedIndex","parseInt","currentTarget","getAttribute","modifier","newSelected","getTabWithContext","_ref2","tab","isSelected","Provider","value","onClick","onMouseDown","role","id","tabIndex","map","child"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/tabs/dist/esm/components/tab-list.js"],"sourcesContent":["/** @jsx jsx */\nimport { Children, createRef, useCallback, useMemo } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport { useTabList } from '../hooks';\nimport { TabContext } from '../internal/context';\nimport { getTabListStyles } from '../internal/styles';\nimport { onMouseDownBlur } from '../internal/utils';\nvar baseStyles = css({\n  display: 'flex',\n  padding: \"var(--ds-space-0, 0px)\",\n  position: 'relative'\n});\n\n/**\n * __TabList__\n *\n * A TabList groups `Tab` components together.\n *\n * - [Examples](https://atlassian.design/components/tabs/examples)\n * - [Code](https://atlassian.design/components/tabs/code)\n * - [Usage](https://atlassian.design/components/tabs/usage)\n */\nvar TabList = function TabList(_ref) {\n  var children = _ref.children;\n  var _useGlobalTheme = useGlobalTheme(),\n    mode = _useGlobalTheme.mode;\n  var _useTabList = useTabList(),\n    tabsId = _useTabList.tabsId,\n    selected = _useTabList.selected,\n    onChange = _useTabList.onChange;\n  var ref = /*#__PURE__*/createRef();\n\n  // Don't include any conditional children\n  var childrenArray = Children.toArray(children).filter(Boolean);\n  var length = childrenArray.length;\n  var tabListStyles = useMemo(function () {\n    return getTabListStyles(mode);\n  }, [mode]);\n  var selectTabByIndex = useCallback(function (index) {\n    var _ref$current;\n    var newSelectedNode = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.querySelector(\"[id='\".concat(tabsId, \"-\").concat(index, \"']\"));\n    if (newSelectedNode) {\n      newSelectedNode.focus();\n    }\n    onChange(index);\n  }, [tabsId, ref, onChange]);\n  var onKeyDown = useCallback(function (e) {\n    if (!['ArrowRight', 'ArrowLeft', 'Home', 'End'].includes(e.key)) {\n      return;\n    }\n\n    // preventing horizontal or vertical scroll\n    e.preventDefault();\n    var lastTabIndex = length - 1;\n    if (['Home', 'End'].includes(e.key)) {\n      var _newSelected = e.key === 'Home' ? 0 : lastTabIndex;\n      selectTabByIndex(_newSelected);\n      return;\n    }\n\n    // We use aria-posinset so we don't rely on the selected variable\n    // If we used the selected variable this would regenerate each time\n    // and create an unstable reference\n    var selectedIndex = parseInt(e.currentTarget.getAttribute('aria-posinset') || '0') - 1;\n    var modifier = e.key === 'ArrowRight' ? 1 : -1;\n    var newSelected = selectedIndex + modifier;\n    if (newSelected < 0 || newSelected >= length) {\n      // Cycling focus to move from last to first and from first to last\n      newSelected = newSelected < 0 ? lastTabIndex : 0;\n    }\n    selectTabByIndex(newSelected);\n  }, [length, selectTabByIndex]);\n\n  // Memoized so the function isn't recreated each time\n  var getTabWithContext = useCallback(function (_ref2) {\n    var tab = _ref2.tab,\n      isSelected = _ref2.isSelected,\n      index = _ref2.index;\n    return jsx(TabContext.Provider, {\n      value: {\n        onClick: function onClick() {\n          return onChange(index);\n        },\n        onMouseDown: onMouseDownBlur,\n        onKeyDown: onKeyDown,\n        'aria-setsize': length,\n        role: 'tab',\n        id: \"\".concat(tabsId, \"-\").concat(index),\n        'aria-posinset': index + 1,\n        'aria-selected': isSelected,\n        'aria-controls': \"\".concat(tabsId, \"-\").concat(index, \"-tab\"),\n        tabIndex: isSelected ? 0 : -1\n      },\n      key: index\n    }, tab);\n  }, [length, onKeyDown, onChange, tabsId]);\n  return (\n    // Only styles that affect the TabList itself have been applied via primitives.\n    // The other styles applied through the CSS prop are there for styling children\n    // through inheritance. This is important for custom cases that use the useTab(),\n    // which applies accessibility atributes that we use as a styling hook.\n    jsx(\"div\", {\n      role: \"tablist\",\n      ref: ref\n      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n      ,\n      css: [baseStyles, tabListStyles]\n    }, childrenArray.map(function (child, index) {\n      return getTabWithContext({\n        tab: child,\n        index: index,\n        isSelected: index === selected\n      });\n    }))\n  );\n};\nexport default TabList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}