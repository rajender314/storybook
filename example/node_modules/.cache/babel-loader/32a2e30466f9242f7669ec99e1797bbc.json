{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"analyticsContext\", \"appearance\", \"autoFocus\", \"buttonCss\", \"children\", \"className\", \"href\", \"component\", \"iconAfter\", \"iconBefore\", \"interactionName\", \"isDisabled\", \"isSelected\", \"onBlur\", \"onClick\", \"onFocus\", \"onMouseDown\", \"overlay\", \"shouldFitContainer\", \"spacing\", \"tabIndex\", \"type\", \"testId\"];\n/* eslint-disable @atlaskit/design-system/consistent-css-prop-usage */\n/** @jsx jsx */\nimport React, { useCallback, useContext, useEffect, useRef } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { usePlatformLeafEventHandler } from '@atlaskit/analytics-next';\nimport noop from '@atlaskit/ds-lib/noop';\nimport useAutoFocus from '@atlaskit/ds-lib/use-auto-focus';\nimport FocusRing from '@atlaskit/focus-ring';\n// eslint-disable-next-line no-duplicate-imports\nimport InteractionContext from '@atlaskit/interaction-context';\nimport { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport { N500 } from '@atlaskit/theme/colors';\nimport blockEvents from './block-events';\nimport { getContentStyle, getFadingCss, getIconStyle, overlayCss } from './css';\nimport { getIfVisuallyHiddenChildren } from './get-if-visually-hidden-children';\n\n// Disabled buttons will still publish events for nested elements in webkit.\n// We are disabling pointer events on child elements so that\n// the button will always be the target of events\n// Note: firefox does not have this behaviour for child elements\nvar noPointerEventsOnChildrenCss = {\n  '> *': {\n    pointerEvents: 'none'\n  }\n};\nvar iconBeforeSpacingFixStyle = css({\n  marginLeft: \"var(--ds-space-negative-025, -2px)\"\n});\nvar iconAfterSpacingFixStyle = css({\n  marginRight: \"var(--ds-space-negative-025, -2px)\"\n});\nvar getSpacingFix = function getSpacingFix(children, spacingStyles) {\n  if (!getBooleanFF('platform.design-system-team.icon-button-spacing-fix_o1zc5') || !children || getIfVisuallyHiddenChildren(children)) {\n    return null;\n  }\n  return spacingStyles;\n};\nvar getChildren = function getChildren(children, childrenStyles) {\n  if (getIfVisuallyHiddenChildren(children)) {\n    return children;\n  }\n  return children ? jsx(\"span\", {\n    css: childrenStyles\n  }, children) : null;\n};\nexport default /*#__PURE__*/React.forwardRef(function ButtonBase(props, ref) {\n  var analyticsContext = props.analyticsContext,\n    _props$appearance = props.appearance,\n    appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n    _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    buttonCss = props.buttonCss,\n    children = props.children,\n    className = props.className,\n    href = props.href,\n    _props$component = props.component,\n    Component = _props$component === void 0 ? href ? 'a' : 'button' : _props$component,\n    iconAfter = props.iconAfter,\n    iconBefore = props.iconBefore,\n    interactionName = props.interactionName,\n    _props$isDisabled = props.isDisabled,\n    isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n    _props$isSelected = props.isSelected,\n    isSelected = _props$isSelected === void 0 ? false : _props$isSelected,\n    onBlur = props.onBlur,\n    _props$onClick = props.onClick,\n    providedOnClick = _props$onClick === void 0 ? noop : _props$onClick,\n    onFocus = props.onFocus,\n    _props$onMouseDown = props.onMouseDown,\n    providedOnMouseDown = _props$onMouseDown === void 0 ? noop : _props$onMouseDown,\n    overlay = props.overlay,\n    shouldFitContainer = props.shouldFitContainer,\n    _props$spacing = props.spacing,\n    spacing = _props$spacing === void 0 ? 'default' : _props$spacing,\n    _props$tabIndex = props.tabIndex,\n    tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n    _props$type = props.type,\n    type = _props$type === void 0 ? !href ? 'button' : undefined : _props$type,\n    testId = props.testId,\n    rest = _objectWithoutProperties(props, _excluded);\n  var ourRef = useRef();\n  var setRef = useCallback(function (node) {\n    ourRef.current = node;\n    if (ref == null) {\n      return;\n    }\n    if (typeof ref === 'function') {\n      ref(node);\n      return;\n    }\n\n    // We can write to ref's `current` property, but Typescript does not like it.\n    // @ts-ignore\n    ref.current = node;\n  }, [ourRef, ref]);\n\n  // Cross browser auto focusing is pretty broken, so we are doing it ourselves\n  useAutoFocus(ourRef, autoFocus);\n  var interactionContext = useContext(InteractionContext);\n  var handleClick = useCallback(function (e, analyticsEvent) {\n    interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);\n    providedOnClick(e, analyticsEvent);\n  }, [providedOnClick, interactionContext, interactionName]);\n  var onClick = usePlatformLeafEventHandler({\n    fn: handleClick,\n    action: 'clicked',\n    componentName: 'button',\n    packageName: \"@atlaskit/button\",\n    packageVersion: \"16.16.0\",\n    analyticsData: analyticsContext\n  });\n\n  // Button currently calls preventDefault, which is not standard button behaviour\n  var onMouseDown = useCallback(function (event) {\n    event.preventDefault();\n    providedOnMouseDown(event);\n  }, [providedOnMouseDown]);\n\n  // Lose focus when becoming disabled (standard button behaviour)\n  useEffect(function () {\n    var el = ourRef.current;\n    if (isDisabled && el && el === document.activeElement) {\n      el.blur();\n    }\n  }, [isDisabled]);\n\n  // we are 'disabling' input with a button when there is an overlay\n  var hasOverlay = Boolean(overlay);\n  var fadeStyles = css(getFadingCss({\n    hasOverlay: hasOverlay\n  }));\n  var isInteractive = !isDisabled && !hasOverlay;\n\n  /**\n   * HACK: Spinner needs to have different colours in the \"new\" tokens design compared to the old design.\n   * For now, while we support both, these styles reach into Spinner when a theme is set, applies the right color.\n   * Ticket to remove: https://product-fabric.atlassian.net/browse/DSP-2067\n   */\n  var spinnerHackCss = {};\n  if (isSelected || isDisabled || appearance === 'warning') {\n    spinnerHackCss = {\n      '[data-theme] & circle': {\n        stroke: \"\".concat(isSelected || isDisabled ? \"var(--ds-icon-subtle, \".concat(N500, \")\") : \"var(--ds-icon-warning-inverse, \".concat(N500, \")\"), \" !important\")\n      }\n    };\n  }\n  return jsx(FocusRing, null, jsx(Component, _extends({}, rest, {\n    ref: setRef,\n    className: className,\n    css: [buttonCss, isInteractive ? null : noPointerEventsOnChildrenCss]\n    // using undefined so that the property doesn't exist when false\n    ,\n\n    \"data-has-overlay\": hasOverlay ? true : undefined,\n    \"data-testid\": testId,\n    disabled: isDisabled,\n    href: isInteractive ? href : undefined,\n    onBlur: onBlur,\n    onClick: onClick,\n    onFocus: onFocus,\n    onMouseDown: onMouseDown\n    // Adding a tab index so element is always focusable, even when not a <button> or <a>\n    // Disabling focus via keyboard navigation when disabled\n    // as this is standard button behaviour\n    ,\n\n    tabIndex: isDisabled ? -1 : tabIndex,\n    type: type\n  }, blockEvents({\n    isInteractive: isInteractive\n  })), iconBefore ? jsx(\"span\", {\n    css: [fadeStyles, getIconStyle({\n      spacing: spacing\n    }), getSpacingFix(children, iconBeforeSpacingFixStyle)]\n  }, iconBefore) : null, !getBooleanFF('platform.design-system-team.icon-button-spacing-fix_o1zc5') && children ? jsx(\"span\", {\n    css: [fadeStyles, getContentStyle({\n      spacing: spacing\n    })]\n  }, children) : null, getBooleanFF('platform.design-system-team.icon-button-spacing-fix_o1zc5') && getChildren(children, [fadeStyles, getContentStyle({\n    spacing: spacing\n  })]), iconAfter ? jsx(\"span\", {\n    css: [fadeStyles, getIconStyle({\n      spacing: spacing\n    }), getSpacingFix(children, iconAfterSpacingFixStyle)]\n  }, iconAfter) : null, overlay ? jsx(\"span\", {\n    css: [overlayCss, spinnerHackCss]\n  }, overlay) : null));\n});","map":{"version":3,"names":["_extends","_objectWithoutProperties","_excluded","React","useCallback","useContext","useEffect","useRef","css","jsx","usePlatformLeafEventHandler","noop","useAutoFocus","FocusRing","InteractionContext","getBooleanFF","N500","blockEvents","getContentStyle","getFadingCss","getIconStyle","overlayCss","getIfVisuallyHiddenChildren","noPointerEventsOnChildrenCss","pointerEvents","iconBeforeSpacingFixStyle","marginLeft","iconAfterSpacingFixStyle","marginRight","getSpacingFix","children","spacingStyles","getChildren","childrenStyles","forwardRef","ButtonBase","props","ref","analyticsContext","_props$appearance","appearance","_props$autoFocus","autoFocus","buttonCss","className","href","_props$component","component","Component","iconAfter","iconBefore","interactionName","_props$isDisabled","isDisabled","_props$isSelected","isSelected","onBlur","_props$onClick","onClick","providedOnClick","onFocus","_props$onMouseDown","onMouseDown","providedOnMouseDown","overlay","shouldFitContainer","_props$spacing","spacing","_props$tabIndex","tabIndex","_props$type","type","undefined","testId","rest","ourRef","setRef","node","current","interactionContext","handleClick","e","analyticsEvent","tracePress","timeStamp","fn","action","componentName","packageName","packageVersion","analyticsData","event","preventDefault","el","document","activeElement","blur","hasOverlay","Boolean","fadeStyles","isInteractive","spinnerHackCss","stroke","concat","disabled"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/button/dist/esm/old-button/shared/button-base.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"analyticsContext\", \"appearance\", \"autoFocus\", \"buttonCss\", \"children\", \"className\", \"href\", \"component\", \"iconAfter\", \"iconBefore\", \"interactionName\", \"isDisabled\", \"isSelected\", \"onBlur\", \"onClick\", \"onFocus\", \"onMouseDown\", \"overlay\", \"shouldFitContainer\", \"spacing\", \"tabIndex\", \"type\", \"testId\"];\n/* eslint-disable @atlaskit/design-system/consistent-css-prop-usage */\n/** @jsx jsx */\nimport React, { useCallback, useContext, useEffect, useRef } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { usePlatformLeafEventHandler } from '@atlaskit/analytics-next';\nimport noop from '@atlaskit/ds-lib/noop';\nimport useAutoFocus from '@atlaskit/ds-lib/use-auto-focus';\nimport FocusRing from '@atlaskit/focus-ring';\n// eslint-disable-next-line no-duplicate-imports\nimport InteractionContext from '@atlaskit/interaction-context';\nimport { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport { N500 } from '@atlaskit/theme/colors';\nimport blockEvents from './block-events';\nimport { getContentStyle, getFadingCss, getIconStyle, overlayCss } from './css';\nimport { getIfVisuallyHiddenChildren } from './get-if-visually-hidden-children';\n\n// Disabled buttons will still publish events for nested elements in webkit.\n// We are disabling pointer events on child elements so that\n// the button will always be the target of events\n// Note: firefox does not have this behaviour for child elements\nvar noPointerEventsOnChildrenCss = {\n  '> *': {\n    pointerEvents: 'none'\n  }\n};\nvar iconBeforeSpacingFixStyle = css({\n  marginLeft: \"var(--ds-space-negative-025, -2px)\"\n});\nvar iconAfterSpacingFixStyle = css({\n  marginRight: \"var(--ds-space-negative-025, -2px)\"\n});\nvar getSpacingFix = function getSpacingFix(children, spacingStyles) {\n  if (!getBooleanFF('platform.design-system-team.icon-button-spacing-fix_o1zc5') || !children || getIfVisuallyHiddenChildren(children)) {\n    return null;\n  }\n  return spacingStyles;\n};\nvar getChildren = function getChildren(children, childrenStyles) {\n  if (getIfVisuallyHiddenChildren(children)) {\n    return children;\n  }\n  return children ? jsx(\"span\", {\n    css: childrenStyles\n  }, children) : null;\n};\nexport default /*#__PURE__*/React.forwardRef(function ButtonBase(props, ref) {\n  var analyticsContext = props.analyticsContext,\n    _props$appearance = props.appearance,\n    appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n    _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    buttonCss = props.buttonCss,\n    children = props.children,\n    className = props.className,\n    href = props.href,\n    _props$component = props.component,\n    Component = _props$component === void 0 ? href ? 'a' : 'button' : _props$component,\n    iconAfter = props.iconAfter,\n    iconBefore = props.iconBefore,\n    interactionName = props.interactionName,\n    _props$isDisabled = props.isDisabled,\n    isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n    _props$isSelected = props.isSelected,\n    isSelected = _props$isSelected === void 0 ? false : _props$isSelected,\n    onBlur = props.onBlur,\n    _props$onClick = props.onClick,\n    providedOnClick = _props$onClick === void 0 ? noop : _props$onClick,\n    onFocus = props.onFocus,\n    _props$onMouseDown = props.onMouseDown,\n    providedOnMouseDown = _props$onMouseDown === void 0 ? noop : _props$onMouseDown,\n    overlay = props.overlay,\n    shouldFitContainer = props.shouldFitContainer,\n    _props$spacing = props.spacing,\n    spacing = _props$spacing === void 0 ? 'default' : _props$spacing,\n    _props$tabIndex = props.tabIndex,\n    tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n    _props$type = props.type,\n    type = _props$type === void 0 ? !href ? 'button' : undefined : _props$type,\n    testId = props.testId,\n    rest = _objectWithoutProperties(props, _excluded);\n  var ourRef = useRef();\n  var setRef = useCallback(function (node) {\n    ourRef.current = node;\n    if (ref == null) {\n      return;\n    }\n    if (typeof ref === 'function') {\n      ref(node);\n      return;\n    }\n\n    // We can write to ref's `current` property, but Typescript does not like it.\n    // @ts-ignore\n    ref.current = node;\n  }, [ourRef, ref]);\n\n  // Cross browser auto focusing is pretty broken, so we are doing it ourselves\n  useAutoFocus(ourRef, autoFocus);\n  var interactionContext = useContext(InteractionContext);\n  var handleClick = useCallback(function (e, analyticsEvent) {\n    interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);\n    providedOnClick(e, analyticsEvent);\n  }, [providedOnClick, interactionContext, interactionName]);\n  var onClick = usePlatformLeafEventHandler({\n    fn: handleClick,\n    action: 'clicked',\n    componentName: 'button',\n    packageName: \"@atlaskit/button\",\n    packageVersion: \"16.16.0\",\n    analyticsData: analyticsContext\n  });\n\n  // Button currently calls preventDefault, which is not standard button behaviour\n  var onMouseDown = useCallback(function (event) {\n    event.preventDefault();\n    providedOnMouseDown(event);\n  }, [providedOnMouseDown]);\n\n  // Lose focus when becoming disabled (standard button behaviour)\n  useEffect(function () {\n    var el = ourRef.current;\n    if (isDisabled && el && el === document.activeElement) {\n      el.blur();\n    }\n  }, [isDisabled]);\n\n  // we are 'disabling' input with a button when there is an overlay\n  var hasOverlay = Boolean(overlay);\n  var fadeStyles = css(getFadingCss({\n    hasOverlay: hasOverlay\n  }));\n  var isInteractive = !isDisabled && !hasOverlay;\n\n  /**\n   * HACK: Spinner needs to have different colours in the \"new\" tokens design compared to the old design.\n   * For now, while we support both, these styles reach into Spinner when a theme is set, applies the right color.\n   * Ticket to remove: https://product-fabric.atlassian.net/browse/DSP-2067\n   */\n  var spinnerHackCss = {};\n  if (isSelected || isDisabled || appearance === 'warning') {\n    spinnerHackCss = {\n      '[data-theme] & circle': {\n        stroke: \"\".concat(isSelected || isDisabled ? \"var(--ds-icon-subtle, \".concat(N500, \")\") : \"var(--ds-icon-warning-inverse, \".concat(N500, \")\"), \" !important\")\n      }\n    };\n  }\n  return jsx(FocusRing, null, jsx(Component, _extends({}, rest, {\n    ref: setRef,\n    className: className,\n    css: [buttonCss, isInteractive ? null : noPointerEventsOnChildrenCss]\n    // using undefined so that the property doesn't exist when false\n    ,\n    \"data-has-overlay\": hasOverlay ? true : undefined,\n    \"data-testid\": testId,\n    disabled: isDisabled,\n    href: isInteractive ? href : undefined,\n    onBlur: onBlur,\n    onClick: onClick,\n    onFocus: onFocus,\n    onMouseDown: onMouseDown\n    // Adding a tab index so element is always focusable, even when not a <button> or <a>\n    // Disabling focus via keyboard navigation when disabled\n    // as this is standard button behaviour\n    ,\n    tabIndex: isDisabled ? -1 : tabIndex,\n    type: type\n  }, blockEvents({\n    isInteractive: isInteractive\n  })), iconBefore ? jsx(\"span\", {\n    css: [fadeStyles, getIconStyle({\n      spacing: spacing\n    }), getSpacingFix(children, iconBeforeSpacingFixStyle)]\n  }, iconBefore) : null, !getBooleanFF('platform.design-system-team.icon-button-spacing-fix_o1zc5') && children ? jsx(\"span\", {\n    css: [fadeStyles, getContentStyle({\n      spacing: spacing\n    })]\n  }, children) : null, getBooleanFF('platform.design-system-team.icon-button-spacing-fix_o1zc5') && getChildren(children, [fadeStyles, getContentStyle({\n    spacing: spacing\n  })]), iconAfter ? jsx(\"span\", {\n    css: [fadeStyles, getIconStyle({\n      spacing: spacing\n    }), getSpacingFix(children, iconAfterSpacingFixStyle)]\n  }, iconAfter) : null, overlay ? jsx(\"span\", {\n    css: [overlayCss, spinnerHackCss]\n  }, overlay) : null));\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}