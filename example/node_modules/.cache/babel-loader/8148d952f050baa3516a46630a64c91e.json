{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/react';\nimport { groupedCountries } from './data/countries';\nimport Select from './Select';\n// custom option renderer\nvar labelStyles = css({\n  alignItems: 'center',\n  display: 'flex',\n  lineHeight: 1.2\n});\nvar flagStyles = css({\n  fontSize: '18px',\n  // TODO Delete this comment after verifying spacing token -> previous value `'8px'`\n  marginRight: \"var(--ds-scale-100, 8px)\"\n});\nvar Opt = function Opt(_ref) {\n  var children = _ref.children,\n    icon = _ref.icon;\n  return jsx(\"div\", {\n    css: labelStyles\n  }, jsx(\"span\", {\n    css: flagStyles\n  }, icon), children);\n}; // return the country name; used for searching\n\nvar getOptionLabel = function getOptionLabel(_ref2) {\n  var abbr = _ref2.abbr,\n    code = _ref2.code,\n    name = _ref2.name;\n  return \"\".concat(name, \" (\").concat(abbr.toUpperCase(), \") +\").concat(code);\n}; // set the country's abbreviation for the option value, (also searchable)\n\nvar getOptionValue = function getOptionValue(opt) {\n  return opt.abbr;\n}; // the text node of the control\n\nvar controlLabel = function controlLabel(opt) {\n  return jsx(Opt, {\n    icon: opt.icon\n  }, opt.abbr.toUpperCase());\n}; // the text node for an option\n\nvar optionLabel = function optionLabel(_ref3) {\n  var abbr = _ref3.abbr,\n    code = _ref3.code,\n    icon = _ref3.icon,\n    name = _ref3.name;\n  return jsx(Opt, {\n    icon: icon\n  }, getOptionLabel({\n    abbr: abbr,\n    code: code,\n    name: name\n  }));\n}; // switch formatters based on render context (menu | value)\n\nvar formatOptionLabel = function formatOptionLabel(opt, _ref4) {\n  var context = _ref4.context;\n  return context === 'value' ? controlLabel(opt) : optionLabel(opt);\n}; // put it all together\n\nvar CountrySelect = function CountrySelect(props) {\n  return jsx(Select, _extends({\n    isClearable: false,\n    formatOptionLabel: formatOptionLabel,\n    getOptionLabel: getOptionLabel,\n    getOptionValue: getOptionValue,\n    isMulti: false,\n    options: groupedCountries\n  }, props));\n};\nexport default CountrySelect;","map":{"version":3,"names":["_extends","jsx","css","groupedCountries","Select","labelStyles","alignItems","display","lineHeight","flagStyles","fontSize","marginRight","Opt","_ref","children","icon","getOptionLabel","_ref2","abbr","code","name","concat","toUpperCase","getOptionValue","opt","controlLabel","optionLabel","_ref3","formatOptionLabel","_ref4","context","CountrySelect","props","isClearable","isMulti","options"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/select/dist/esm/CountrySelect.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/react';\nimport { groupedCountries } from './data/countries';\nimport Select from './Select';\n// custom option renderer\nvar labelStyles = css({\n  alignItems: 'center',\n  display: 'flex',\n  lineHeight: 1.2\n});\nvar flagStyles = css({\n  fontSize: '18px',\n  // TODO Delete this comment after verifying spacing token -> previous value `'8px'`\n  marginRight: \"var(--ds-scale-100, 8px)\"\n});\n\nvar Opt = function Opt(_ref) {\n  var children = _ref.children,\n      icon = _ref.icon;\n  return jsx(\"div\", {\n    css: labelStyles\n  }, jsx(\"span\", {\n    css: flagStyles\n  }, icon), children);\n}; // return the country name; used for searching\n\n\nvar getOptionLabel = function getOptionLabel(_ref2) {\n  var abbr = _ref2.abbr,\n      code = _ref2.code,\n      name = _ref2.name;\n  return \"\".concat(name, \" (\").concat(abbr.toUpperCase(), \") +\").concat(code);\n}; // set the country's abbreviation for the option value, (also searchable)\n\n\nvar getOptionValue = function getOptionValue(opt) {\n  return opt.abbr;\n}; // the text node of the control\n\n\nvar controlLabel = function controlLabel(opt) {\n  return jsx(Opt, {\n    icon: opt.icon\n  }, opt.abbr.toUpperCase());\n}; // the text node for an option\n\n\nvar optionLabel = function optionLabel(_ref3) {\n  var abbr = _ref3.abbr,\n      code = _ref3.code,\n      icon = _ref3.icon,\n      name = _ref3.name;\n  return jsx(Opt, {\n    icon: icon\n  }, getOptionLabel({\n    abbr: abbr,\n    code: code,\n    name: name\n  }));\n}; // switch formatters based on render context (menu | value)\n\n\nvar formatOptionLabel = function formatOptionLabel(opt, _ref4) {\n  var context = _ref4.context;\n  return context === 'value' ? controlLabel(opt) : optionLabel(opt);\n}; // put it all together\n\n\nvar CountrySelect = function CountrySelect(props) {\n  return jsx(Select, _extends({\n    isClearable: false,\n    formatOptionLabel: formatOptionLabel,\n    getOptionLabel: getOptionLabel,\n    getOptionValue: getOptionValue,\n    isMulti: false,\n    options: groupedCountries\n  }, props));\n};\n\nexport default CountrySelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}