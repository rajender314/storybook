{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useRef, useState } from 'react';\n\n/**\n * Provides a boolean value for whether an element is focused.\n * The `bindFocus` function returned provides two event handlers:\n * - `onFocus` and `onBlur` which when triggered set `isFocused` accordingly.\n */\nexport default function useFocus() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocused = _useState2[0],\n    setIsFocused = _useState2[1];\n\n  // ensure bindFocus has a stable ref\n  var bindFocus = useRef({\n    onFocus: function onFocus() {\n      return setIsFocused(true);\n    },\n    onBlur: function onBlur() {\n      return setIsFocused(false);\n    }\n  });\n  useEffect(function () {\n    // handle the case where a component might\n    // unmount while being focused.\n    return function () {\n      return setIsFocused(false);\n    };\n  }, []);\n  return {\n    isFocused: isFocused,\n    bindFocus: bindFocus.current\n  };\n}","map":{"version":3,"names":["_slicedToArray","useEffect","useRef","useState","useFocus","_useState","_useState2","isFocused","setIsFocused","bindFocus","onFocus","onBlur","current"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-focus-event.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useRef, useState } from 'react';\n\n/**\n * Provides a boolean value for whether an element is focused.\n * The `bindFocus` function returned provides two event handlers:\n * - `onFocus` and `onBlur` which when triggered set `isFocused` accordingly.\n */\nexport default function useFocus() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocused = _useState2[0],\n    setIsFocused = _useState2[1];\n\n  // ensure bindFocus has a stable ref\n  var bindFocus = useRef({\n    onFocus: function onFocus() {\n      return setIsFocused(true);\n    },\n    onBlur: function onBlur() {\n      return setIsFocused(false);\n    }\n  });\n  useEffect(function () {\n    // handle the case where a component might\n    // unmount while being focused.\n    return function () {\n      return setIsFocused(false);\n    };\n  }, []);\n  return {\n    isFocused: isFocused,\n    bindFocus: bindFocus.current\n  };\n}"],"mappings":"AAAA,OAAOA,cAAc,MAAM,sCAAsC;AACjE,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;;AAEnD;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC,IAAIC,SAAS,GAAGF,QAAQ,CAAC,KAAK,CAAC;IAC7BG,UAAU,GAAGN,cAAc,CAACK,SAAS,EAAE,CAAC,CAAC;IACzCE,SAAS,GAAGD,UAAU,CAAC,CAAC,CAAC;IACzBE,YAAY,GAAGF,UAAU,CAAC,CAAC,CAAC;;EAE9B;EACA,IAAIG,SAAS,GAAGP,MAAM,CAAC;IACrBQ,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;MAC1B,OAAOF,YAAY,CAAC,IAAI,CAAC;IAC3B,CAAC;IACDG,MAAM,EAAE,SAASA,MAAMA,CAAA,EAAG;MACxB,OAAOH,YAAY,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC,CAAC;EACFP,SAAS,CAAC,YAAY;IACpB;IACA;IACA,OAAO,YAAY;MACjB,OAAOO,YAAY,CAAC,KAAK,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IACLD,SAAS,EAAEA,SAAS;IACpBE,SAAS,EAAEA,SAAS,CAACG;EACvB,CAAC;AACH"},"metadata":{},"sourceType":"module"}