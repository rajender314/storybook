{"ast":null,"code":"import { COLOR_MODE_ATTRIBUTE, CUSTOM_THEME_ATTRIBUTE } from './constants';\nimport { themeStateDefaults } from './theme-config';\nimport { limitSizeOfCustomStyleElements, reduceTokenMap } from './utils/custom-theme-loading-utils';\nimport { generateColors, generateTokenMapWithContrastCheck } from './utils/generate-custom-color-ramp';\nimport { hash } from './utils/hash';\nexport var CUSTOM_STYLE_ELEMENTS_SIZE_THRESHOLD = 10;\n\n/**\n *\n * @param themeSchema The schema of available themes\n * @returns a string with the CSS for the custom theme\n */\n/**\n * Takes a color mode and custom branding options, and returns an array of objects for use in applying custom styles to the document head.\n * Only supplies the color themes necessary for initial render, based on the current themeState. I.e. if in light mode, dark mode themes are not returned.\n *\n * @param {Object<string, string>} themeState The themes and color mode that should be applied.\n * @param {string} themeState.colorMode Determines which color theme is applied\n * @param {Object} themeState.UNSAFE_themeOptions The custom branding options to be used for custom theme generation\n *\n * @returns An object array, containing theme IDs, data-attributes to attach to the theme, and the theme CSS.\n * If an error is encountered while loading themes, the themes array will be empty.\n */\nexport function getCustomThemeStyles(themeState) {\n  var _themeState$UNSAFE_th;\n  var brandColor = themeState === null || themeState === void 0 || (_themeState$UNSAFE_th = themeState.UNSAFE_themeOptions) === null || _themeState$UNSAFE_th === void 0 ? void 0 : _themeState$UNSAFE_th.brandColor;\n  var mode = (themeState === null || themeState === void 0 ? void 0 : themeState.colorMode) || themeStateDefaults['colorMode'];\n  var optionString = JSON.stringify(themeState === null || themeState === void 0 ? void 0 : themeState.UNSAFE_themeOptions);\n  var uniqueId = hash(optionString);\n  var themeRamp = generateColors(brandColor).ramp;\n\n  // outputs object to generate to CSS from\n  var themes = [];\n  var tokenMaps = generateTokenMapWithContrastCheck(brandColor, mode, themeRamp);\n  if ((mode === 'light' || mode === 'auto') && tokenMaps.light) {\n    // Light mode theming\n    themes.push({\n      id: 'light',\n      attrs: {\n        'data-theme': 'light',\n        'data-custom-theme': uniqueId\n      },\n      css: \"\\nhtml[\".concat(CUSTOM_THEME_ATTRIBUTE, \"=\\\"\").concat(uniqueId, \"\\\"][\").concat(COLOR_MODE_ATTRIBUTE, \"=\\\"light\\\"][data-theme~=\\\"light:light\\\"] {\\n  /* Branded tokens */\\n    \").concat(reduceTokenMap(tokenMaps.light, themeRamp), \"\\n}\")\n    });\n  }\n  if ((mode === 'dark' || mode === 'auto') && tokenMaps.dark) {\n    // Dark mode theming\n    themes.push({\n      id: 'dark',\n      attrs: {\n        'data-theme': 'dark',\n        'data-custom-theme': uniqueId\n      },\n      css: \"\\nhtml[\".concat(CUSTOM_THEME_ATTRIBUTE, \"=\\\"\").concat(uniqueId, \"\\\"][\").concat(COLOR_MODE_ATTRIBUTE, \"=\\\"dark\\\"][data-theme~=\\\"dark:dark\\\"] {\\n  /* Branded tokens */\\n    \").concat(reduceTokenMap(tokenMaps.dark, themeRamp), \"\\n}\")\n    });\n  }\n  return themes;\n}\nexport function loadAndAppendCustomThemeCss(themeState) {\n  var themes = getCustomThemeStyles(themeState);\n  limitSizeOfCustomStyleElements(CUSTOM_STYLE_ELEMENTS_SIZE_THRESHOLD);\n  themes.map(function (theme) {\n    var styleTag = document.createElement('style');\n    document.head.appendChild(styleTag);\n    styleTag.dataset.theme = theme.attrs['data-theme'];\n    styleTag.dataset.customTheme = theme.attrs['data-custom-theme'];\n    styleTag.textContent = theme.css;\n  });\n}","map":{"version":3,"names":["COLOR_MODE_ATTRIBUTE","CUSTOM_THEME_ATTRIBUTE","themeStateDefaults","limitSizeOfCustomStyleElements","reduceTokenMap","generateColors","generateTokenMapWithContrastCheck","hash","CUSTOM_STYLE_ELEMENTS_SIZE_THRESHOLD","getCustomThemeStyles","themeState","_themeState$UNSAFE_th","brandColor","UNSAFE_themeOptions","mode","colorMode","optionString","JSON","stringify","uniqueId","themeRamp","ramp","themes","tokenMaps","light","push","id","attrs","css","concat","dark","loadAndAppendCustomThemeCss","map","theme","styleTag","document","createElement","head","appendChild","dataset","customTheme","textContent"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/drawer/node_modules/@atlaskit/tokens/dist/esm/custom-theme.js"],"sourcesContent":["import { COLOR_MODE_ATTRIBUTE, CUSTOM_THEME_ATTRIBUTE } from './constants';\nimport { themeStateDefaults } from './theme-config';\nimport { limitSizeOfCustomStyleElements, reduceTokenMap } from './utils/custom-theme-loading-utils';\nimport { generateColors, generateTokenMapWithContrastCheck } from './utils/generate-custom-color-ramp';\nimport { hash } from './utils/hash';\nexport var CUSTOM_STYLE_ELEMENTS_SIZE_THRESHOLD = 10;\n\n/**\n *\n * @param themeSchema The schema of available themes\n * @returns a string with the CSS for the custom theme\n */\n/**\n * Takes a color mode and custom branding options, and returns an array of objects for use in applying custom styles to the document head.\n * Only supplies the color themes necessary for initial render, based on the current themeState. I.e. if in light mode, dark mode themes are not returned.\n *\n * @param {Object<string, string>} themeState The themes and color mode that should be applied.\n * @param {string} themeState.colorMode Determines which color theme is applied\n * @param {Object} themeState.UNSAFE_themeOptions The custom branding options to be used for custom theme generation\n *\n * @returns An object array, containing theme IDs, data-attributes to attach to the theme, and the theme CSS.\n * If an error is encountered while loading themes, the themes array will be empty.\n */\nexport function getCustomThemeStyles(themeState) {\n  var _themeState$UNSAFE_th;\n  var brandColor = themeState === null || themeState === void 0 || (_themeState$UNSAFE_th = themeState.UNSAFE_themeOptions) === null || _themeState$UNSAFE_th === void 0 ? void 0 : _themeState$UNSAFE_th.brandColor;\n  var mode = (themeState === null || themeState === void 0 ? void 0 : themeState.colorMode) || themeStateDefaults['colorMode'];\n  var optionString = JSON.stringify(themeState === null || themeState === void 0 ? void 0 : themeState.UNSAFE_themeOptions);\n  var uniqueId = hash(optionString);\n  var themeRamp = generateColors(brandColor).ramp;\n\n  // outputs object to generate to CSS from\n  var themes = [];\n  var tokenMaps = generateTokenMapWithContrastCheck(brandColor, mode, themeRamp);\n  if ((mode === 'light' || mode === 'auto') && tokenMaps.light) {\n    // Light mode theming\n    themes.push({\n      id: 'light',\n      attrs: {\n        'data-theme': 'light',\n        'data-custom-theme': uniqueId\n      },\n      css: \"\\nhtml[\".concat(CUSTOM_THEME_ATTRIBUTE, \"=\\\"\").concat(uniqueId, \"\\\"][\").concat(COLOR_MODE_ATTRIBUTE, \"=\\\"light\\\"][data-theme~=\\\"light:light\\\"] {\\n  /* Branded tokens */\\n    \").concat(reduceTokenMap(tokenMaps.light, themeRamp), \"\\n}\")\n    });\n  }\n  if ((mode === 'dark' || mode === 'auto') && tokenMaps.dark) {\n    // Dark mode theming\n    themes.push({\n      id: 'dark',\n      attrs: {\n        'data-theme': 'dark',\n        'data-custom-theme': uniqueId\n      },\n      css: \"\\nhtml[\".concat(CUSTOM_THEME_ATTRIBUTE, \"=\\\"\").concat(uniqueId, \"\\\"][\").concat(COLOR_MODE_ATTRIBUTE, \"=\\\"dark\\\"][data-theme~=\\\"dark:dark\\\"] {\\n  /* Branded tokens */\\n    \").concat(reduceTokenMap(tokenMaps.dark, themeRamp), \"\\n}\")\n    });\n  }\n  return themes;\n}\nexport function loadAndAppendCustomThemeCss(themeState) {\n  var themes = getCustomThemeStyles(themeState);\n  limitSizeOfCustomStyleElements(CUSTOM_STYLE_ELEMENTS_SIZE_THRESHOLD);\n  themes.map(function (theme) {\n    var styleTag = document.createElement('style');\n    document.head.appendChild(styleTag);\n    styleTag.dataset.theme = theme.attrs['data-theme'];\n    styleTag.dataset.customTheme = theme.attrs['data-custom-theme'];\n    styleTag.textContent = theme.css;\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}