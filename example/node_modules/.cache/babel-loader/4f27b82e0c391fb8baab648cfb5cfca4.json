{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { themeIds } from './theme-config';\nvar themeKinds = ['light', 'dark', 'spacing', 'typography', 'shape'];\nvar customThemeOptions = 'UNSAFE_themeOptions';\nvar isThemeKind = function isThemeKind(themeKind) {\n  return themeKinds.find(function (kind) {\n    return kind === themeKind;\n  }) !== undefined;\n};\nvar isThemeIds = function isThemeIds(themeId) {\n  return themeIds.find(function (id) {\n    return id === themeId;\n  }) !== undefined;\n};\nvar isColorMode = function isColorMode(modeId) {\n  return ['light', 'dark', 'auto'].includes(modeId);\n};\n/**\n * Converts a string that is formatted for the `data-theme` HTML attribute\n * to an object that can be passed to `setGlobalTheme`.\n *\n * @param {string} themes The themes that should be applied.\n *\n * @example\n * ```\n * themeStringToObject('dark:dark light:legacy-light spacing:spacing');\n * // returns { dark: 'dark', light: 'legacy-light', spacing: 'spacing' }\n * ```\n */\nexport var themeStringToObject = function themeStringToObject(themeState) {\n  return themeState.split(' ').map(function (theme) {\n    return theme.split(/:([\\s\\S]*)/);\n  }).reduce(function (themeObject, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      kind = _ref2[0],\n      id = _ref2[1];\n    if (kind === 'colorMode' && isColorMode(id)) {\n      themeObject[kind] = id;\n    }\n    if (isThemeKind(kind) && isThemeIds(id)) {\n      // @ts-expect-error FIXME - this is a valid ts error\n      themeObject[kind] = id;\n    }\n    if (kind === customThemeOptions) {\n      try {\n        themeObject[customThemeOptions] = JSON.parse(id);\n      } catch (e) {\n        new Error('Invalid custom theme string');\n      }\n    }\n    return themeObject;\n  }, {});\n};\n\n/**\n * Converts a theme object to a string formatted for the `data-theme` HTML attribute.\n *\n * @param {object} themes The themes that should be applied.\n *\n * @example\n * ```\n * themeObjectToString({ dark: 'dark', light: 'legacy-light', spacing: 'spacing' });\n * // returns 'dark:dark light:legacy-light spacing:spacing'\n * ```\n */\nexport var themeObjectToString = function themeObjectToString(themeState) {\n  return Object.entries(themeState).reduce(function (themeString, _ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      kind = _ref4[0],\n      id = _ref4[1];\n    if (\n    // colorMode theme state\n    kind === 'colorMode' && typeof id === 'string' && isColorMode(id) ||\n    // custom theme state\n    kind === customThemeOptions && _typeof(id) === 'object' ||\n    // other theme states\n    isThemeKind(kind) && typeof id === 'string' && isThemeIds(id)) {\n      return themeString + \"\".concat(themeString ? ' ' : '') + \"\".concat(kind, \":\").concat(_typeof(id) === 'object' ? JSON.stringify(id) : id);\n    }\n    return themeString;\n  }, '');\n};","map":{"version":3,"names":["_typeof","_slicedToArray","themeIds","themeKinds","customThemeOptions","isThemeKind","themeKind","find","kind","undefined","isThemeIds","themeId","id","isColorMode","modeId","includes","themeStringToObject","themeState","split","map","theme","reduce","themeObject","_ref","_ref2","JSON","parse","e","Error","themeObjectToString","Object","entries","themeString","_ref3","_ref4","concat","stringify"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/theme-state-transformer.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { themeIds } from './theme-config';\nvar themeKinds = ['light', 'dark', 'spacing', 'typography', 'shape'];\nvar customThemeOptions = 'UNSAFE_themeOptions';\nvar isThemeKind = function isThemeKind(themeKind) {\n  return themeKinds.find(function (kind) {\n    return kind === themeKind;\n  }) !== undefined;\n};\nvar isThemeIds = function isThemeIds(themeId) {\n  return themeIds.find(function (id) {\n    return id === themeId;\n  }) !== undefined;\n};\nvar isColorMode = function isColorMode(modeId) {\n  return ['light', 'dark', 'auto'].includes(modeId);\n};\n/**\n * Converts a string that is formatted for the `data-theme` HTML attribute\n * to an object that can be passed to `setGlobalTheme`.\n *\n * @param {string} themes The themes that should be applied.\n *\n * @example\n * ```\n * themeStringToObject('dark:dark light:legacy-light spacing:spacing');\n * // returns { dark: 'dark', light: 'legacy-light', spacing: 'spacing' }\n * ```\n */\nexport var themeStringToObject = function themeStringToObject(themeState) {\n  return themeState.split(' ').map(function (theme) {\n    return theme.split(/:([\\s\\S]*)/);\n  }).reduce(function (themeObject, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      kind = _ref2[0],\n      id = _ref2[1];\n    if (kind === 'colorMode' && isColorMode(id)) {\n      themeObject[kind] = id;\n    }\n    if (isThemeKind(kind) && isThemeIds(id)) {\n      // @ts-expect-error FIXME - this is a valid ts error\n      themeObject[kind] = id;\n    }\n    if (kind === customThemeOptions) {\n      try {\n        themeObject[customThemeOptions] = JSON.parse(id);\n      } catch (e) {\n        new Error('Invalid custom theme string');\n      }\n    }\n    return themeObject;\n  }, {});\n};\n\n/**\n * Converts a theme object to a string formatted for the `data-theme` HTML attribute.\n *\n * @param {object} themes The themes that should be applied.\n *\n * @example\n * ```\n * themeObjectToString({ dark: 'dark', light: 'legacy-light', spacing: 'spacing' });\n * // returns 'dark:dark light:legacy-light spacing:spacing'\n * ```\n */\nexport var themeObjectToString = function themeObjectToString(themeState) {\n  return Object.entries(themeState).reduce(function (themeString, _ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      kind = _ref4[0],\n      id = _ref4[1];\n    if (\n    // colorMode theme state\n    kind === 'colorMode' && typeof id === 'string' && isColorMode(id) ||\n    // custom theme state\n    kind === customThemeOptions && _typeof(id) === 'object' ||\n    // other theme states\n    isThemeKind(kind) && typeof id === 'string' && isThemeIds(id)) {\n      return themeString + \"\".concat(themeString ? ' ' : '') + \"\".concat(kind, \":\").concat(_typeof(id) === 'object' ? JSON.stringify(id) : id);\n    }\n    return themeString;\n  }, '');\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}