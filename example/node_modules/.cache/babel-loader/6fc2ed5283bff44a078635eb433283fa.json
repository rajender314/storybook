{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { COLOR_MODE_ATTRIBUTE, THEME_DATA_ATTRIBUTE } from './constants';\nimport getGlobalTheme from './get-global-theme';\n/**\n * A MutationObserver which watches the `<html>` element for changes to the theme.\n *\n * In React, use the {@link useThemeObserver `useThemeObserver`} hook instead.\n *\n * @param {function} callback - A callback function which fires when the theme changes.\n *\n * @example\n * ```\n * const observer = new ThemeMutationObserver((theme) => {});\n * observer.observe();\n * ```\n */\nvar ThemeMutationObserver = /*#__PURE__*/function () {\n  function ThemeMutationObserver(callback) {\n    _classCallCheck(this, ThemeMutationObserver);\n    _defineProperty(this, \"observer\", null);\n    _defineProperty(this, \"mediaObserver\", null);\n    this.callback = callback;\n  }\n  _createClass(ThemeMutationObserver, [{\n    key: \"observe\",\n    value: function observe() {\n      var _this = this;\n      if (!this.observer) {\n        this.observer = new MutationObserver(function () {\n          _this.callback(getGlobalTheme());\n        });\n      }\n      this.observer.observe(document.documentElement, {\n        attributeFilter: [THEME_DATA_ATTRIBUTE, COLOR_MODE_ATTRIBUTE]\n      });\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.observer && this.observer.disconnect();\n    }\n  }]);\n  return ThemeMutationObserver;\n}();\nexport { ThemeMutationObserver as default };","map":{"version":3,"names":["_classCallCheck","_createClass","_defineProperty","COLOR_MODE_ATTRIBUTE","THEME_DATA_ATTRIBUTE","getGlobalTheme","ThemeMutationObserver","callback","key","value","observe","_this","observer","MutationObserver","document","documentElement","attributeFilter","disconnect","default"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/app-provider/node_modules/@atlaskit/tokens/dist/esm/theme-mutation-observer.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { COLOR_MODE_ATTRIBUTE, THEME_DATA_ATTRIBUTE } from './constants';\nimport getGlobalTheme from './get-global-theme';\n/**\n * A MutationObserver which watches the `<html>` element for changes to the theme.\n *\n * In React, use the {@link useThemeObserver `useThemeObserver`} hook instead.\n *\n * @param {function} callback - A callback function which fires when the theme changes.\n *\n * @example\n * ```\n * const observer = new ThemeMutationObserver((theme) => {});\n * observer.observe();\n * ```\n */\nvar ThemeMutationObserver = /*#__PURE__*/function () {\n  function ThemeMutationObserver(callback) {\n    _classCallCheck(this, ThemeMutationObserver);\n    _defineProperty(this, \"observer\", null);\n    _defineProperty(this, \"mediaObserver\", null);\n    this.callback = callback;\n  }\n  _createClass(ThemeMutationObserver, [{\n    key: \"observe\",\n    value: function observe() {\n      var _this = this;\n      if (!this.observer) {\n        this.observer = new MutationObserver(function () {\n          _this.callback(getGlobalTheme());\n        });\n      }\n      this.observer.observe(document.documentElement, {\n        attributeFilter: [THEME_DATA_ATTRIBUTE, COLOR_MODE_ATTRIBUTE]\n      });\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.observer && this.observer.disconnect();\n    }\n  }]);\n  return ThemeMutationObserver;\n}();\nexport { ThemeMutationObserver as default };"],"mappings":"AAAA,OAAOA,eAAe,MAAM,uCAAuC;AACnE,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,OAAOC,eAAe,MAAM,uCAAuC;AACnE,SAASC,oBAAoB,EAAEC,oBAAoB,QAAQ,aAAa;AACxE,OAAOC,cAAc,MAAM,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,qBAAqB,GAAG,aAAa,YAAY;EACnD,SAASA,qBAAqBA,CAACC,QAAQ,EAAE;IACvCP,eAAe,CAAC,IAAI,EAAEM,qBAAqB,CAAC;IAC5CJ,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC;IACvCA,eAAe,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,CAAC;IAC5C,IAAI,CAACK,QAAQ,GAAGA,QAAQ;EAC1B;EACAN,YAAY,CAACK,qBAAqB,EAAE,CAAC;IACnCE,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,SAASC,OAAOA,CAAA,EAAG;MACxB,IAAIC,KAAK,GAAG,IAAI;MAChB,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;QAClB,IAAI,CAACA,QAAQ,GAAG,IAAIC,gBAAgB,CAAC,YAAY;UAC/CF,KAAK,CAACJ,QAAQ,CAACF,cAAc,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC;MACJ;MACA,IAAI,CAACO,QAAQ,CAACF,OAAO,CAACI,QAAQ,CAACC,eAAe,EAAE;QAC9CC,eAAe,EAAE,CAACZ,oBAAoB,EAAED,oBAAoB;MAC9D,CAAC,CAAC;IACJ;EACF,CAAC,EAAE;IACDK,GAAG,EAAE,YAAY;IACjBC,KAAK,EAAE,SAASQ,UAAUA,CAAA,EAAG;MAC3B,IAAI,CAACL,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACK,UAAU,CAAC,CAAC;IAC7C;EACF,CAAC,CAAC,CAAC;EACH,OAAOX,qBAAqB;AAC9B,CAAC,CAAC,CAAC;AACH,SAASA,qBAAqB,IAAIY,OAAO"},"metadata":{},"sourceType":"module"}