{"ast":null,"code":"/** @jsx jsx */\n// eslint-disable-next-line @repo/internal/fs/filename-pattern-match\nimport { css, jsx } from '@emotion/core';\nimport { background } from '@atlaskit/theme/colors';\nimport { BORDER_WIDTH } from './constants';\nvar iconWrapperStyles = css({\n  display: 'flex',\n  boxSizing: 'border-box',\n  width: '100%',\n  height: '100%',\n  alignItems: 'center',\n  alignContent: 'center',\n  borderRadius: '50%',\n  overflow: 'hidden'\n});\n/**\n * __Icon wrapper__\n *\n * An icon wrapper is used internally only.\n */\n\nvar IconWrapper = function IconWrapper(_ref) {\n  var _ref$bgColor = _ref.bgColor,\n    bgColor = _ref$bgColor === void 0 ? \"var(--ds-surface-overlay, \".concat(background(), \")\") : _ref$bgColor,\n    children = _ref.children;\n  return jsx(\"span\", {\n    css: iconWrapperStyles,\n    style: {\n      border: \"\".concat(BORDER_WIDTH, \"px solid \").concat(bgColor),\n      backgroundColor: bgColor\n    }\n  }, children);\n};\nexport default IconWrapper;","map":{"version":3,"names":["css","jsx","background","BORDER_WIDTH","iconWrapperStyles","display","boxSizing","width","height","alignItems","alignContent","borderRadius","overflow","IconWrapper","_ref","_ref$bgColor","bgColor","concat","children","style","border","backgroundColor"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/avatar/dist/esm/IconWrapper.js"],"sourcesContent":["/** @jsx jsx */\n// eslint-disable-next-line @repo/internal/fs/filename-pattern-match\nimport { css, jsx } from '@emotion/core';\nimport { background } from '@atlaskit/theme/colors';\nimport { BORDER_WIDTH } from './constants';\nvar iconWrapperStyles = css({\n  display: 'flex',\n  boxSizing: 'border-box',\n  width: '100%',\n  height: '100%',\n  alignItems: 'center',\n  alignContent: 'center',\n  borderRadius: '50%',\n  overflow: 'hidden'\n});\n/**\n * __Icon wrapper__\n *\n * An icon wrapper is used internally only.\n */\n\nvar IconWrapper = function IconWrapper(_ref) {\n  var _ref$bgColor = _ref.bgColor,\n      bgColor = _ref$bgColor === void 0 ? \"var(--ds-surface-overlay, \".concat(background(), \")\") : _ref$bgColor,\n      children = _ref.children;\n  return jsx(\"span\", {\n    css: iconWrapperStyles,\n    style: {\n      border: \"\".concat(BORDER_WIDTH, \"px solid \").concat(bgColor),\n      backgroundColor: bgColor\n    }\n  }, children);\n};\n\nexport default IconWrapper;"],"mappings":"AAAA;AACA;AACA,SAASA,GAAG,EAAEC,GAAG,QAAQ,eAAe;AACxC,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,YAAY,QAAQ,aAAa;AAC1C,IAAIC,iBAAiB,GAAGJ,GAAG,CAAC;EAC1BK,OAAO,EAAE,MAAM;EACfC,SAAS,EAAE,YAAY;EACvBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdC,UAAU,EAAE,QAAQ;EACpBC,YAAY,EAAE,QAAQ;EACtBC,YAAY,EAAE,KAAK;EACnBC,QAAQ,EAAE;AACZ,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAWA,CAACC,IAAI,EAAE;EAC3C,IAAIC,YAAY,GAAGD,IAAI,CAACE,OAAO;IAC3BA,OAAO,GAAGD,YAAY,KAAK,KAAK,CAAC,GAAG,4BAA4B,CAACE,MAAM,CAACf,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,GAAGa,YAAY;IACzGG,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;EAC5B,OAAOjB,GAAG,CAAC,MAAM,EAAE;IACjBD,GAAG,EAAEI,iBAAiB;IACtBe,KAAK,EAAE;MACLC,MAAM,EAAE,EAAE,CAACH,MAAM,CAACd,YAAY,EAAE,WAAW,CAAC,CAACc,MAAM,CAACD,OAAO,CAAC;MAC5DK,eAAe,EAAEL;IACnB;EACF,CAAC,EAAEE,QAAQ,CAAC;AACd,CAAC;AAED,eAAeL,WAAW"},"metadata":{},"sourceType":"module"}