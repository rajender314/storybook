{"ast":null,"code":"/** @jsx jsx */\n\nimport React from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { TouchScrollable } from 'react-scrolllock';\nimport { useModal } from './hooks';\nimport ScrollContainer from './internal/components/scroll-container';\nimport { keylineHeight, padding } from './internal/constants';\nimport useScroll from './internal/hooks/use-scroll';\nvar bodyStyles = css({\n  /* This ensures the body fills the whole space between header and footer. */\n  flex: '1 1 auto'\n});\n\n/**\n * Adding the padding here avoids cropping the keyline on its sides.\n * The combined vertical spacing is maintained by subtracting the\n * keyline height from header and footer.\n */\nvar bodyScrollStyles = css({\n  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage\n  padding: \"\".concat(keylineHeight, \"px \").concat(padding, \"px\")\n});\n\n/**\n * Keylines will not be shown if scrolling in viewport so we do\n * not account for them in this case.\n */\nvar viewportScrollStyles = css({\n  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage\n  padding: \"0px \".concat(padding, \"px\")\n});\n/**\n * __Modal body__\n *\n * A modal body is used to display the main content of a modal.\n *\n * - [Examples](https://atlassian.design/components/modal-dialog/examples)\n * - [Code](https://atlassian.design/components/modal-dialog/code#modal-body-props)\n * - [Usage](https://atlassian.design/components/modal-dialog/usage)\n */\nvar ModalBody = function ModalBody(props) {\n  var children = props.children,\n    userDefinedTestId = props.testId;\n  var _useModal = useModal(),\n    modalTestId = _useModal.testId;\n  var shouldScrollInViewport = useScroll();\n  var testId = userDefinedTestId || modalTestId && \"\".concat(modalTestId, \"--body\");\n  return shouldScrollInViewport ? jsx(\"div\", {\n    css: [bodyStyles, viewportScrollStyles],\n    \"data-testid\": testId\n  }, children) : jsx(TouchScrollable, null, jsx(ScrollContainer, {\n    testId: userDefinedTestId || modalTestId\n  }, jsx(\"div\", {\n    css: [bodyStyles, bodyScrollStyles],\n    \"data-testid\": testId\n  }, children)));\n};\nexport default ModalBody;","map":{"version":3,"names":["React","css","jsx","TouchScrollable","useModal","ScrollContainer","keylineHeight","padding","useScroll","bodyStyles","flex","bodyScrollStyles","concat","viewportScrollStyles","ModalBody","props","children","userDefinedTestId","testId","_useModal","modalTestId","shouldScrollInViewport"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/modal-dialog/dist/esm/modal-body.js"],"sourcesContent":["/** @jsx jsx */\n\nimport React from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { TouchScrollable } from 'react-scrolllock';\nimport { useModal } from './hooks';\nimport ScrollContainer from './internal/components/scroll-container';\nimport { keylineHeight, padding } from './internal/constants';\nimport useScroll from './internal/hooks/use-scroll';\nvar bodyStyles = css({\n  /* This ensures the body fills the whole space between header and footer. */\n  flex: '1 1 auto'\n});\n\n/**\n * Adding the padding here avoids cropping the keyline on its sides.\n * The combined vertical spacing is maintained by subtracting the\n * keyline height from header and footer.\n */\nvar bodyScrollStyles = css({\n  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage\n  padding: \"\".concat(keylineHeight, \"px \").concat(padding, \"px\")\n});\n\n/**\n * Keylines will not be shown if scrolling in viewport so we do\n * not account for them in this case.\n */\nvar viewportScrollStyles = css({\n  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage\n  padding: \"0px \".concat(padding, \"px\")\n});\n/**\n * __Modal body__\n *\n * A modal body is used to display the main content of a modal.\n *\n * - [Examples](https://atlassian.design/components/modal-dialog/examples)\n * - [Code](https://atlassian.design/components/modal-dialog/code#modal-body-props)\n * - [Usage](https://atlassian.design/components/modal-dialog/usage)\n */\nvar ModalBody = function ModalBody(props) {\n  var children = props.children,\n    userDefinedTestId = props.testId;\n  var _useModal = useModal(),\n    modalTestId = _useModal.testId;\n  var shouldScrollInViewport = useScroll();\n  var testId = userDefinedTestId || modalTestId && \"\".concat(modalTestId, \"--body\");\n  return shouldScrollInViewport ? jsx(\"div\", {\n    css: [bodyStyles, viewportScrollStyles],\n    \"data-testid\": testId\n  }, children) : jsx(TouchScrollable, null, jsx(ScrollContainer, {\n    testId: userDefinedTestId || modalTestId\n  }, jsx(\"div\", {\n    css: [bodyStyles, bodyScrollStyles],\n    \"data-testid\": testId\n  }, children)));\n};\nexport default ModalBody;"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;AACzC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,QAAQ,QAAQ,SAAS;AAClC,OAAOC,eAAe,MAAM,wCAAwC;AACpE,SAASC,aAAa,EAAEC,OAAO,QAAQ,sBAAsB;AAC7D,OAAOC,SAAS,MAAM,6BAA6B;AACnD,IAAIC,UAAU,GAAGR,GAAG,CAAC;EACnB;EACAS,IAAI,EAAE;AACR,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,IAAIC,gBAAgB,GAAGV,GAAG,CAAC;EACzB;EACAM,OAAO,EAAE,EAAE,CAACK,MAAM,CAACN,aAAa,EAAE,KAAK,CAAC,CAACM,MAAM,CAACL,OAAO,EAAE,IAAI;AAC/D,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,IAAIM,oBAAoB,GAAGZ,GAAG,CAAC;EAC7B;EACAM,OAAO,EAAE,MAAM,CAACK,MAAM,CAACL,OAAO,EAAE,IAAI;AACtC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIO,SAAS,GAAG,SAASA,SAASA,CAACC,KAAK,EAAE;EACxC,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IAC3BC,iBAAiB,GAAGF,KAAK,CAACG,MAAM;EAClC,IAAIC,SAAS,GAAGf,QAAQ,CAAC,CAAC;IACxBgB,WAAW,GAAGD,SAAS,CAACD,MAAM;EAChC,IAAIG,sBAAsB,GAAGb,SAAS,CAAC,CAAC;EACxC,IAAIU,MAAM,GAAGD,iBAAiB,IAAIG,WAAW,IAAI,EAAE,CAACR,MAAM,CAACQ,WAAW,EAAE,QAAQ,CAAC;EACjF,OAAOC,sBAAsB,GAAGnB,GAAG,CAAC,KAAK,EAAE;IACzCD,GAAG,EAAE,CAACQ,UAAU,EAAEI,oBAAoB,CAAC;IACvC,aAAa,EAAEK;EACjB,CAAC,EAAEF,QAAQ,CAAC,GAAGd,GAAG,CAACC,eAAe,EAAE,IAAI,EAAED,GAAG,CAACG,eAAe,EAAE;IAC7Da,MAAM,EAAED,iBAAiB,IAAIG;EAC/B,CAAC,EAAElB,GAAG,CAAC,KAAK,EAAE;IACZD,GAAG,EAAE,CAACQ,UAAU,EAAEE,gBAAgB,CAAC;IACnC,aAAa,EAAEO;EACjB,CAAC,EAAEF,QAAQ,CAAC,CAAC,CAAC;AAChB,CAAC;AACD,eAAeF,SAAS"},"metadata":{},"sourceType":"module"}