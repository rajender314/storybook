{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef, useState } from 'react';\n/**\n * __Use focus ring__\n *\n * This component has accessibility issues that we are working to resolve.\n * Do not use without support from the Atlassian Design System accessibility team.\n *\n * The useFocusRing hook manages focus in the rare cases where the focus ring’s visual application and the element that takes focus differ.\n * This is not typically a good practice for accessibility, so don’t do this unless you’ve consulted with the accessibility team.\n *\n */\nvar useFocusRing = function useFocusRing() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'off';\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    focusState = _useState2[0],\n    setFocusState = _useState2[1];\n  var focusProps = useRef({\n    onFocus: function onFocus() {\n      return setFocusState('on');\n    },\n    onBlur: function onBlur() {\n      return setFocusState('off');\n    }\n  });\n  return {\n    focusState: focusState,\n    focusProps: focusProps.current\n  };\n};\nexport default useFocusRing;","map":{"version":3,"names":["_slicedToArray","useRef","useState","useFocusRing","initialState","arguments","length","undefined","_useState","_useState2","focusState","setFocusState","focusProps","onFocus","onBlur","current"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/focus-ring/dist/esm/use-focus-ring.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef, useState } from 'react';\n/**\n * __Use focus ring__\n *\n * This component has accessibility issues that we are working to resolve.\n * Do not use without support from the Atlassian Design System accessibility team.\n *\n * The useFocusRing hook manages focus in the rare cases where the focus ring’s visual application and the element that takes focus differ.\n * This is not typically a good practice for accessibility, so don’t do this unless you’ve consulted with the accessibility team.\n *\n */\nvar useFocusRing = function useFocusRing() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'off';\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    focusState = _useState2[0],\n    setFocusState = _useState2[1];\n  var focusProps = useRef({\n    onFocus: function onFocus() {\n      return setFocusState('on');\n    },\n    onBlur: function onBlur() {\n      return setFocusState('off');\n    }\n  });\n  return {\n    focusState: focusState,\n    focusProps: focusProps.current\n  };\n};\nexport default useFocusRing;"],"mappings":"AAAA,OAAOA,cAAc,MAAM,sCAAsC;AACjE,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAG,SAASA,YAAYA,CAAA,EAAG;EACzC,IAAIC,YAAY,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;EAC5F,IAAIG,SAAS,GAAGN,QAAQ,CAACE,YAAY,CAAC;IACpCK,UAAU,GAAGT,cAAc,CAACQ,SAAS,EAAE,CAAC,CAAC;IACzCE,UAAU,GAAGD,UAAU,CAAC,CAAC,CAAC;IAC1BE,aAAa,GAAGF,UAAU,CAAC,CAAC,CAAC;EAC/B,IAAIG,UAAU,GAAGX,MAAM,CAAC;IACtBY,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;MAC1B,OAAOF,aAAa,CAAC,IAAI,CAAC;IAC5B,CAAC;IACDG,MAAM,EAAE,SAASA,MAAMA,CAAA,EAAG;MACxB,OAAOH,aAAa,CAAC,KAAK,CAAC;IAC7B;EACF,CAAC,CAAC;EACF,OAAO;IACLD,UAAU,EAAEA,UAAU;IACtBE,UAAU,EAAEA,UAAU,CAACG;EACzB,CAAC;AACH,CAAC;AACD,eAAeZ,YAAY"},"metadata":{},"sourceType":"module"}