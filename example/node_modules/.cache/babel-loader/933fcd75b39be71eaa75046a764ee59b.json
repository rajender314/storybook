{"ast":null,"code":"/** @jsx jsx */\nimport { Children, cloneElement, memo } from 'react';\nimport { ClassNames, css, jsx } from '@emotion/react';\nvar BORDER_WIDTH = 2;\nvar baseFocusOutsideStyles = css({\n  outline: \"\".concat(BORDER_WIDTH, \"px solid \", \"var(--ds-border-focused, #2684FF)\"),\n  outlineOffset: BORDER_WIDTH\n});\nvar baseInsetStyles = css({\n  outlineColor: \"var(--ds-border-focused, #2684FF)\",\n  outlineOffset: -BORDER_WIDTH,\n  outlineStyle: 'solid',\n  outlineWidth: \"var(--ds-border-width-outline, 2px)\"\n});\nvar focusRingStyles = css({\n  '&:focus-visible': baseFocusOutsideStyles,\n  '@supports not selector(*:focus-visible)': {\n    '&:focus': baseFocusOutsideStyles\n  },\n  '@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)': {\n    '&:focus-visible': {\n      outline: '1px solid'\n    }\n  }\n});\nvar insetFocusRingStyles = css({\n  '&:focus-visible': baseInsetStyles,\n  '@supports not selector(*:focus-visible)': {\n    '&:focus': baseInsetStyles\n  },\n  '@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)': {\n    '&:focus-visible': {\n      outline: '1px solid',\n      outlineOffset: '-1px'\n    }\n  }\n});\n\n/**\n * __Focus ring__\n *\n * A focus ring visually indicates the currently focused item.\n *\n * There are known accessibility issues with this component.\n * Do not use without assistance from the Design System accessibility team.\n *\n * - [Code](https://atlaskit.atlassian.com/packages/design-system/focus-ring)\n *\n * @example\n * ```jsx\n * import FocusRing from '@atlaskit/focus-ring';\n *\n * const InteractiveComponent = () => (\n *   <FocusRing>\n *     <button type=\"button\">Hello</button>\n *   </FocusRing>\n * )\n * ```\n */\nvar FocusRing = /*#__PURE__*/memo(function (_ref) {\n  var children = _ref.children,\n    isInset = _ref.isInset,\n    focus = _ref.focus;\n  var controlledStyles = isInset ? baseInsetStyles : baseFocusOutsideStyles;\n  var uncontrolledStyles = isInset ? insetFocusRingStyles : focusRingStyles;\n  var focusCls = typeof focus === 'undefined' ? uncontrolledStyles : focus === 'on' && controlledStyles;\n  return jsx(ClassNames, null, function (_ref2) {\n    var css = _ref2.css,\n      cx = _ref2.cx;\n    return Children.only(\n    // This may look unwieldy but means we skip applying styles / cloning if no className is applicable\n    focusCls ? /*#__PURE__*/\n    // eslint-disable-next-line @repo/internal/react/no-clone-element\n    cloneElement(children, {\n      className: cx([css(focusCls), children.props.className])\n    }) : children);\n  });\n});\nFocusRing.displayName = 'FocusRing';\nexport default FocusRing;","map":{"version":3,"names":["Children","cloneElement","memo","ClassNames","css","jsx","BORDER_WIDTH","baseFocusOutsideStyles","outline","concat","outlineOffset","baseInsetStyles","outlineColor","outlineStyle","outlineWidth","focusRingStyles","insetFocusRingStyles","FocusRing","_ref","children","isInset","focus","controlledStyles","uncontrolledStyles","focusCls","_ref2","cx","only","className","props","displayName"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/focus-ring/dist/esm/focus-ring.js"],"sourcesContent":["/** @jsx jsx */\nimport { Children, cloneElement, memo } from 'react';\nimport { ClassNames, css, jsx } from '@emotion/react';\nvar BORDER_WIDTH = 2;\nvar baseFocusOutsideStyles = css({\n  outline: \"\".concat(BORDER_WIDTH, \"px solid \", \"var(--ds-border-focused, #2684FF)\"),\n  outlineOffset: BORDER_WIDTH\n});\nvar baseInsetStyles = css({\n  outlineColor: \"var(--ds-border-focused, #2684FF)\",\n  outlineOffset: -BORDER_WIDTH,\n  outlineStyle: 'solid',\n  outlineWidth: \"var(--ds-border-width-outline, 2px)\"\n});\nvar focusRingStyles = css({\n  '&:focus-visible': baseFocusOutsideStyles,\n  '@supports not selector(*:focus-visible)': {\n    '&:focus': baseFocusOutsideStyles\n  },\n  '@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)': {\n    '&:focus-visible': {\n      outline: '1px solid'\n    }\n  }\n});\nvar insetFocusRingStyles = css({\n  '&:focus-visible': baseInsetStyles,\n  '@supports not selector(*:focus-visible)': {\n    '&:focus': baseInsetStyles\n  },\n  '@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)': {\n    '&:focus-visible': {\n      outline: '1px solid',\n      outlineOffset: '-1px'\n    }\n  }\n});\n\n/**\n * __Focus ring__\n *\n * A focus ring visually indicates the currently focused item.\n *\n * There are known accessibility issues with this component.\n * Do not use without assistance from the Design System accessibility team.\n *\n * - [Code](https://atlaskit.atlassian.com/packages/design-system/focus-ring)\n *\n * @example\n * ```jsx\n * import FocusRing from '@atlaskit/focus-ring';\n *\n * const InteractiveComponent = () => (\n *   <FocusRing>\n *     <button type=\"button\">Hello</button>\n *   </FocusRing>\n * )\n * ```\n */\nvar FocusRing = /*#__PURE__*/memo(function (_ref) {\n  var children = _ref.children,\n    isInset = _ref.isInset,\n    focus = _ref.focus;\n  var controlledStyles = isInset ? baseInsetStyles : baseFocusOutsideStyles;\n  var uncontrolledStyles = isInset ? insetFocusRingStyles : focusRingStyles;\n  var focusCls = typeof focus === 'undefined' ? uncontrolledStyles : focus === 'on' && controlledStyles;\n  return jsx(ClassNames, null, function (_ref2) {\n    var css = _ref2.css,\n      cx = _ref2.cx;\n    return Children.only(\n    // This may look unwieldy but means we skip applying styles / cloning if no className is applicable\n    focusCls ?\n    /*#__PURE__*/\n    // eslint-disable-next-line @repo/internal/react/no-clone-element\n    cloneElement(children, {\n      className: cx([css(focusCls), children.props.className])\n    }) : children);\n  });\n});\nFocusRing.displayName = 'FocusRing';\nexport default FocusRing;"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,YAAY,EAAEC,IAAI,QAAQ,OAAO;AACpD,SAASC,UAAU,EAAEC,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;AACrD,IAAIC,YAAY,GAAG,CAAC;AACpB,IAAIC,sBAAsB,GAAGH,GAAG,CAAC;EAC/BI,OAAO,EAAE,EAAE,CAACC,MAAM,CAACH,YAAY,EAAE,WAAW,EAAE,mCAAmC,CAAC;EAClFI,aAAa,EAAEJ;AACjB,CAAC,CAAC;AACF,IAAIK,eAAe,GAAGP,GAAG,CAAC;EACxBQ,YAAY,EAAE,mCAAmC;EACjDF,aAAa,EAAE,CAACJ,YAAY;EAC5BO,YAAY,EAAE,OAAO;EACrBC,YAAY,EAAE;AAChB,CAAC,CAAC;AACF,IAAIC,eAAe,GAAGX,GAAG,CAAC;EACxB,iBAAiB,EAAEG,sBAAsB;EACzC,yCAAyC,EAAE;IACzC,SAAS,EAAEA;EACb,CAAC;EACD,mFAAmF,EAAE;IACnF,iBAAiB,EAAE;MACjBC,OAAO,EAAE;IACX;EACF;AACF,CAAC,CAAC;AACF,IAAIQ,oBAAoB,GAAGZ,GAAG,CAAC;EAC7B,iBAAiB,EAAEO,eAAe;EAClC,yCAAyC,EAAE;IACzC,SAAS,EAAEA;EACb,CAAC;EACD,mFAAmF,EAAE;IACnF,iBAAiB,EAAE;MACjBH,OAAO,EAAE,WAAW;MACpBE,aAAa,EAAE;IACjB;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIO,SAAS,GAAG,aAAaf,IAAI,CAAC,UAAUgB,IAAI,EAAE;EAChD,IAAIC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;IAC1BC,OAAO,GAAGF,IAAI,CAACE,OAAO;IACtBC,KAAK,GAAGH,IAAI,CAACG,KAAK;EACpB,IAAIC,gBAAgB,GAAGF,OAAO,GAAGT,eAAe,GAAGJ,sBAAsB;EACzE,IAAIgB,kBAAkB,GAAGH,OAAO,GAAGJ,oBAAoB,GAAGD,eAAe;EACzE,IAAIS,QAAQ,GAAG,OAAOH,KAAK,KAAK,WAAW,GAAGE,kBAAkB,GAAGF,KAAK,KAAK,IAAI,IAAIC,gBAAgB;EACrG,OAAOjB,GAAG,CAACF,UAAU,EAAE,IAAI,EAAE,UAAUsB,KAAK,EAAE;IAC5C,IAAIrB,GAAG,GAAGqB,KAAK,CAACrB,GAAG;MACjBsB,EAAE,GAAGD,KAAK,CAACC,EAAE;IACf,OAAO1B,QAAQ,CAAC2B,IAAI;IACpB;IACAH,QAAQ,GACR;IACA;IACAvB,YAAY,CAACkB,QAAQ,EAAE;MACrBS,SAAS,EAAEF,EAAE,CAAC,CAACtB,GAAG,CAACoB,QAAQ,CAAC,EAAEL,QAAQ,CAACU,KAAK,CAACD,SAAS,CAAC;IACzD,CAAC,CAAC,GAAGT,QAAQ,CAAC;EAChB,CAAC,CAAC;AACJ,CAAC,CAAC;AACFF,SAAS,CAACa,WAAW,GAAG,WAAW;AACnC,eAAeb,SAAS"},"metadata":{},"sourceType":"module"}