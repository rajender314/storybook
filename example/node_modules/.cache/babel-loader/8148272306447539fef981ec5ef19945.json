{"ast":null,"code":"import warnOnce from '@atlaskit/ds-lib/warn-once';\nimport tokens from './artifacts/token-names';\nvar name = \"@atlaskit/tokens\";\nvar version = \"1.28.1\";\n/**\n * Takes a dot-separated token name and and an optional fallback, and returns the current computed CSS value for the\n * resulting CSS Custom Property.\n * This should be used for when the CSS cascade isn't available, eg. `<canvas>` elements, JS charting libraries, etc.\n *\n * Note: these values change depending on the theme so consider pairing them with `useThemeObserver` in React, or the\n * `ThemeMutationObserver` class elsewhere.\n *\n * @param {string} path - A dot-separated token name (example: `'color.background.brand'` or `'spacing.scale.100'`).\n * @param {string} [fallback] - The fallback value that should render when token CSS is not present in your app.\n *\n * @example\n * ```\n * const theme = useThemeObserver();\n *\n * useEffect(() => {\n *  const lineColor = getTokenValue('color.background.accent.blue.subtle', B400);\n * }, [theme]);\n * ```\n *\n */\nfunction getTokenValue(tokenId) {\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var token = tokens[tokenId];\n  var tokenValue = fallback;\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' && !token) {\n    warnOnce(\"Unknown token id at path: \".concat(tokenId, \" for \").concat(name, \"@\").concat(version));\n  }\n  if (typeof window === 'undefined') {\n    return tokenValue;\n  }\n  tokenValue = window.getComputedStyle(document.documentElement).getPropertyValue(token).trim();\n  tokenValue = tokenValue || fallback;\n  return tokenValue;\n}\nexport default getTokenValue;","map":{"version":3,"names":["warnOnce","tokens","name","version","getTokenValue","tokenId","fallback","arguments","length","undefined","token","tokenValue","process","env","NODE_ENV","concat","window","getComputedStyle","document","documentElement","getPropertyValue","trim"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/modal-dialog/node_modules/@atlaskit/tokens/dist/esm/get-token-value.js"],"sourcesContent":["import warnOnce from '@atlaskit/ds-lib/warn-once';\nimport tokens from './artifacts/token-names';\nvar name = \"@atlaskit/tokens\";\nvar version = \"1.28.1\";\n/**\n * Takes a dot-separated token name and and an optional fallback, and returns the current computed CSS value for the\n * resulting CSS Custom Property.\n * This should be used for when the CSS cascade isn't available, eg. `<canvas>` elements, JS charting libraries, etc.\n *\n * Note: these values change depending on the theme so consider pairing them with `useThemeObserver` in React, or the\n * `ThemeMutationObserver` class elsewhere.\n *\n * @param {string} path - A dot-separated token name (example: `'color.background.brand'` or `'spacing.scale.100'`).\n * @param {string} [fallback] - The fallback value that should render when token CSS is not present in your app.\n *\n * @example\n * ```\n * const theme = useThemeObserver();\n *\n * useEffect(() => {\n *  const lineColor = getTokenValue('color.background.accent.blue.subtle', B400);\n * }, [theme]);\n * ```\n *\n */\nfunction getTokenValue(tokenId) {\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var token = tokens[tokenId];\n  var tokenValue = fallback;\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' && !token) {\n    warnOnce(\"Unknown token id at path: \".concat(tokenId, \" for \").concat(name, \"@\").concat(version));\n  }\n  if (typeof window === 'undefined') {\n    return tokenValue;\n  }\n  tokenValue = window.getComputedStyle(document.documentElement).getPropertyValue(token).trim();\n  tokenValue = tokenValue || fallback;\n  return tokenValue;\n}\nexport default getTokenValue;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,IAAIC,IAAI,GAAG,kBAAkB;AAC7B,IAAIC,OAAO,GAAG,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,OAAO,EAAE;EAC9B,IAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACrF,IAAIG,KAAK,GAAGT,MAAM,CAACI,OAAO,CAAC;EAC3B,IAAIM,UAAU,GAAGL,QAAQ;EACzB,IAAI,OAAOM,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,CAACJ,KAAK,EAAE;IACrFV,QAAQ,CAAC,4BAA4B,CAACe,MAAM,CAACV,OAAO,EAAE,OAAO,CAAC,CAACU,MAAM,CAACb,IAAI,EAAE,GAAG,CAAC,CAACa,MAAM,CAACZ,OAAO,CAAC,CAAC;EACnG;EACA,IAAI,OAAOa,MAAM,KAAK,WAAW,EAAE;IACjC,OAAOL,UAAU;EACnB;EACAA,UAAU,GAAGK,MAAM,CAACC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAACV,KAAK,CAAC,CAACW,IAAI,CAAC,CAAC;EAC7FV,UAAU,GAAGA,UAAU,IAAIL,QAAQ;EACnC,OAAOK,UAAU;AACnB;AACA,eAAeP,aAAa"},"metadata":{},"sourceType":"module"}