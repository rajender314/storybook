{"ast":null,"code":"/** @jsx jsx */\nimport { useContext, useEffect, useLayoutEffect } from 'react';\nimport { jsx } from '@emotion/react';\nimport MenuGroup from '@atlaskit/menu/menu-group';\nimport { Box, xcss } from '@atlaskit/primitives';\nimport Spinner from '@atlaskit/spinner';\nimport { FocusManagerContext } from '../components/focus-manager';\nimport isCheckboxItem from '../utils/is-checkbox-item';\nimport isRadioItem from '../utils/is-radio-item';\nvar spinnerContainerStyles = xcss({\n  display: 'flex',\n  minWidth: '160px',\n  padding: 'space.250',\n  justifyContent: 'center'\n});\nvar LoadingIndicator = function LoadingIndicator(_ref) {\n  var _ref$statusLabel = _ref.statusLabel,\n    statusLabel = _ref$statusLabel === void 0 ? 'Loading' : _ref$statusLabel,\n    testId = _ref.testId;\n  return jsx(Box, {\n    xcss: spinnerContainerStyles\n  }, jsx(Spinner, {\n    size: \"small\",\n    label: statusLabel,\n    testId: testId\n  }));\n};\n/**\n *\n * MenuWrapper wraps all the menu items.\n * It handles the logic to close the menu when a MenuItem is clicked, but leaves it open\n * if a CheckboxItem or RadioItem is clicked.\n * It also sets focus to the first menu item when opened.\n */\nvar MenuWrapper = function MenuWrapper(_ref2) {\n  var children = _ref2.children,\n    isLoading = _ref2.isLoading,\n    maxHeight = _ref2.maxHeight,\n    maxWidth = _ref2.maxWidth,\n    onClose = _ref2.onClose,\n    onUpdate = _ref2.onUpdate,\n    statusLabel = _ref2.statusLabel,\n    setInitialFocusRef = _ref2.setInitialFocusRef,\n    spacing = _ref2.spacing,\n    testId = _ref2.testId;\n  var _useContext = useContext(FocusManagerContext),\n    menuItemRefs = _useContext.menuItemRefs;\n  var closeOnMenuItemClick = function closeOnMenuItemClick(e) {\n    var isTargetMenuItemOrDecendant = menuItemRefs.some(function (menuItem) {\n      var isCheckboxOrRadio = isCheckboxItem(menuItem) || isRadioItem(menuItem);\n      return menuItem.contains(e.target) && !isCheckboxOrRadio;\n    });\n\n    // Close menu if the click is triggered from a MenuItem or\n    // its descendant. Don't close the menu if the click is triggered\n    // from a MenuItemRadio or MenuItemCheckbox so that the user can\n    // select multiple items.\n    if (isTargetMenuItemOrDecendant && onClose) {\n      onClose(e);\n    }\n  };\n\n  // Using useEffect here causes a flicker.\n  // useLayoutEffect ensures that the update and render happen in the same\n  // rAF tick.\n  useLayoutEffect(function () {\n    onUpdate();\n  }, [isLoading, onUpdate]);\n  useEffect(function () {\n    var _menuItemRefs$find;\n    var firstFocusableRef = (_menuItemRefs$find = menuItemRefs.find(function (ref) {\n      return !ref.hasAttribute('disabled');\n    })) !== null && _menuItemRefs$find !== void 0 ? _menuItemRefs$find : null;\n    setInitialFocusRef === null || setInitialFocusRef === void 0 ? void 0 : setInitialFocusRef(firstFocusableRef);\n  }, [menuItemRefs, setInitialFocusRef]);\n  return jsx(MenuGroup, {\n    isLoading: isLoading,\n    maxHeight: maxHeight,\n    maxWidth: maxWidth,\n    onClick: closeOnMenuItemClick,\n    role: \"menu\",\n    spacing: spacing,\n    testId: testId && \"\".concat(testId, \"--menu-group\")\n  }, isLoading ? jsx(LoadingIndicator, {\n    statusLabel: statusLabel,\n    testId: testId && \"\".concat(testId, \"--loading-indicator\")\n  }) : children);\n};\nexport default MenuWrapper;","map":{"version":3,"names":["useContext","useEffect","useLayoutEffect","jsx","MenuGroup","Box","xcss","Spinner","FocusManagerContext","isCheckboxItem","isRadioItem","spinnerContainerStyles","display","minWidth","padding","justifyContent","LoadingIndicator","_ref","_ref$statusLabel","statusLabel","testId","size","label","MenuWrapper","_ref2","children","isLoading","maxHeight","maxWidth","onClose","onUpdate","setInitialFocusRef","spacing","_useContext","menuItemRefs","closeOnMenuItemClick","e","isTargetMenuItemOrDecendant","some","menuItem","isCheckboxOrRadio","contains","target","_menuItemRefs$find","firstFocusableRef","find","ref","hasAttribute","onClick","role","concat"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/menu-wrapper.js"],"sourcesContent":["/** @jsx jsx */\nimport { useContext, useEffect, useLayoutEffect } from 'react';\nimport { jsx } from '@emotion/react';\nimport MenuGroup from '@atlaskit/menu/menu-group';\nimport { Box, xcss } from '@atlaskit/primitives';\nimport Spinner from '@atlaskit/spinner';\nimport { FocusManagerContext } from '../components/focus-manager';\nimport isCheckboxItem from '../utils/is-checkbox-item';\nimport isRadioItem from '../utils/is-radio-item';\nvar spinnerContainerStyles = xcss({\n  display: 'flex',\n  minWidth: '160px',\n  padding: 'space.250',\n  justifyContent: 'center'\n});\nvar LoadingIndicator = function LoadingIndicator(_ref) {\n  var _ref$statusLabel = _ref.statusLabel,\n    statusLabel = _ref$statusLabel === void 0 ? 'Loading' : _ref$statusLabel,\n    testId = _ref.testId;\n  return jsx(Box, {\n    xcss: spinnerContainerStyles\n  }, jsx(Spinner, {\n    size: \"small\",\n    label: statusLabel,\n    testId: testId\n  }));\n};\n/**\n *\n * MenuWrapper wraps all the menu items.\n * It handles the logic to close the menu when a MenuItem is clicked, but leaves it open\n * if a CheckboxItem or RadioItem is clicked.\n * It also sets focus to the first menu item when opened.\n */\nvar MenuWrapper = function MenuWrapper(_ref2) {\n  var children = _ref2.children,\n    isLoading = _ref2.isLoading,\n    maxHeight = _ref2.maxHeight,\n    maxWidth = _ref2.maxWidth,\n    onClose = _ref2.onClose,\n    onUpdate = _ref2.onUpdate,\n    statusLabel = _ref2.statusLabel,\n    setInitialFocusRef = _ref2.setInitialFocusRef,\n    spacing = _ref2.spacing,\n    testId = _ref2.testId;\n  var _useContext = useContext(FocusManagerContext),\n    menuItemRefs = _useContext.menuItemRefs;\n  var closeOnMenuItemClick = function closeOnMenuItemClick(e) {\n    var isTargetMenuItemOrDecendant = menuItemRefs.some(function (menuItem) {\n      var isCheckboxOrRadio = isCheckboxItem(menuItem) || isRadioItem(menuItem);\n      return menuItem.contains(e.target) && !isCheckboxOrRadio;\n    });\n\n    // Close menu if the click is triggered from a MenuItem or\n    // its descendant. Don't close the menu if the click is triggered\n    // from a MenuItemRadio or MenuItemCheckbox so that the user can\n    // select multiple items.\n    if (isTargetMenuItemOrDecendant && onClose) {\n      onClose(e);\n    }\n  };\n\n  // Using useEffect here causes a flicker.\n  // useLayoutEffect ensures that the update and render happen in the same\n  // rAF tick.\n  useLayoutEffect(function () {\n    onUpdate();\n  }, [isLoading, onUpdate]);\n  useEffect(function () {\n    var _menuItemRefs$find;\n    var firstFocusableRef = (_menuItemRefs$find = menuItemRefs.find(function (ref) {\n      return !ref.hasAttribute('disabled');\n    })) !== null && _menuItemRefs$find !== void 0 ? _menuItemRefs$find : null;\n    setInitialFocusRef === null || setInitialFocusRef === void 0 ? void 0 : setInitialFocusRef(firstFocusableRef);\n  }, [menuItemRefs, setInitialFocusRef]);\n  return jsx(MenuGroup, {\n    isLoading: isLoading,\n    maxHeight: maxHeight,\n    maxWidth: maxWidth,\n    onClick: closeOnMenuItemClick,\n    role: \"menu\",\n    spacing: spacing,\n    testId: testId && \"\".concat(testId, \"--menu-group\")\n  }, isLoading ? jsx(LoadingIndicator, {\n    statusLabel: statusLabel,\n    testId: testId && \"\".concat(testId, \"--loading-indicator\")\n  }) : children);\n};\nexport default MenuWrapper;"],"mappings":"AAAA;AACA,SAASA,UAAU,EAAEC,SAAS,EAAEC,eAAe,QAAQ,OAAO;AAC9D,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,GAAG,EAAEC,IAAI,QAAQ,sBAAsB;AAChD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,mBAAmB,QAAQ,6BAA6B;AACjE,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,IAAIC,sBAAsB,GAAGL,IAAI,CAAC;EAChCM,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE,OAAO;EACjBC,OAAO,EAAE,WAAW;EACpBC,cAAc,EAAE;AAClB,CAAC,CAAC;AACF,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,IAAI,EAAE;EACrD,IAAIC,gBAAgB,GAAGD,IAAI,CAACE,WAAW;IACrCA,WAAW,GAAGD,gBAAgB,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGA,gBAAgB;IACxEE,MAAM,GAAGH,IAAI,CAACG,MAAM;EACtB,OAAOjB,GAAG,CAACE,GAAG,EAAE;IACdC,IAAI,EAAEK;EACR,CAAC,EAAER,GAAG,CAACI,OAAO,EAAE;IACdc,IAAI,EAAE,OAAO;IACbC,KAAK,EAAEH,WAAW;IAClBC,MAAM,EAAEA;EACV,CAAC,CAAC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,WAAW,GAAG,SAASA,WAAWA,CAACC,KAAK,EAAE;EAC5C,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IAC3BC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,SAAS,GAAGH,KAAK,CAACG,SAAS;IAC3BC,QAAQ,GAAGJ,KAAK,CAACI,QAAQ;IACzBC,OAAO,GAAGL,KAAK,CAACK,OAAO;IACvBC,QAAQ,GAAGN,KAAK,CAACM,QAAQ;IACzBX,WAAW,GAAGK,KAAK,CAACL,WAAW;IAC/BY,kBAAkB,GAAGP,KAAK,CAACO,kBAAkB;IAC7CC,OAAO,GAAGR,KAAK,CAACQ,OAAO;IACvBZ,MAAM,GAAGI,KAAK,CAACJ,MAAM;EACvB,IAAIa,WAAW,GAAGjC,UAAU,CAACQ,mBAAmB,CAAC;IAC/C0B,YAAY,GAAGD,WAAW,CAACC,YAAY;EACzC,IAAIC,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,CAAC,EAAE;IAC1D,IAAIC,2BAA2B,GAAGH,YAAY,CAACI,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACtE,IAAIC,iBAAiB,GAAG/B,cAAc,CAAC8B,QAAQ,CAAC,IAAI7B,WAAW,CAAC6B,QAAQ,CAAC;MACzE,OAAOA,QAAQ,CAACE,QAAQ,CAACL,CAAC,CAACM,MAAM,CAAC,IAAI,CAACF,iBAAiB;IAC1D,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA,IAAIH,2BAA2B,IAAIR,OAAO,EAAE;MAC1CA,OAAO,CAACO,CAAC,CAAC;IACZ;EACF,CAAC;;EAED;EACA;EACA;EACAlC,eAAe,CAAC,YAAY;IAC1B4B,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACJ,SAAS,EAAEI,QAAQ,CAAC,CAAC;EACzB7B,SAAS,CAAC,YAAY;IACpB,IAAI0C,kBAAkB;IACtB,IAAIC,iBAAiB,GAAG,CAACD,kBAAkB,GAAGT,YAAY,CAACW,IAAI,CAAC,UAAUC,GAAG,EAAE;MAC7E,OAAO,CAACA,GAAG,CAACC,YAAY,CAAC,UAAU,CAAC;IACtC,CAAC,CAAC,MAAM,IAAI,IAAIJ,kBAAkB,KAAK,KAAK,CAAC,GAAGA,kBAAkB,GAAG,IAAI;IACzEZ,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACa,iBAAiB,CAAC;EAC/G,CAAC,EAAE,CAACV,YAAY,EAAEH,kBAAkB,CAAC,CAAC;EACtC,OAAO5B,GAAG,CAACC,SAAS,EAAE;IACpBsB,SAAS,EAAEA,SAAS;IACpBC,SAAS,EAAEA,SAAS;IACpBC,QAAQ,EAAEA,QAAQ;IAClBoB,OAAO,EAAEb,oBAAoB;IAC7Bc,IAAI,EAAE,MAAM;IACZjB,OAAO,EAAEA,OAAO;IAChBZ,MAAM,EAAEA,MAAM,IAAI,EAAE,CAAC8B,MAAM,CAAC9B,MAAM,EAAE,cAAc;EACpD,CAAC,EAAEM,SAAS,GAAGvB,GAAG,CAACa,gBAAgB,EAAE;IACnCG,WAAW,EAAEA,WAAW;IACxBC,MAAM,EAAEA,MAAM,IAAI,EAAE,CAAC8B,MAAM,CAAC9B,MAAM,EAAE,qBAAqB;EAC3D,CAAC,CAAC,GAAGK,QAAQ,CAAC;AAChB,CAAC;AACD,eAAeF,WAAW"},"metadata":{},"sourceType":"module"}