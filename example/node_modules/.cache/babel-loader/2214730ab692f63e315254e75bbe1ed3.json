{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n/** @jsx jsx */\n\nimport { useCallback } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport FocusLock from 'react-focus-lock';\nimport ScrollLock, { TouchScrollable } from 'react-scrolllock';\nimport { usePlatformLeafEventHandler } from '@atlaskit/analytics-next';\nimport Blanket from '@atlaskit/blanket';\nimport noop from '@atlaskit/ds-lib/noop';\nimport { UNSAFE_LAYERING } from '@atlaskit/layering';\nimport FadeIn from '@atlaskit/motion/fade-in';\nimport { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport Portal from '@atlaskit/portal';\nimport { layers } from '@atlaskit/theme/constants';\nimport ModalDialog from './internal/components/modal-dialog';\nimport useModalStack from './internal/hooks/use-modal-stack';\nimport usePreventProgrammaticScroll from './internal/hooks/use-prevent-programmatic-scroll';\nvar fillScreenStyles = css({\n  width: '100vw',\n  height: '100vh',\n  position: 'fixed',\n  insetBlockStart: \"var(--ds-space-0, 0)\",\n  insetInlineStart: \"var(--ds-space-0, 0)\",\n  overflowY: 'auto',\n  WebkitOverflowScrolling: 'touch'\n});\nvar whiteListElements = function whiteListElements(element) {\n  // allows focus to reach elements outside the modal if they contain the data-atlas-extension attribute\n  return !element.hasAttribute('data-atlas-extension');\n};\n\n/**\n * __Modal wrapper__\n *\n * A modal wrapper displays content that requires user interaction, in a layer above the page.\n * This component is primary container for other modal components.\n *\n * - [Examples](https://atlassian.design/components/modal-dialog/examples)\n * - [Code](https://atlassian.design/components/modal-dialog/code)\n * - [Usage](https://atlassian.design/components/modal-dialog/usage)\n */\nvar ModalWrapper = function ModalWrapper(props) {\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n    _props$shouldCloseOnE = props.shouldCloseOnEscapePress,\n    shouldCloseOnEscapePress = _props$shouldCloseOnE === void 0 ? true : _props$shouldCloseOnE,\n    _props$shouldCloseOnO = props.shouldCloseOnOverlayClick,\n    shouldCloseOnOverlayClick = _props$shouldCloseOnO === void 0 ? true : _props$shouldCloseOnO,\n    _props$shouldScrollIn = props.shouldScrollInViewport,\n    shouldScrollInViewport = _props$shouldScrollIn === void 0 ? false : _props$shouldScrollIn,\n    _props$shouldReturnFo = props.shouldReturnFocus,\n    shouldReturnFocus = _props$shouldReturnFo === void 0 ? true : _props$shouldReturnFo,\n    stackIndexOverride = props.stackIndex,\n    _props$onClose = props.onClose,\n    onClose = _props$onClose === void 0 ? noop : _props$onClose,\n    _props$onStackChange = props.onStackChange,\n    onStackChange = _props$onStackChange === void 0 ? noop : _props$onStackChange,\n    isBlanketHidden = props.isBlanketHidden,\n    children = props.children,\n    height = props.height,\n    width = props.width,\n    onCloseComplete = props.onCloseComplete,\n    onOpenComplete = props.onOpenComplete,\n    label = props.label,\n    testId = props.testId;\n  var calculatedStackIndex = useModalStack({\n    onStackChange: onStackChange\n  });\n  var stackIndex = stackIndexOverride || calculatedStackIndex;\n  var isForeground = stackIndex === 0;\n\n  // When a user supplies a ref to focus we skip auto focus via react-focus-lock\n  var autoFocusLock = typeof autoFocus === 'boolean' ? autoFocus : false;\n  var onCloseHandler = usePlatformLeafEventHandler({\n    fn: onClose,\n    action: 'closed',\n    componentName: 'modalDialog',\n    packageName: \"@atlaskit/modal-dialog\",\n    packageVersion: \"12.8.4\"\n  });\n  var onBlanketClicked = useCallback(function (e) {\n    if (shouldCloseOnOverlayClick) {\n      onCloseHandler(e);\n    }\n  }, [shouldCloseOnOverlayClick, onCloseHandler]);\n  usePreventProgrammaticScroll();\n  var modalDialogWithBlanket = jsx(Blanket, {\n    isTinted: !isBlanketHidden,\n    onBlanketClicked: onBlanketClicked,\n    testId: testId && \"\".concat(testId, \"--blanket\")\n  }, jsx(ModalDialog, {\n    testId: testId,\n    label: label,\n    autoFocus: autoFocus,\n    stackIndex: stackIndex,\n    onClose: onCloseHandler,\n    shouldCloseOnEscapePress: shouldCloseOnEscapePress && isForeground,\n    shouldScrollInViewport: shouldScrollInViewport,\n    height: height,\n    width: width,\n    onCloseComplete: onCloseComplete,\n    onOpenComplete: onOpenComplete\n  }, children));\n  return jsx(UNSAFE_LAYERING, {\n    isDisabled: getBooleanFF('platform.design-system-team.layering_qmiw3') ? false : true\n  }, jsx(Portal, {\n    zIndex: layers.modal()\n  }, jsx(FadeIn, null, function (fadeInProps) {\n    return jsx(\"div\", _extends({}, fadeInProps, {\n      css: fillScreenStyles,\n      \"aria-hidden\": !isForeground\n    }), jsx(FocusLock, {\n      autoFocus: autoFocusLock,\n      disabled: !isForeground,\n      returnFocus: shouldReturnFocus,\n      whiteList: whiteListElements\n    }, jsx(ScrollLock, null), shouldScrollInViewport ? jsx(TouchScrollable, null, modalDialogWithBlanket) : modalDialogWithBlanket));\n  })));\n};\nexport default ModalWrapper;","map":{"version":3,"names":["_extends","useCallback","css","jsx","FocusLock","ScrollLock","TouchScrollable","usePlatformLeafEventHandler","Blanket","noop","UNSAFE_LAYERING","FadeIn","getBooleanFF","Portal","layers","ModalDialog","useModalStack","usePreventProgrammaticScroll","fillScreenStyles","width","height","position","insetBlockStart","insetInlineStart","overflowY","WebkitOverflowScrolling","whiteListElements","element","hasAttribute","ModalWrapper","props","_props$autoFocus","autoFocus","_props$shouldCloseOnE","shouldCloseOnEscapePress","_props$shouldCloseOnO","shouldCloseOnOverlayClick","_props$shouldScrollIn","shouldScrollInViewport","_props$shouldReturnFo","shouldReturnFocus","stackIndexOverride","stackIndex","_props$onClose","onClose","_props$onStackChange","onStackChange","isBlanketHidden","children","onCloseComplete","onOpenComplete","label","testId","calculatedStackIndex","isForeground","autoFocusLock","onCloseHandler","fn","action","componentName","packageName","packageVersion","onBlanketClicked","e","modalDialogWithBlanket","isTinted","concat","isDisabled","zIndex","modal","fadeInProps","disabled","returnFocus","whiteList"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/modal-dialog/dist/esm/modal-wrapper.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\n/** @jsx jsx */\n\nimport { useCallback } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport FocusLock from 'react-focus-lock';\nimport ScrollLock, { TouchScrollable } from 'react-scrolllock';\nimport { usePlatformLeafEventHandler } from '@atlaskit/analytics-next';\nimport Blanket from '@atlaskit/blanket';\nimport noop from '@atlaskit/ds-lib/noop';\nimport { UNSAFE_LAYERING } from '@atlaskit/layering';\nimport FadeIn from '@atlaskit/motion/fade-in';\nimport { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport Portal from '@atlaskit/portal';\nimport { layers } from '@atlaskit/theme/constants';\nimport ModalDialog from './internal/components/modal-dialog';\nimport useModalStack from './internal/hooks/use-modal-stack';\nimport usePreventProgrammaticScroll from './internal/hooks/use-prevent-programmatic-scroll';\nvar fillScreenStyles = css({\n  width: '100vw',\n  height: '100vh',\n  position: 'fixed',\n  insetBlockStart: \"var(--ds-space-0, 0)\",\n  insetInlineStart: \"var(--ds-space-0, 0)\",\n  overflowY: 'auto',\n  WebkitOverflowScrolling: 'touch'\n});\nvar whiteListElements = function whiteListElements(element) {\n  // allows focus to reach elements outside the modal if they contain the data-atlas-extension attribute\n  return !element.hasAttribute('data-atlas-extension');\n};\n\n/**\n * __Modal wrapper__\n *\n * A modal wrapper displays content that requires user interaction, in a layer above the page.\n * This component is primary container for other modal components.\n *\n * - [Examples](https://atlassian.design/components/modal-dialog/examples)\n * - [Code](https://atlassian.design/components/modal-dialog/code)\n * - [Usage](https://atlassian.design/components/modal-dialog/usage)\n */\nvar ModalWrapper = function ModalWrapper(props) {\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n    _props$shouldCloseOnE = props.shouldCloseOnEscapePress,\n    shouldCloseOnEscapePress = _props$shouldCloseOnE === void 0 ? true : _props$shouldCloseOnE,\n    _props$shouldCloseOnO = props.shouldCloseOnOverlayClick,\n    shouldCloseOnOverlayClick = _props$shouldCloseOnO === void 0 ? true : _props$shouldCloseOnO,\n    _props$shouldScrollIn = props.shouldScrollInViewport,\n    shouldScrollInViewport = _props$shouldScrollIn === void 0 ? false : _props$shouldScrollIn,\n    _props$shouldReturnFo = props.shouldReturnFocus,\n    shouldReturnFocus = _props$shouldReturnFo === void 0 ? true : _props$shouldReturnFo,\n    stackIndexOverride = props.stackIndex,\n    _props$onClose = props.onClose,\n    onClose = _props$onClose === void 0 ? noop : _props$onClose,\n    _props$onStackChange = props.onStackChange,\n    onStackChange = _props$onStackChange === void 0 ? noop : _props$onStackChange,\n    isBlanketHidden = props.isBlanketHidden,\n    children = props.children,\n    height = props.height,\n    width = props.width,\n    onCloseComplete = props.onCloseComplete,\n    onOpenComplete = props.onOpenComplete,\n    label = props.label,\n    testId = props.testId;\n  var calculatedStackIndex = useModalStack({\n    onStackChange: onStackChange\n  });\n  var stackIndex = stackIndexOverride || calculatedStackIndex;\n  var isForeground = stackIndex === 0;\n\n  // When a user supplies a ref to focus we skip auto focus via react-focus-lock\n  var autoFocusLock = typeof autoFocus === 'boolean' ? autoFocus : false;\n  var onCloseHandler = usePlatformLeafEventHandler({\n    fn: onClose,\n    action: 'closed',\n    componentName: 'modalDialog',\n    packageName: \"@atlaskit/modal-dialog\",\n    packageVersion: \"12.8.4\"\n  });\n  var onBlanketClicked = useCallback(function (e) {\n    if (shouldCloseOnOverlayClick) {\n      onCloseHandler(e);\n    }\n  }, [shouldCloseOnOverlayClick, onCloseHandler]);\n  usePreventProgrammaticScroll();\n  var modalDialogWithBlanket = jsx(Blanket, {\n    isTinted: !isBlanketHidden,\n    onBlanketClicked: onBlanketClicked,\n    testId: testId && \"\".concat(testId, \"--blanket\")\n  }, jsx(ModalDialog, {\n    testId: testId,\n    label: label,\n    autoFocus: autoFocus,\n    stackIndex: stackIndex,\n    onClose: onCloseHandler,\n    shouldCloseOnEscapePress: shouldCloseOnEscapePress && isForeground,\n    shouldScrollInViewport: shouldScrollInViewport,\n    height: height,\n    width: width,\n    onCloseComplete: onCloseComplete,\n    onOpenComplete: onOpenComplete\n  }, children));\n  return jsx(UNSAFE_LAYERING, {\n    isDisabled: getBooleanFF('platform.design-system-team.layering_qmiw3') ? false : true\n  }, jsx(Portal, {\n    zIndex: layers.modal()\n  }, jsx(FadeIn, null, function (fadeInProps) {\n    return jsx(\"div\", _extends({}, fadeInProps, {\n      css: fillScreenStyles,\n      \"aria-hidden\": !isForeground\n    }), jsx(FocusLock, {\n      autoFocus: autoFocusLock,\n      disabled: !isForeground,\n      returnFocus: shouldReturnFocus,\n      whiteList: whiteListElements\n    }, jsx(ScrollLock, null), shouldScrollInViewport ? jsx(TouchScrollable, null, modalDialogWithBlanket) : modalDialogWithBlanket));\n  })));\n};\nexport default ModalWrapper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}