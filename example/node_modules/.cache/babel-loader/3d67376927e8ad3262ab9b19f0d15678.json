{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"backgroundColor\", \"padding\", \"paddingBlock\", \"paddingBlockStart\", \"paddingBlockEnd\", \"paddingInline\", \"paddingInlineStart\", \"paddingInlineEnd\", \"isDisabled\", \"type\", \"testId\", \"xcss\"];\nimport React, { forwardRef } from 'react';\nimport { xcss } from '../xcss/xcss';\nimport Box from './box';\n// TODO: Duplicated FocusRing styles due to lack of `xcss` support\n// and to prevent additional dependency\nvar baseFocusRingStyles = {\n  outlineColor: 'color.border.focused',\n  outlineWidth: 'border.width.outline',\n  outlineStyle: 'solid',\n  outlineOffset: 'space.025'\n};\nvar focusRingStyles = xcss({\n  ':focus-visible': baseFocusRingStyles,\n  '@supports not selector(*:focus-visible)': {\n    ':focus': baseFocusRingStyles\n  },\n  '@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)': {\n    ':focus-visible': {\n      outline: '1px solid'\n    }\n  }\n});\n\n/**\n * __UNSAFE_PRESSABLE__\n *\n * @internal Still under development. Do not use.\n *\n * A Pressable is a primitive component that renders a `<button>`.\n *\n * - [Examples](https://atlassian.design/components/primitives/pressable/examples)\n * - [Code](https://atlassian.design/components/primitives/pressable/code)\n * - [Usage](https://atlassian.design/components/primitives/pressable/usage)\n */\nvar UNSAFE_PRESSABLE = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    backgroundColor = _ref.backgroundColor,\n    padding = _ref.padding,\n    paddingBlock = _ref.paddingBlock,\n    paddingBlockStart = _ref.paddingBlockStart,\n    paddingBlockEnd = _ref.paddingBlockEnd,\n    paddingInline = _ref.paddingInline,\n    paddingInlineStart = _ref.paddingInlineStart,\n    paddingInlineEnd = _ref.paddingInlineEnd,\n    isDisabled = _ref.isDisabled,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'button' : _ref$type,\n    testId = _ref.testId,\n    xcssStyles = _ref.xcss,\n    htmlAttributes = _objectWithoutProperties(_ref, _excluded);\n  // Combine default styles with supplied styles. XCSS does not support deep nested arrays\n  var styles = [xcss({\n    cursor: isDisabled ? 'not-allowed' : 'pointer'\n  }), focusRingStyles];\n  styles = Array.isArray(xcssStyles) ? [].concat(_toConsumableArray(styles), _toConsumableArray(xcssStyles)) : [].concat(_toConsumableArray(styles), [xcssStyles]);\n  return /*#__PURE__*/React.createElement(Box, _extends({}, htmlAttributes, {\n    as: \"button\",\n    ref: ref,\n    testId: testId,\n    type: type,\n    backgroundColor: backgroundColor,\n    padding: padding,\n    paddingBlock: paddingBlock,\n    paddingBlockStart: paddingBlockStart,\n    paddingBlockEnd: paddingBlockEnd,\n    paddingInline: paddingInline,\n    paddingInlineStart: paddingInlineStart,\n    paddingInlineEnd: paddingInlineEnd\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    ,\n\n    xcss: styles,\n    disabled: isDisabled\n  }), children);\n});\nexport default UNSAFE_PRESSABLE;","map":{"version":3,"names":["_extends","_toConsumableArray","_objectWithoutProperties","_excluded","React","forwardRef","xcss","Box","baseFocusRingStyles","outlineColor","outlineWidth","outlineStyle","outlineOffset","focusRingStyles","outline","UNSAFE_PRESSABLE","_ref","ref","children","backgroundColor","padding","paddingBlock","paddingBlockStart","paddingBlockEnd","paddingInline","paddingInlineStart","paddingInlineEnd","isDisabled","_ref$type","type","testId","xcssStyles","htmlAttributes","styles","cursor","Array","isArray","concat","createElement","as","disabled"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/primitives/dist/esm/components/pressable.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"backgroundColor\", \"padding\", \"paddingBlock\", \"paddingBlockStart\", \"paddingBlockEnd\", \"paddingInline\", \"paddingInlineStart\", \"paddingInlineEnd\", \"isDisabled\", \"type\", \"testId\", \"xcss\"];\nimport React, { forwardRef } from 'react';\nimport { xcss } from '../xcss/xcss';\nimport Box from './box';\n// TODO: Duplicated FocusRing styles due to lack of `xcss` support\n// and to prevent additional dependency\nvar baseFocusRingStyles = {\n  outlineColor: 'color.border.focused',\n  outlineWidth: 'border.width.outline',\n  outlineStyle: 'solid',\n  outlineOffset: 'space.025'\n};\nvar focusRingStyles = xcss({\n  ':focus-visible': baseFocusRingStyles,\n  '@supports not selector(*:focus-visible)': {\n    ':focus': baseFocusRingStyles\n  },\n  '@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)': {\n    ':focus-visible': {\n      outline: '1px solid'\n    }\n  }\n});\n\n/**\n * __UNSAFE_PRESSABLE__\n *\n * @internal Still under development. Do not use.\n *\n * A Pressable is a primitive component that renders a `<button>`.\n *\n * - [Examples](https://atlassian.design/components/primitives/pressable/examples)\n * - [Code](https://atlassian.design/components/primitives/pressable/code)\n * - [Usage](https://atlassian.design/components/primitives/pressable/usage)\n */\nvar UNSAFE_PRESSABLE = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    backgroundColor = _ref.backgroundColor,\n    padding = _ref.padding,\n    paddingBlock = _ref.paddingBlock,\n    paddingBlockStart = _ref.paddingBlockStart,\n    paddingBlockEnd = _ref.paddingBlockEnd,\n    paddingInline = _ref.paddingInline,\n    paddingInlineStart = _ref.paddingInlineStart,\n    paddingInlineEnd = _ref.paddingInlineEnd,\n    isDisabled = _ref.isDisabled,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'button' : _ref$type,\n    testId = _ref.testId,\n    xcssStyles = _ref.xcss,\n    htmlAttributes = _objectWithoutProperties(_ref, _excluded);\n  // Combine default styles with supplied styles. XCSS does not support deep nested arrays\n  var styles = [xcss({\n    cursor: isDisabled ? 'not-allowed' : 'pointer'\n  }), focusRingStyles];\n  styles = Array.isArray(xcssStyles) ? [].concat(_toConsumableArray(styles), _toConsumableArray(xcssStyles)) : [].concat(_toConsumableArray(styles), [xcssStyles]);\n  return /*#__PURE__*/React.createElement(Box, _extends({}, htmlAttributes, {\n    as: \"button\",\n    ref: ref,\n    testId: testId,\n    type: type,\n    backgroundColor: backgroundColor,\n    padding: padding,\n    paddingBlock: paddingBlock,\n    paddingBlockStart: paddingBlockStart,\n    paddingBlockEnd: paddingBlockEnd,\n    paddingInline: paddingInline,\n    paddingInlineStart: paddingInlineStart,\n    paddingInlineEnd: paddingInlineEnd\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    ,\n    xcss: styles,\n    disabled: isDisabled\n  }), children);\n});\nexport default UNSAFE_PRESSABLE;"],"mappings":"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"},"metadata":{},"sourceType":"module"}