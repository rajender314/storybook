{"ast":null,"code":"import warnOnce from '@atlaskit/ds-lib/warn-once';\nimport tokens from './artifacts/token-names';\nimport { TOKEN_NOT_FOUND_CSS_VAR } from './constants';\nvar name = \"@atlaskit/tokens\";\nvar version = \"1.28.1\";\n/**\n * Takes a dot-separated token name and an optional fallback, and returns the CSS custom property for the corresponding token.\n * This should be used to implement design decisions throughout your application.\n *\n * Note: With `@atlaskit/babel-plugin-tokens`, this function can be pre-compiled and a fallback value automatically inserted.\n *\n * @param {string} path - A dot-separated token name (example: `'color.background.brand'` or `'spacing.scale.100'`).\n * @param {string} [fallback] - The fallback value that should render when token CSS is not present in your app.\n *\n * @example\n * ```\n * <div\n *   css={{\n *     backgroundColor: token('elevation.surface.raised', N0),\n *     boxShadow: token('elevation.shadow.raised', `0 20px 32px -8px ${N50A}, 0 0 1px ${N60A}`),\n *     padding: token('spacing.scale.100', '8px'),\n *     fontWeight: token('font.weight.regular', '400'),\n *   }}\n * />\n * ```\n *\n */\nfunction token(path, fallback) {\n  var token = tokens[path];\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' && !token) {\n    warnOnce(\"Unknown token id at path: \".concat(path, \" for \").concat(name, \"@\").concat(version));\n  }\n\n  // if the token is not found - replacing it with variable name without any value, to avoid it being undefined which would result in invalid css\n  if (!token) {\n    token = TOKEN_NOT_FOUND_CSS_VAR;\n  }\n  var tokenCall = fallback ? \"var(\".concat(token, \", \").concat(fallback, \")\") : \"var(\".concat(token, \")\");\n  return tokenCall;\n}\nexport default token;","map":{"version":3,"names":["warnOnce","tokens","TOKEN_NOT_FOUND_CSS_VAR","name","version","token","path","fallback","process","env","NODE_ENV","concat","tokenCall"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/modal-dialog/node_modules/@atlaskit/tokens/dist/esm/get-token.js"],"sourcesContent":["import warnOnce from '@atlaskit/ds-lib/warn-once';\nimport tokens from './artifacts/token-names';\nimport { TOKEN_NOT_FOUND_CSS_VAR } from './constants';\nvar name = \"@atlaskit/tokens\";\nvar version = \"1.28.1\";\n/**\n * Takes a dot-separated token name and an optional fallback, and returns the CSS custom property for the corresponding token.\n * This should be used to implement design decisions throughout your application.\n *\n * Note: With `@atlaskit/babel-plugin-tokens`, this function can be pre-compiled and a fallback value automatically inserted.\n *\n * @param {string} path - A dot-separated token name (example: `'color.background.brand'` or `'spacing.scale.100'`).\n * @param {string} [fallback] - The fallback value that should render when token CSS is not present in your app.\n *\n * @example\n * ```\n * <div\n *   css={{\n *     backgroundColor: token('elevation.surface.raised', N0),\n *     boxShadow: token('elevation.shadow.raised', `0 20px 32px -8px ${N50A}, 0 0 1px ${N60A}`),\n *     padding: token('spacing.scale.100', '8px'),\n *     fontWeight: token('font.weight.regular', '400'),\n *   }}\n * />\n * ```\n *\n */\nfunction token(path, fallback) {\n  var token = tokens[path];\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' && !token) {\n    warnOnce(\"Unknown token id at path: \".concat(path, \" for \").concat(name, \"@\").concat(version));\n  }\n\n  // if the token is not found - replacing it with variable name without any value, to avoid it being undefined which would result in invalid css\n  if (!token) {\n    token = TOKEN_NOT_FOUND_CSS_VAR;\n  }\n  var tokenCall = fallback ? \"var(\".concat(token, \", \").concat(fallback, \")\") : \"var(\".concat(token, \")\");\n  return tokenCall;\n}\nexport default token;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,uBAAuB,QAAQ,aAAa;AACrD,IAAIC,IAAI,GAAG,kBAAkB;AAC7B,IAAIC,OAAO,GAAG,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAC7B,IAAIF,KAAK,GAAGJ,MAAM,CAACK,IAAI,CAAC;EACxB,IAAI,OAAOE,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,CAACL,KAAK,EAAE;IACrFL,QAAQ,CAAC,4BAA4B,CAACW,MAAM,CAACL,IAAI,EAAE,OAAO,CAAC,CAACK,MAAM,CAACR,IAAI,EAAE,GAAG,CAAC,CAACQ,MAAM,CAACP,OAAO,CAAC,CAAC;EAChG;;EAEA;EACA,IAAI,CAACC,KAAK,EAAE;IACVA,KAAK,GAAGH,uBAAuB;EACjC;EACA,IAAIU,SAAS,GAAGL,QAAQ,GAAG,MAAM,CAACI,MAAM,CAACN,KAAK,EAAE,IAAI,CAAC,CAACM,MAAM,CAACJ,QAAQ,EAAE,GAAG,CAAC,GAAG,MAAM,CAACI,MAAM,CAACN,KAAK,EAAE,GAAG,CAAC;EACvG,OAAOO,SAAS;AAClB;AACA,eAAeP,KAAK"},"metadata":{},"sourceType":"module"}