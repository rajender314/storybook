{"ast":null,"code":"/**\n * Our internal configuration for breakpoints configuration.\n *\n * We explicitly use `-0.01rem` for \"max\" values to both ensure we do not overlap our media queries, but also don't skip any fractional pixels.  There is a chance this is not safe in some browsers, eg. Safari has weird rounding.\n * @see: https://tzi.fr/css/prevent-double-breakpoint/\n *\n * @experimental Unsafe for direct consumption outside of the design system itself; please use our `media` export instead for media queries.\n */\nexport var UNSAFE_BREAKPOINTS_CONFIG = {\n  // mobile\n  xxs: {\n    gridItemGutter: \"var(--ds-space-200, 16px)\",\n    gridMargin: \"var(--ds-space-200, 16px)\",\n    min: '0rem',\n    max: '29.99rem'\n  },\n  // phablet\n  xs: {\n    gridItemGutter: \"var(--ds-space-200, 16px)\",\n    gridMargin: \"var(--ds-space-200, 16px)\",\n    min: '30rem',\n    max: '47.99rem'\n  },\n  // tablet\n  sm: {\n    gridItemGutter: \"var(--ds-space-200, 16px)\",\n    gridMargin: \"var(--ds-space-300, 24px)\",\n    min: '48rem',\n    max: '63.99rem'\n  },\n  // laptop desktop\n  md: {\n    gridItemGutter: \"var(--ds-space-300, 24px)\",\n    gridMargin: \"var(--ds-space-400, 32px)\",\n    min: '64rem',\n    max: '89.99rem'\n  },\n  // monitor\n  lg: {\n    gridItemGutter: \"var(--ds-space-400, 32px)\",\n    gridMargin: \"var(--ds-space-400, 32px)\",\n    min: '90rem',\n    max: '109.99rem'\n  },\n  // large high res\n  xl: {\n    gridItemGutter: \"var(--ds-space-400, 32px)\",\n    gridMargin: \"var(--ds-space-500, 40px)\",\n    min: '110rem',\n    max: null\n  }\n  // NOTE: We previously had an `xxl=135rem` breakpoint, but it was removed as it was not used anywhere and felt too large\n}; //TODO: This `as const` should really be `satisfies Record<Breakpoint, BreakpointConfig>`, but that's not possible in our shipped TypeScript version yet.\n\n/**\n * The list of breakpoints in order from smallest to largest.  You may need to clone and reverse this list if you want the opposite.\n *\n * This is intentional for cascading with `min-width` or `media.above`. Media queries go from lowest width to highest.\n *\n * @experimental Unsafe for consumption outside of the design system itself.\n */\nexport var UNSAFE_BREAKPOINTS_ORDERED_LIST = Object.keys(UNSAFE_BREAKPOINTS_CONFIG);\n\n/**\n * This is our smallest breakpoint with a few nuances to it:\n * 1. It is the default value for shorthands, eg. `<GridItem span={6} />` maps to `{ [SMALLEST_BREAKPOINT]: props.span }`\n * 2. It's omitted in `media.below` as there's nothing below `0px`.\n */\nexport var SMALLEST_BREAKPOINT = UNSAFE_BREAKPOINTS_ORDERED_LIST[0];","map":{"version":3,"names":["UNSAFE_BREAKPOINTS_CONFIG","xxs","gridItemGutter","gridMargin","min","max","xs","sm","md","lg","xl","UNSAFE_BREAKPOINTS_ORDERED_LIST","Object","keys","SMALLEST_BREAKPOINT"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/primitives/dist/esm/responsive/constants.js"],"sourcesContent":["/**\n * Our internal configuration for breakpoints configuration.\n *\n * We explicitly use `-0.01rem` for \"max\" values to both ensure we do not overlap our media queries, but also don't skip any fractional pixels.  There is a chance this is not safe in some browsers, eg. Safari has weird rounding.\n * @see: https://tzi.fr/css/prevent-double-breakpoint/\n *\n * @experimental Unsafe for direct consumption outside of the design system itself; please use our `media` export instead for media queries.\n */\nexport var UNSAFE_BREAKPOINTS_CONFIG = {\n  // mobile\n  xxs: {\n    gridItemGutter: \"var(--ds-space-200, 16px)\",\n    gridMargin: \"var(--ds-space-200, 16px)\",\n    min: '0rem',\n    max: '29.99rem'\n  },\n  // phablet\n  xs: {\n    gridItemGutter: \"var(--ds-space-200, 16px)\",\n    gridMargin: \"var(--ds-space-200, 16px)\",\n    min: '30rem',\n    max: '47.99rem'\n  },\n  // tablet\n  sm: {\n    gridItemGutter: \"var(--ds-space-200, 16px)\",\n    gridMargin: \"var(--ds-space-300, 24px)\",\n    min: '48rem',\n    max: '63.99rem'\n  },\n  // laptop desktop\n  md: {\n    gridItemGutter: \"var(--ds-space-300, 24px)\",\n    gridMargin: \"var(--ds-space-400, 32px)\",\n    min: '64rem',\n    max: '89.99rem'\n  },\n  // monitor\n  lg: {\n    gridItemGutter: \"var(--ds-space-400, 32px)\",\n    gridMargin: \"var(--ds-space-400, 32px)\",\n    min: '90rem',\n    max: '109.99rem'\n  },\n  // large high res\n  xl: {\n    gridItemGutter: \"var(--ds-space-400, 32px)\",\n    gridMargin: \"var(--ds-space-500, 40px)\",\n    min: '110rem',\n    max: null\n  }\n  // NOTE: We previously had an `xxl=135rem` breakpoint, but it was removed as it was not used anywhere and felt too large\n}; //TODO: This `as const` should really be `satisfies Record<Breakpoint, BreakpointConfig>`, but that's not possible in our shipped TypeScript version yet.\n\n/**\n * The list of breakpoints in order from smallest to largest.  You may need to clone and reverse this list if you want the opposite.\n *\n * This is intentional for cascading with `min-width` or `media.above`. Media queries go from lowest width to highest.\n *\n * @experimental Unsafe for consumption outside of the design system itself.\n */\nexport var UNSAFE_BREAKPOINTS_ORDERED_LIST = Object.keys(UNSAFE_BREAKPOINTS_CONFIG);\n\n/**\n * This is our smallest breakpoint with a few nuances to it:\n * 1. It is the default value for shorthands, eg. `<GridItem span={6} />` maps to `{ [SMALLEST_BREAKPOINT]: props.span }`\n * 2. It's omitted in `media.below` as there's nothing below `0px`.\n */\nexport var SMALLEST_BREAKPOINT = UNSAFE_BREAKPOINTS_ORDERED_LIST[0];"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,yBAAyB,GAAG;EACrC;EACAC,GAAG,EAAE;IACHC,cAAc,EAAE,2BAA2B;IAC3CC,UAAU,EAAE,2BAA2B;IACvCC,GAAG,EAAE,MAAM;IACXC,GAAG,EAAE;EACP,CAAC;EACD;EACAC,EAAE,EAAE;IACFJ,cAAc,EAAE,2BAA2B;IAC3CC,UAAU,EAAE,2BAA2B;IACvCC,GAAG,EAAE,OAAO;IACZC,GAAG,EAAE;EACP,CAAC;EACD;EACAE,EAAE,EAAE;IACFL,cAAc,EAAE,2BAA2B;IAC3CC,UAAU,EAAE,2BAA2B;IACvCC,GAAG,EAAE,OAAO;IACZC,GAAG,EAAE;EACP,CAAC;EACD;EACAG,EAAE,EAAE;IACFN,cAAc,EAAE,2BAA2B;IAC3CC,UAAU,EAAE,2BAA2B;IACvCC,GAAG,EAAE,OAAO;IACZC,GAAG,EAAE;EACP,CAAC;EACD;EACAI,EAAE,EAAE;IACFP,cAAc,EAAE,2BAA2B;IAC3CC,UAAU,EAAE,2BAA2B;IACvCC,GAAG,EAAE,OAAO;IACZC,GAAG,EAAE;EACP,CAAC;EACD;EACAK,EAAE,EAAE;IACFR,cAAc,EAAE,2BAA2B;IAC3CC,UAAU,EAAE,2BAA2B;IACvCC,GAAG,EAAE,QAAQ;IACbC,GAAG,EAAE;EACP;EACA;AACF,CAAC,CAAC,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIM,+BAA+B,GAAGC,MAAM,CAACC,IAAI,CAACb,yBAAyB,CAAC;;AAEnF;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIc,mBAAmB,GAAGH,+BAA+B,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}