{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport { bind } from 'bind-event-listener';\nimport { setGlobalTheme } from '@atlaskit/tokens';\nvar defaultThemeSettings = {\n  dark: 'dark',\n  light: 'light',\n  spacing: 'spacing'\n};\nvar ColorModeContext = /*#__PURE__*/createContext(undefined);\nvar SetColorModeContext = /*#__PURE__*/createContext(undefined);\nvar ThemeContext = /*#__PURE__*/createContext(undefined);\nvar SetThemeContext = /*#__PURE__*/createContext(undefined);\n\n/**\n * __useColorMode()__\n *\n * Returns the current color mode when inside the app provider.\n */\nexport function useColorMode() {\n  var value = useContext(ColorModeContext);\n  if (!value) {\n    throw new Error('useColorMode must be used within AppProvider.');\n  }\n  return value;\n}\n\n/**\n * __useSetColorMode()__\n *\n * Returns the color mode setter when inside the app provider.\n */\nexport function useSetColorMode() {\n  var value = useContext(SetColorModeContext);\n  if (!value) {\n    throw new Error('useSetColorMode must be used within AppProvider.');\n  }\n  return value;\n}\n\n/**\n * __useTheme()__\n *\n * Returns the current theme settings when inside the app provider.\n */\nexport function useTheme() {\n  var value = useContext(ThemeContext);\n  if (!value) {\n    throw new Error('useTheme must be used within AppProvider.');\n  }\n  return value;\n}\n\n/**\n * __useSetTheme()__\n *\n * Returns the theme setter when inside the app provider.\n */\nexport function useSetTheme() {\n  var value = useContext(SetThemeContext);\n  if (!value) {\n    throw new Error('useSetTheme must be used within AppProvider.');\n  }\n  return value;\n}\nvar isMatchMediaAvailable = typeof window !== 'undefined' && 'matchMedia' in window;\nvar prefersDarkModeMql = isMatchMediaAvailable ? window.matchMedia('(prefers-color-scheme: dark)') : undefined;\n\n// TODO: currently 'auto' color mode will always return 'light' in SSR.\n// Additional work required: https://product-fabric.atlassian.net/browse/DSP-9781\nfunction getReconciledColorMode(colorMode) {\n  if (colorMode === 'auto') {\n    return prefersDarkModeMql !== null && prefersDarkModeMql !== void 0 && prefersDarkModeMql.matches ? 'dark' : 'light';\n  }\n  return colorMode;\n}\n/**\n * __Theme provider__\n *\n * Provides global theming configuration.\n *\n * @internal\n */\nexport function ThemeProvider(_ref) {\n  var children = _ref.children,\n    defaultColorMode = _ref.defaultColorMode,\n    _ref$defaultTheme = _ref.defaultTheme,\n    _ref$defaultTheme2 = _ref$defaultTheme === void 0 ? defaultThemeSettings : _ref$defaultTheme,\n    _ref$defaultTheme2$da = _ref$defaultTheme2.dark,\n    dark = _ref$defaultTheme2$da === void 0 ? 'dark' : _ref$defaultTheme2$da,\n    _ref$defaultTheme2$li = _ref$defaultTheme2.light,\n    light = _ref$defaultTheme2$li === void 0 ? 'light' : _ref$defaultTheme2$li,\n    _ref$defaultTheme2$sp = _ref$defaultTheme2.spacing,\n    spacing = _ref$defaultTheme2$sp === void 0 ? 'spacing' : _ref$defaultTheme2$sp,\n    typography = _ref$defaultTheme2.typography,\n    shape = _ref$defaultTheme2.shape;\n  var _useState = useState(defaultColorMode),\n    _useState2 = _slicedToArray(_useState, 2),\n    chosenColorMode = _useState2[0],\n    setChosenColorMode = _useState2[1];\n  var _useState3 = useState(getReconciledColorMode(defaultColorMode)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    reconciledColorMode = _useState4[0],\n    setReconciledColorMode = _useState4[1];\n  var _useState5 = useState({\n      dark: dark,\n      light: light,\n      spacing: spacing,\n      typography: typography,\n      shape: shape\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    theme = _useState6[0],\n    setTheme = _useState6[1];\n  var setColorMode = useCallback(function (colorMode) {\n    setChosenColorMode(colorMode);\n    setReconciledColorMode(getReconciledColorMode(colorMode));\n  }, []);\n  var setPartialTheme = useCallback(function (nextTheme) {\n    setTheme(function (theme) {\n      return _objectSpread(_objectSpread({}, theme), nextTheme);\n    });\n  }, []);\n  useEffect(function () {\n    setGlobalTheme(_objectSpread(_objectSpread({}, theme), {}, {\n      colorMode: reconciledColorMode\n    }));\n  }, [theme, reconciledColorMode]);\n  useEffect(function () {\n    if (!prefersDarkModeMql) {\n      return;\n    }\n    var unbindListener = bind(prefersDarkModeMql, {\n      type: 'change',\n      listener: function listener(event) {\n        if (chosenColorMode === 'auto') {\n          setReconciledColorMode(event.matches ? 'dark' : 'light');\n        }\n      }\n    });\n    return unbindListener;\n  }, [chosenColorMode]);\n  return /*#__PURE__*/React.createElement(ColorModeContext.Provider, {\n    value: reconciledColorMode\n  }, /*#__PURE__*/React.createElement(SetColorModeContext.Provider, {\n    value: setColorMode\n  }, /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, /*#__PURE__*/React.createElement(SetThemeContext.Provider, {\n    value: setPartialTheme\n  }, children))));\n}\nexport default ThemeProvider;","map":{"version":3,"names":["_defineProperty","_slicedToArray","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","React","createContext","useCallback","useContext","useEffect","useState","bind","setGlobalTheme","defaultThemeSettings","dark","light","spacing","ColorModeContext","undefined","SetColorModeContext","ThemeContext","SetThemeContext","useColorMode","value","Error","useSetColorMode","useTheme","useSetTheme","isMatchMediaAvailable","window","prefersDarkModeMql","matchMedia","getReconciledColorMode","colorMode","matches","ThemeProvider","_ref","children","defaultColorMode","_ref$defaultTheme","defaultTheme","_ref$defaultTheme2","_ref$defaultTheme2$da","_ref$defaultTheme2$li","_ref$defaultTheme2$sp","typography","shape","_useState","_useState2","chosenColorMode","setChosenColorMode","_useState3","_useState4","reconciledColorMode","setReconciledColorMode","_useState5","_useState6","theme","setTheme","setColorMode","setPartialTheme","nextTheme","unbindListener","type","listener","event","createElement","Provider"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/app-provider/dist/esm/theme-provider.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport { bind } from 'bind-event-listener';\nimport { setGlobalTheme } from '@atlaskit/tokens';\nvar defaultThemeSettings = {\n  dark: 'dark',\n  light: 'light',\n  spacing: 'spacing'\n};\nvar ColorModeContext = /*#__PURE__*/createContext(undefined);\nvar SetColorModeContext = /*#__PURE__*/createContext(undefined);\nvar ThemeContext = /*#__PURE__*/createContext(undefined);\nvar SetThemeContext = /*#__PURE__*/createContext(undefined);\n\n/**\n * __useColorMode()__\n *\n * Returns the current color mode when inside the app provider.\n */\nexport function useColorMode() {\n  var value = useContext(ColorModeContext);\n  if (!value) {\n    throw new Error('useColorMode must be used within AppProvider.');\n  }\n  return value;\n}\n\n/**\n * __useSetColorMode()__\n *\n * Returns the color mode setter when inside the app provider.\n */\nexport function useSetColorMode() {\n  var value = useContext(SetColorModeContext);\n  if (!value) {\n    throw new Error('useSetColorMode must be used within AppProvider.');\n  }\n  return value;\n}\n\n/**\n * __useTheme()__\n *\n * Returns the current theme settings when inside the app provider.\n */\nexport function useTheme() {\n  var value = useContext(ThemeContext);\n  if (!value) {\n    throw new Error('useTheme must be used within AppProvider.');\n  }\n  return value;\n}\n\n/**\n * __useSetTheme()__\n *\n * Returns the theme setter when inside the app provider.\n */\nexport function useSetTheme() {\n  var value = useContext(SetThemeContext);\n  if (!value) {\n    throw new Error('useSetTheme must be used within AppProvider.');\n  }\n  return value;\n}\nvar isMatchMediaAvailable = typeof window !== 'undefined' && 'matchMedia' in window;\nvar prefersDarkModeMql = isMatchMediaAvailable ? window.matchMedia('(prefers-color-scheme: dark)') : undefined;\n\n// TODO: currently 'auto' color mode will always return 'light' in SSR.\n// Additional work required: https://product-fabric.atlassian.net/browse/DSP-9781\nfunction getReconciledColorMode(colorMode) {\n  if (colorMode === 'auto') {\n    return prefersDarkModeMql !== null && prefersDarkModeMql !== void 0 && prefersDarkModeMql.matches ? 'dark' : 'light';\n  }\n  return colorMode;\n}\n/**\n * __Theme provider__\n *\n * Provides global theming configuration.\n *\n * @internal\n */\nexport function ThemeProvider(_ref) {\n  var children = _ref.children,\n    defaultColorMode = _ref.defaultColorMode,\n    _ref$defaultTheme = _ref.defaultTheme,\n    _ref$defaultTheme2 = _ref$defaultTheme === void 0 ? defaultThemeSettings : _ref$defaultTheme,\n    _ref$defaultTheme2$da = _ref$defaultTheme2.dark,\n    dark = _ref$defaultTheme2$da === void 0 ? 'dark' : _ref$defaultTheme2$da,\n    _ref$defaultTheme2$li = _ref$defaultTheme2.light,\n    light = _ref$defaultTheme2$li === void 0 ? 'light' : _ref$defaultTheme2$li,\n    _ref$defaultTheme2$sp = _ref$defaultTheme2.spacing,\n    spacing = _ref$defaultTheme2$sp === void 0 ? 'spacing' : _ref$defaultTheme2$sp,\n    typography = _ref$defaultTheme2.typography,\n    shape = _ref$defaultTheme2.shape;\n  var _useState = useState(defaultColorMode),\n    _useState2 = _slicedToArray(_useState, 2),\n    chosenColorMode = _useState2[0],\n    setChosenColorMode = _useState2[1];\n  var _useState3 = useState(getReconciledColorMode(defaultColorMode)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    reconciledColorMode = _useState4[0],\n    setReconciledColorMode = _useState4[1];\n  var _useState5 = useState({\n      dark: dark,\n      light: light,\n      spacing: spacing,\n      typography: typography,\n      shape: shape\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    theme = _useState6[0],\n    setTheme = _useState6[1];\n  var setColorMode = useCallback(function (colorMode) {\n    setChosenColorMode(colorMode);\n    setReconciledColorMode(getReconciledColorMode(colorMode));\n  }, []);\n  var setPartialTheme = useCallback(function (nextTheme) {\n    setTheme(function (theme) {\n      return _objectSpread(_objectSpread({}, theme), nextTheme);\n    });\n  }, []);\n  useEffect(function () {\n    setGlobalTheme(_objectSpread(_objectSpread({}, theme), {}, {\n      colorMode: reconciledColorMode\n    }));\n  }, [theme, reconciledColorMode]);\n  useEffect(function () {\n    if (!prefersDarkModeMql) {\n      return;\n    }\n    var unbindListener = bind(prefersDarkModeMql, {\n      type: 'change',\n      listener: function listener(event) {\n        if (chosenColorMode === 'auto') {\n          setReconciledColorMode(event.matches ? 'dark' : 'light');\n        }\n      }\n    });\n    return unbindListener;\n  }, [chosenColorMode]);\n  return /*#__PURE__*/React.createElement(ColorModeContext.Provider, {\n    value: reconciledColorMode\n  }, /*#__PURE__*/React.createElement(SetColorModeContext.Provider, {\n    value: setColorMode\n  }, /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, /*#__PURE__*/React.createElement(SetThemeContext.Provider, {\n    value: setPartialTheme\n  }, children))));\n}\nexport default ThemeProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}