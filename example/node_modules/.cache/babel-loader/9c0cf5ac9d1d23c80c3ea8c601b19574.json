{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport memoizeOne from 'memoize-one';\n\n// TODO: comma needed after generic declaration below, or the .tsx file thinks\n// it is a JSX element. Tidy up in a future refactor.\nvar collapseRange = function collapseRange(pages, current, _ref, testId) {\n  var max = _ref.max,\n    ellipsis = _ref.ellipsis,\n    transform = _ref.transform;\n  var total = pages.length;\n  // only need ellipsis if we have more pages than we can display\n  var needEllipsis = total > max;\n  // show start ellipsis if the current page is further away than max - 4 from the first page\n  var hasStartEllipsis = needEllipsis && max - 4 < current;\n  // show end ellipsis if the current page is further than total - max + 3 from the last page\n  var hasEndEllipsis = needEllipsis && current < total - max + 3;\n  var getPageComponents = memoizeOne(function () {\n    var startIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var lastIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : total;\n    return pages.slice(startIndex, lastIndex).map(function (page, index) {\n      return transform(page, startIndex + index, testId);\n    });\n  });\n  if (!needEllipsis) {\n    return getPageComponents(0, total);\n  }\n  if (hasStartEllipsis && !hasEndEllipsis) {\n    var _pageCount = max - 2;\n    return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({\n      key: 'ellipsis-1',\n      testId: \"\".concat(testId, \"-ellipsis\")\n    })], _toConsumableArray(getPageComponents(total - _pageCount)));\n  }\n  if (!hasStartEllipsis && hasEndEllipsis) {\n    var _pageCount2 = max - 2;\n    return [].concat(_toConsumableArray(getPageComponents(0, _pageCount2)), [ellipsis({\n      key: 'ellipsis-1',\n      testId: \"\".concat(testId, \"-ellipsis\")\n    })], _toConsumableArray(getPageComponents(total - 1)));\n  }\n  // we have both start and end ellipsis\n  var pageCount = max - 4;\n  return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({\n    key: 'ellipsis-1',\n    testId: \"\".concat(testId, \"-ellipsis\")\n  })], _toConsumableArray(getPageComponents(current - Math.floor(pageCount / 2), current + pageCount - 1)), [ellipsis({\n    key: 'ellipsis-2',\n    testId: \"\".concat(testId, \"-ellipsis\")\n  })], _toConsumableArray(getPageComponents(total - 1)));\n};\nexport default collapseRange;","map":{"version":3,"names":["_toConsumableArray","memoizeOne","collapseRange","pages","current","_ref","testId","max","ellipsis","transform","total","length","needEllipsis","hasStartEllipsis","hasEndEllipsis","getPageComponents","startIndex","arguments","undefined","lastIndex","slice","map","page","index","_pageCount","concat","key","_pageCount2","pageCount","Math","floor"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/pagination/dist/esm/internal/utils/collapse-range.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport memoizeOne from 'memoize-one';\n\n// TODO: comma needed after generic declaration below, or the .tsx file thinks\n// it is a JSX element. Tidy up in a future refactor.\nvar collapseRange = function collapseRange(pages, current, _ref, testId) {\n  var max = _ref.max,\n    ellipsis = _ref.ellipsis,\n    transform = _ref.transform;\n  var total = pages.length;\n  // only need ellipsis if we have more pages than we can display\n  var needEllipsis = total > max;\n  // show start ellipsis if the current page is further away than max - 4 from the first page\n  var hasStartEllipsis = needEllipsis && max - 4 < current;\n  // show end ellipsis if the current page is further than total - max + 3 from the last page\n  var hasEndEllipsis = needEllipsis && current < total - max + 3;\n  var getPageComponents = memoizeOne(function () {\n    var startIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var lastIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : total;\n    return pages.slice(startIndex, lastIndex).map(function (page, index) {\n      return transform(page, startIndex + index, testId);\n    });\n  });\n  if (!needEllipsis) {\n    return getPageComponents(0, total);\n  }\n  if (hasStartEllipsis && !hasEndEllipsis) {\n    var _pageCount = max - 2;\n    return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({\n      key: 'ellipsis-1',\n      testId: \"\".concat(testId, \"-ellipsis\")\n    })], _toConsumableArray(getPageComponents(total - _pageCount)));\n  }\n  if (!hasStartEllipsis && hasEndEllipsis) {\n    var _pageCount2 = max - 2;\n    return [].concat(_toConsumableArray(getPageComponents(0, _pageCount2)), [ellipsis({\n      key: 'ellipsis-1',\n      testId: \"\".concat(testId, \"-ellipsis\")\n    })], _toConsumableArray(getPageComponents(total - 1)));\n  }\n  // we have both start and end ellipsis\n  var pageCount = max - 4;\n  return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({\n    key: 'ellipsis-1',\n    testId: \"\".concat(testId, \"-ellipsis\")\n  })], _toConsumableArray(getPageComponents(current - Math.floor(pageCount / 2), current + pageCount - 1)), [ellipsis({\n    key: 'ellipsis-2',\n    testId: \"\".concat(testId, \"-ellipsis\")\n  })], _toConsumableArray(getPageComponents(total - 1)));\n};\nexport default collapseRange;"],"mappings":"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"},"metadata":{},"sourceType":"module"}