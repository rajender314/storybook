{"ast":null,"code":"import { MODE } from './constants';\nconst DEFAULT_CROSS_ORIGIN = undefined;\nconst DEFAULT_MANIFEST = {\n  publicPath: '/',\n  assets: {}\n};\nconst DEFAULT_MODE = MODE.HYDRATE;\nconst DEFAULT_RETRY = 2;\nconst config = {\n  crossOrigin: DEFAULT_CROSS_ORIGIN,\n  manifest: DEFAULT_MANIFEST,\n  mode: DEFAULT_MODE,\n  retry: DEFAULT_RETRY\n};\nexport { MODE };\nexport const getConfig = () => config;\nexport const setConfig = nextConfig => {\n  var _nextConfig$crossOrig, _nextConfig$manifest, _nextConfig$mode, _nextConfig$retry;\n  config.crossOrigin = (_nextConfig$crossOrig = nextConfig.crossOrigin) != null ? _nextConfig$crossOrig : DEFAULT_CROSS_ORIGIN;\n  config.manifest = (_nextConfig$manifest = nextConfig.manifest) != null ? _nextConfig$manifest : DEFAULT_MANIFEST;\n  config.mode = (_nextConfig$mode = nextConfig.mode) != null ? _nextConfig$mode : DEFAULT_MODE;\n  config.retry = (_nextConfig$retry = nextConfig.retry) != null ? _nextConfig$retry : DEFAULT_RETRY;\n};","map":{"version":3,"names":["MODE","DEFAULT_CROSS_ORIGIN","undefined","DEFAULT_MANIFEST","publicPath","assets","DEFAULT_MODE","HYDRATE","DEFAULT_RETRY","config","crossOrigin","manifest","mode","retry","getConfig","setConfig","nextConfig","_nextConfig$crossOrig","_nextConfig$manifest","_nextConfig$mode","_nextConfig$retry"],"sources":["../../../src/config/index.ts"],"sourcesContent":["import type { Manifest } from '@react-loosely-lazy/manifest';\n\nimport { MODE } from './constants';\n\nconst DEFAULT_CROSS_ORIGIN = undefined;\n\nconst DEFAULT_MANIFEST = {\n  publicPath: '/',\n  assets: {},\n};\n\nconst DEFAULT_MODE = MODE.HYDRATE;\n\nconst DEFAULT_RETRY = 2;\n\nexport type Config = {\n  crossOrigin: 'anonymous' | 'use-credentials' | undefined;\n  manifest: Manifest;\n  mode: typeof MODE.HYDRATE | typeof MODE.RENDER;\n  retry: number;\n};\n\nconst config: Config = {\n  crossOrigin: DEFAULT_CROSS_ORIGIN,\n  manifest: DEFAULT_MANIFEST,\n  mode: DEFAULT_MODE,\n  retry: DEFAULT_RETRY,\n};\n\nexport { MODE };\n\nexport const getConfig = () => config;\n\nexport const setConfig = (nextConfig: Partial<Config>) => {\n  config.crossOrigin = nextConfig.crossOrigin ?? DEFAULT_CROSS_ORIGIN;\n  config.manifest = nextConfig.manifest ?? DEFAULT_MANIFEST;\n  config.mode = nextConfig.mode ?? DEFAULT_MODE;\n  config.retry = nextConfig.retry ?? DEFAULT_RETRY;\n};\n"],"mappings":"AAEA,SAASA,IAAT,QAAqB,aAArB;AAEA,MAAMC,oBAAoB,GAAGC,SAA7B;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,UAAU,EAAE,GADW;EAEvBC,MAAM,EAAE;AAFe,CAAzB;AAKA,MAAMC,YAAY,GAAGN,IAAI,CAACO,OAA1B;AAEA,MAAMC,aAAa,GAAG,CAAtB;AASA,MAAMC,MAAc,GAAG;EACrBC,WAAW,EAAET,oBADQ;EAErBU,QAAQ,EAAER,gBAFW;EAGrBS,IAAI,EAAEN,YAHe;EAIrBO,KAAK,EAAEL;AAJc,CAAvB;AAOA,SAASR,IAAT;AAEA,OAAO,MAAMc,SAAS,GAAGA,CAAA,KAAML,MAAxB;AAEP,OAAO,MAAMM,SAAS,GAAIC,UAAD,IAAiC;EAAA,IAAAC,qBAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,iBAAA;EACxDX,MAAM,CAACC,WAAP,IAAAO,qBAAA,GAAqBD,UAAU,CAACN,WAAhC,YAAAO,qBAAA,GAA+ChB,oBAA/C;EACAQ,MAAM,CAACE,QAAP,IAAAO,oBAAA,GAAkBF,UAAU,CAACL,QAA7B,YAAAO,oBAAA,GAAyCf,gBAAzC;EACAM,MAAM,CAACG,IAAP,IAAAO,gBAAA,GAAcH,UAAU,CAACJ,IAAzB,YAAAO,gBAAA,GAAiCb,YAAjC;EACAG,MAAM,CAACI,KAAP,IAAAO,iBAAA,GAAeJ,UAAU,CAACH,KAA1B,YAAAO,iBAAA,GAAmCZ,aAAnC;AACD,CALM"},"metadata":{},"sourceType":"module"}