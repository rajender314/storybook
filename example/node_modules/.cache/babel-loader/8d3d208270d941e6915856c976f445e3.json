{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nimport React, { Fragment, useCallback, useContext, useMemo, useRef } from 'react';\nimport { usePlatformLeafEventHandler } from '@atlaskit/analytics-next';\nimport noop from '@atlaskit/ds-lib/noop';\nimport useAutoFocus from '@atlaskit/ds-lib/use-auto-focus';\n// eslint-disable-next-line no-duplicate-imports\nimport InteractionContext from '@atlaskit/interaction-context';\nimport { Box, xcss } from '@atlaskit/primitives';\nimport { useSplitButtonContext } from '../../containers/split-button/split-button-context';\nimport blockEvents from './block-events';\nimport { getXCSS } from './xcss';\n\n// Include modified onClick with analytics\n\nvar overlayStyles = xcss({\n  position: 'absolute',\n  insetInlineStart: 'space.0',\n  insetBlockStart: 'space.0',\n  insetInlineEnd: 'space.0',\n  insetBlockEnd: 'space.0',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n});\n\n/**\n * __Use button base__\n *\n * A React hook that accepts a set of common Button props,\n * and processes them to return consistent base props for usage\n * across various Button components.\n *\n * It also:\n * - Implements auto focus when enabled.\n * - Appends the `onClick` event with UFO analytics tracking.\n *\n * @private\n */\nvar useButtonBase = function useButtonBase(_ref) {\n  var analyticsContext = _ref.analyticsContext,\n    _ref$appearance = _ref.appearance,\n    propAppearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,\n    _ref$autoFocus = _ref.autoFocus,\n    autoFocus = _ref$autoFocus === void 0 ? false : _ref$autoFocus,\n    buttonType = _ref.buttonType,\n    interactionName = _ref.interactionName,\n    _ref$isDisabled = _ref.isDisabled,\n    propIsDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,\n    _ref$isSelected = _ref.isSelected,\n    isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,\n    _ref$isIconButton = _ref.isIconButton,\n    isIconButton = _ref$isIconButton === void 0 ? false : _ref$isIconButton,\n    _ref$hasIconBefore = _ref.hasIconBefore,\n    hasIconBefore = _ref$hasIconBefore === void 0 ? false : _ref$hasIconBefore,\n    _ref$hasIconAfter = _ref.hasIconAfter,\n    hasIconAfter = _ref$hasIconAfter === void 0 ? false : _ref$hasIconAfter,\n    children = _ref.children,\n    _ref$onClick = _ref.onClick,\n    providedOnClick = _ref$onClick === void 0 ? noop : _ref$onClick,\n    onMouseDownCapture = _ref.onMouseDownCapture,\n    onMouseUpCapture = _ref.onMouseUpCapture,\n    onKeyDownCapture = _ref.onKeyDownCapture,\n    onKeyUpCapture = _ref.onKeyUpCapture,\n    onTouchStartCapture = _ref.onTouchStartCapture,\n    onTouchEndCapture = _ref.onTouchEndCapture,\n    onPointerDownCapture = _ref.onPointerDownCapture,\n    onPointerUpCapture = _ref.onPointerUpCapture,\n    onClickCapture = _ref.onClickCapture,\n    overlay = _ref.overlay,\n    ref = _ref.ref,\n    _ref$shouldFitContain = _ref.shouldFitContainer,\n    shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain,\n    _ref$spacing = _ref.spacing,\n    propSpacing = _ref$spacing === void 0 ? 'default' : _ref$spacing;\n  var ourRef = useRef();\n  var splitButtonContext = useSplitButtonContext();\n  var isSplitButton = Boolean(splitButtonContext);\n  var isNavigationSplitButton = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isNavigationSplitButton) || false;\n  var appearance = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.appearance) || propAppearance;\n  var spacing = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.spacing) || propSpacing;\n  var isDisabled = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isDisabled) || propIsDisabled;\n  var isHighlighted = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isHighlighted) || false;\n  var isActiveOverSelected = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isActiveOverSelected) || false;\n  var setRef = useCallback(function (node) {\n    ourRef.current = node;\n    if (ref === null) {\n      return;\n    }\n    if (typeof ref === 'function') {\n      ref(node);\n      return;\n    }\n\n    // @ts-ignore\n    ref.current = node;\n  }, [ourRef, ref]);\n  useAutoFocus(ourRef, autoFocus);\n  var interactionContext = useContext(InteractionContext);\n  var handleClick = useCallback(function (e, analyticsEvent) {\n    interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);\n    providedOnClick(e, analyticsEvent);\n  }, [providedOnClick, interactionContext, interactionName]);\n  var onClick = usePlatformLeafEventHandler({\n    fn: handleClick,\n    action: 'clicked',\n    componentName: 'button',\n    packageName: \"@atlaskit/button\",\n    packageVersion: \"16.16.0\",\n    analyticsData: analyticsContext,\n    actionSubject: buttonType\n  });\n  var buttonXCSS = useMemo(function () {\n    return getXCSS({\n      appearance: appearance,\n      spacing: spacing,\n      isDisabled: isDisabled,\n      isSelected: isSelected,\n      isHighlighted: isHighlighted,\n      isActiveOverSelected: isActiveOverSelected,\n      shouldFitContainer: shouldFitContainer,\n      isIconButton: isIconButton,\n      hasOverlay: Boolean(overlay),\n      isLink: buttonType === 'link',\n      hasIconBefore: hasIconBefore,\n      hasIconAfter: hasIconAfter,\n      isSplit: isSplitButton,\n      isNavigationSplit: isNavigationSplitButton\n    });\n  }, [appearance, buttonType, spacing, isDisabled, isSelected, isHighlighted, isActiveOverSelected, isIconButton, shouldFitContainer, overlay, hasIconBefore, hasIconAfter, isSplitButton, isNavigationSplitButton]);\n  var isEffectivelyDisabled = isDisabled || Boolean(overlay);\n  return _objectSpread({\n    ref: setRef,\n    xcss: buttonXCSS,\n    // Consider overlay buttons to be effectively disabled\n    isDisabled: isEffectivelyDisabled,\n    children: /*#__PURE__*/React.createElement(Fragment, null, children, overlay ? /*#__PURE__*/React.createElement(Box, {\n      as: \"span\",\n      xcss: overlayStyles\n    }, overlay) : null)\n  }, blockEvents(isEffectivelyDisabled, {\n    onClick: onClick,\n    onMouseDownCapture: onMouseDownCapture,\n    onMouseUpCapture: onMouseUpCapture,\n    onKeyDownCapture: onKeyDownCapture,\n    onKeyUpCapture: onKeyUpCapture,\n    onTouchStartCapture: onTouchStartCapture,\n    onTouchEndCapture: onTouchEndCapture,\n    onPointerDownCapture: onPointerDownCapture,\n    onPointerUpCapture: onPointerUpCapture,\n    onClickCapture: onClickCapture\n  }));\n};\nexport default useButtonBase;","map":{"version":3,"names":["_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","React","Fragment","useCallback","useContext","useMemo","useRef","usePlatformLeafEventHandler","noop","useAutoFocus","InteractionContext","Box","xcss","useSplitButtonContext","blockEvents","getXCSS","overlayStyles","position","insetInlineStart","insetBlockStart","insetInlineEnd","insetBlockEnd","display","alignItems","justifyContent","useButtonBase","_ref","analyticsContext","_ref$appearance","appearance","propAppearance","_ref$autoFocus","autoFocus","buttonType","interactionName","_ref$isDisabled","isDisabled","propIsDisabled","_ref$isSelected","isSelected","_ref$isIconButton","isIconButton","_ref$hasIconBefore","hasIconBefore","_ref$hasIconAfter","hasIconAfter","children","_ref$onClick","onClick","providedOnClick","onMouseDownCapture","onMouseUpCapture","onKeyDownCapture","onKeyUpCapture","onTouchStartCapture","onTouchEndCapture","onPointerDownCapture","onPointerUpCapture","onClickCapture","overlay","ref","_ref$shouldFitContain","shouldFitContainer","_ref$spacing","spacing","propSpacing","ourRef","splitButtonContext","isSplitButton","Boolean","isNavigationSplitButton","isHighlighted","isActiveOverSelected","setRef","node","current","interactionContext","handleClick","analyticsEvent","tracePress","timeStamp","fn","action","componentName","packageName","packageVersion","analyticsData","actionSubject","buttonXCSS","hasOverlay","isLink","isSplit","isNavigationSplit","isEffectivelyDisabled","createElement","as"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/use-button-base.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { Fragment, useCallback, useContext, useMemo, useRef } from 'react';\nimport { usePlatformLeafEventHandler } from '@atlaskit/analytics-next';\nimport noop from '@atlaskit/ds-lib/noop';\nimport useAutoFocus from '@atlaskit/ds-lib/use-auto-focus';\n// eslint-disable-next-line no-duplicate-imports\nimport InteractionContext from '@atlaskit/interaction-context';\nimport { Box, xcss } from '@atlaskit/primitives';\nimport { useSplitButtonContext } from '../../containers/split-button/split-button-context';\nimport blockEvents from './block-events';\nimport { getXCSS } from './xcss';\n\n// Include modified onClick with analytics\n\nvar overlayStyles = xcss({\n  position: 'absolute',\n  insetInlineStart: 'space.0',\n  insetBlockStart: 'space.0',\n  insetInlineEnd: 'space.0',\n  insetBlockEnd: 'space.0',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n});\n\n/**\n * __Use button base__\n *\n * A React hook that accepts a set of common Button props,\n * and processes them to return consistent base props for usage\n * across various Button components.\n *\n * It also:\n * - Implements auto focus when enabled.\n * - Appends the `onClick` event with UFO analytics tracking.\n *\n * @private\n */\nvar useButtonBase = function useButtonBase(_ref) {\n  var analyticsContext = _ref.analyticsContext,\n    _ref$appearance = _ref.appearance,\n    propAppearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,\n    _ref$autoFocus = _ref.autoFocus,\n    autoFocus = _ref$autoFocus === void 0 ? false : _ref$autoFocus,\n    buttonType = _ref.buttonType,\n    interactionName = _ref.interactionName,\n    _ref$isDisabled = _ref.isDisabled,\n    propIsDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,\n    _ref$isSelected = _ref.isSelected,\n    isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,\n    _ref$isIconButton = _ref.isIconButton,\n    isIconButton = _ref$isIconButton === void 0 ? false : _ref$isIconButton,\n    _ref$hasIconBefore = _ref.hasIconBefore,\n    hasIconBefore = _ref$hasIconBefore === void 0 ? false : _ref$hasIconBefore,\n    _ref$hasIconAfter = _ref.hasIconAfter,\n    hasIconAfter = _ref$hasIconAfter === void 0 ? false : _ref$hasIconAfter,\n    children = _ref.children,\n    _ref$onClick = _ref.onClick,\n    providedOnClick = _ref$onClick === void 0 ? noop : _ref$onClick,\n    onMouseDownCapture = _ref.onMouseDownCapture,\n    onMouseUpCapture = _ref.onMouseUpCapture,\n    onKeyDownCapture = _ref.onKeyDownCapture,\n    onKeyUpCapture = _ref.onKeyUpCapture,\n    onTouchStartCapture = _ref.onTouchStartCapture,\n    onTouchEndCapture = _ref.onTouchEndCapture,\n    onPointerDownCapture = _ref.onPointerDownCapture,\n    onPointerUpCapture = _ref.onPointerUpCapture,\n    onClickCapture = _ref.onClickCapture,\n    overlay = _ref.overlay,\n    ref = _ref.ref,\n    _ref$shouldFitContain = _ref.shouldFitContainer,\n    shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain,\n    _ref$spacing = _ref.spacing,\n    propSpacing = _ref$spacing === void 0 ? 'default' : _ref$spacing;\n  var ourRef = useRef();\n  var splitButtonContext = useSplitButtonContext();\n  var isSplitButton = Boolean(splitButtonContext);\n  var isNavigationSplitButton = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isNavigationSplitButton) || false;\n  var appearance = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.appearance) || propAppearance;\n  var spacing = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.spacing) || propSpacing;\n  var isDisabled = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isDisabled) || propIsDisabled;\n  var isHighlighted = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isHighlighted) || false;\n  var isActiveOverSelected = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isActiveOverSelected) || false;\n  var setRef = useCallback(function (node) {\n    ourRef.current = node;\n    if (ref === null) {\n      return;\n    }\n    if (typeof ref === 'function') {\n      ref(node);\n      return;\n    }\n\n    // @ts-ignore\n    ref.current = node;\n  }, [ourRef, ref]);\n  useAutoFocus(ourRef, autoFocus);\n  var interactionContext = useContext(InteractionContext);\n  var handleClick = useCallback(function (e, analyticsEvent) {\n    interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);\n    providedOnClick(e, analyticsEvent);\n  }, [providedOnClick, interactionContext, interactionName]);\n  var onClick = usePlatformLeafEventHandler({\n    fn: handleClick,\n    action: 'clicked',\n    componentName: 'button',\n    packageName: \"@atlaskit/button\",\n    packageVersion: \"16.16.0\",\n    analyticsData: analyticsContext,\n    actionSubject: buttonType\n  });\n  var buttonXCSS = useMemo(function () {\n    return getXCSS({\n      appearance: appearance,\n      spacing: spacing,\n      isDisabled: isDisabled,\n      isSelected: isSelected,\n      isHighlighted: isHighlighted,\n      isActiveOverSelected: isActiveOverSelected,\n      shouldFitContainer: shouldFitContainer,\n      isIconButton: isIconButton,\n      hasOverlay: Boolean(overlay),\n      isLink: buttonType === 'link',\n      hasIconBefore: hasIconBefore,\n      hasIconAfter: hasIconAfter,\n      isSplit: isSplitButton,\n      isNavigationSplit: isNavigationSplitButton\n    });\n  }, [appearance, buttonType, spacing, isDisabled, isSelected, isHighlighted, isActiveOverSelected, isIconButton, shouldFitContainer, overlay, hasIconBefore, hasIconAfter, isSplitButton, isNavigationSplitButton]);\n  var isEffectivelyDisabled = isDisabled || Boolean(overlay);\n  return _objectSpread({\n    ref: setRef,\n    xcss: buttonXCSS,\n    // Consider overlay buttons to be effectively disabled\n    isDisabled: isEffectivelyDisabled,\n    children: /*#__PURE__*/React.createElement(Fragment, null, children, overlay ? /*#__PURE__*/React.createElement(Box, {\n      as: \"span\",\n      xcss: overlayStyles\n    }, overlay) : null)\n  }, blockEvents(isEffectivelyDisabled, {\n    onClick: onClick,\n    onMouseDownCapture: onMouseDownCapture,\n    onMouseUpCapture: onMouseUpCapture,\n    onKeyDownCapture: onKeyDownCapture,\n    onKeyUpCapture: onKeyUpCapture,\n    onTouchStartCapture: onTouchStartCapture,\n    onTouchEndCapture: onTouchEndCapture,\n    onPointerDownCapture: onPointerDownCapture,\n    onPointerUpCapture: onPointerUpCapture,\n    onClickCapture: onClickCapture\n  }));\n};\nexport default useButtonBase;"],"mappings":"AAAA,OAAOA,eAAe,MAAM,uCAAuC;AACnE,SAASC,OAAOA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAAE,IAAIC,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACJ,CAAC,CAAC;EAAE,IAAIG,MAAM,CAACE,qBAAqB,EAAE;IAAE,IAAIC,CAAC,GAAGH,MAAM,CAACE,qBAAqB,CAACL,CAAC,CAAC;IAAEC,CAAC,KAAKK,CAAC,GAAGA,CAAC,CAACC,MAAM,CAAC,UAAUN,CAAC,EAAE;MAAE,OAAOE,MAAM,CAACK,wBAAwB,CAACR,CAAC,EAAEC,CAAC,CAAC,CAACQ,UAAU;IAAE,CAAC,CAAC,CAAC,EAAEP,CAAC,CAACQ,IAAI,CAACC,KAAK,CAACT,CAAC,EAAEI,CAAC,CAAC;EAAE;EAAE,OAAOJ,CAAC;AAAE;AAC9P,SAASU,aAAaA,CAACZ,CAAC,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,SAAS,CAACC,MAAM,EAAEb,CAAC,EAAE,EAAE;IAAE,IAAIC,CAAC,GAAG,IAAI,IAAIW,SAAS,CAACZ,CAAC,CAAC,GAAGY,SAAS,CAACZ,CAAC,CAAC,GAAG,CAAC,CAAC;IAAEA,CAAC,GAAG,CAAC,GAAGF,OAAO,CAACI,MAAM,CAACD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACa,OAAO,CAAC,UAAUd,CAAC,EAAE;MAAEH,eAAe,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAACD,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC,GAAGE,MAAM,CAACa,yBAAyB,GAAGb,MAAM,CAACc,gBAAgB,CAACjB,CAAC,EAAEG,MAAM,CAACa,yBAAyB,CAACd,CAAC,CAAC,CAAC,GAAGH,OAAO,CAACI,MAAM,CAACD,CAAC,CAAC,CAAC,CAACa,OAAO,CAAC,UAAUd,CAAC,EAAE;MAAEE,MAAM,CAACe,cAAc,CAAClB,CAAC,EAAEC,CAAC,EAAEE,MAAM,CAACK,wBAAwB,CAACN,CAAC,EAAED,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE;EAAE,OAAOD,CAAC;AAAE;AACtb,OAAOmB,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACjF,SAASC,2BAA2B,QAAQ,0BAA0B;AACtE,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,YAAY,MAAM,iCAAiC;AAC1D;AACA,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,SAASC,GAAG,EAAEC,IAAI,QAAQ,sBAAsB;AAChD,SAASC,qBAAqB,QAAQ,oDAAoD;AAC1F,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SAASC,OAAO,QAAQ,QAAQ;;AAEhC;;AAEA,IAAIC,aAAa,GAAGJ,IAAI,CAAC;EACvBK,QAAQ,EAAE,UAAU;EACpBC,gBAAgB,EAAE,SAAS;EAC3BC,eAAe,EAAE,SAAS;EAC1BC,cAAc,EAAE,SAAS;EACzBC,aAAa,EAAE,SAAS;EACxBC,OAAO,EAAE,MAAM;EACfC,UAAU,EAAE,QAAQ;EACpBC,cAAc,EAAE;AAClB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG,SAASA,aAAaA,CAACC,IAAI,EAAE;EAC/C,IAAIC,gBAAgB,GAAGD,IAAI,CAACC,gBAAgB;IAC1CC,eAAe,GAAGF,IAAI,CAACG,UAAU;IACjCC,cAAc,GAAGF,eAAe,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGA,eAAe;IACzEG,cAAc,GAAGL,IAAI,CAACM,SAAS;IAC/BA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,cAAc;IAC9DE,UAAU,GAAGP,IAAI,CAACO,UAAU;IAC5BC,eAAe,GAAGR,IAAI,CAACQ,eAAe;IACtCC,eAAe,GAAGT,IAAI,CAACU,UAAU;IACjCC,cAAc,GAAGF,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,eAAe;IACrEG,eAAe,GAAGZ,IAAI,CAACa,UAAU;IACjCA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,eAAe;IACjEE,iBAAiB,GAAGd,IAAI,CAACe,YAAY;IACrCA,YAAY,GAAGD,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,iBAAiB;IACvEE,kBAAkB,GAAGhB,IAAI,CAACiB,aAAa;IACvCA,aAAa,GAAGD,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,kBAAkB;IAC1EE,iBAAiB,GAAGlB,IAAI,CAACmB,YAAY;IACrCA,YAAY,GAAGD,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,iBAAiB;IACvEE,QAAQ,GAAGpB,IAAI,CAACoB,QAAQ;IACxBC,YAAY,GAAGrB,IAAI,CAACsB,OAAO;IAC3BC,eAAe,GAAGF,YAAY,KAAK,KAAK,CAAC,GAAGvC,IAAI,GAAGuC,YAAY;IAC/DG,kBAAkB,GAAGxB,IAAI,CAACwB,kBAAkB;IAC5CC,gBAAgB,GAAGzB,IAAI,CAACyB,gBAAgB;IACxCC,gBAAgB,GAAG1B,IAAI,CAAC0B,gBAAgB;IACxCC,cAAc,GAAG3B,IAAI,CAAC2B,cAAc;IACpCC,mBAAmB,GAAG5B,IAAI,CAAC4B,mBAAmB;IAC9CC,iBAAiB,GAAG7B,IAAI,CAAC6B,iBAAiB;IAC1CC,oBAAoB,GAAG9B,IAAI,CAAC8B,oBAAoB;IAChDC,kBAAkB,GAAG/B,IAAI,CAAC+B,kBAAkB;IAC5CC,cAAc,GAAGhC,IAAI,CAACgC,cAAc;IACpCC,OAAO,GAAGjC,IAAI,CAACiC,OAAO;IACtBC,GAAG,GAAGlC,IAAI,CAACkC,GAAG;IACdC,qBAAqB,GAAGnC,IAAI,CAACoC,kBAAkB;IAC/CA,kBAAkB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,qBAAqB;IACrFE,YAAY,GAAGrC,IAAI,CAACsC,OAAO;IAC3BC,WAAW,GAAGF,YAAY,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGA,YAAY;EAClE,IAAIG,MAAM,GAAG5D,MAAM,CAAC,CAAC;EACrB,IAAI6D,kBAAkB,GAAGtD,qBAAqB,CAAC,CAAC;EAChD,IAAIuD,aAAa,GAAGC,OAAO,CAACF,kBAAkB,CAAC;EAC/C,IAAIG,uBAAuB,GAAG,CAACH,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACG,uBAAuB,KAAK,KAAK;EAC3J,IAAIzC,UAAU,GAAG,CAACsC,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACtC,UAAU,KAAKC,cAAc;EAC1I,IAAIkC,OAAO,GAAG,CAACG,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACH,OAAO,KAAKC,WAAW;EACjI,IAAI7B,UAAU,GAAG,CAAC+B,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAAC/B,UAAU,KAAKC,cAAc;EAC1I,IAAIkC,aAAa,GAAG,CAACJ,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACI,aAAa,KAAK,KAAK;EACvI,IAAIC,oBAAoB,GAAG,CAACL,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACK,oBAAoB,KAAK,KAAK;EACrJ,IAAIC,MAAM,GAAGtE,WAAW,CAAC,UAAUuE,IAAI,EAAE;IACvCR,MAAM,CAACS,OAAO,GAAGD,IAAI;IACrB,IAAId,GAAG,KAAK,IAAI,EAAE;MAChB;IACF;IACA,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;MAC7BA,GAAG,CAACc,IAAI,CAAC;MACT;IACF;;IAEA;IACAd,GAAG,CAACe,OAAO,GAAGD,IAAI;EACpB,CAAC,EAAE,CAACR,MAAM,EAAEN,GAAG,CAAC,CAAC;EACjBnD,YAAY,CAACyD,MAAM,EAAElC,SAAS,CAAC;EAC/B,IAAI4C,kBAAkB,GAAGxE,UAAU,CAACM,kBAAkB,CAAC;EACvD,IAAImE,WAAW,GAAG1E,WAAW,CAAC,UAAUrB,CAAC,EAAEgG,cAAc,EAAE;IACzDF,kBAAkB,IAAIA,kBAAkB,CAACG,UAAU,CAAC7C,eAAe,EAAEpD,CAAC,CAACkG,SAAS,CAAC;IACjF/B,eAAe,CAACnE,CAAC,EAAEgG,cAAc,CAAC;EACpC,CAAC,EAAE,CAAC7B,eAAe,EAAE2B,kBAAkB,EAAE1C,eAAe,CAAC,CAAC;EAC1D,IAAIc,OAAO,GAAGzC,2BAA2B,CAAC;IACxC0E,EAAE,EAAEJ,WAAW;IACfK,MAAM,EAAE,SAAS;IACjBC,aAAa,EAAE,QAAQ;IACvBC,WAAW,EAAE,kBAAkB;IAC/BC,cAAc,EAAE,SAAS;IACzBC,aAAa,EAAE3D,gBAAgB;IAC/B4D,aAAa,EAAEtD;EACjB,CAAC,CAAC;EACF,IAAIuD,UAAU,GAAGnF,OAAO,CAAC,YAAY;IACnC,OAAOU,OAAO,CAAC;MACbc,UAAU,EAAEA,UAAU;MACtBmC,OAAO,EAAEA,OAAO;MAChB5B,UAAU,EAAEA,UAAU;MACtBG,UAAU,EAAEA,UAAU;MACtBgC,aAAa,EAAEA,aAAa;MAC5BC,oBAAoB,EAAEA,oBAAoB;MAC1CV,kBAAkB,EAAEA,kBAAkB;MACtCrB,YAAY,EAAEA,YAAY;MAC1BgD,UAAU,EAAEpB,OAAO,CAACV,OAAO,CAAC;MAC5B+B,MAAM,EAAEzD,UAAU,KAAK,MAAM;MAC7BU,aAAa,EAAEA,aAAa;MAC5BE,YAAY,EAAEA,YAAY;MAC1B8C,OAAO,EAAEvB,aAAa;MACtBwB,iBAAiB,EAAEtB;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACzC,UAAU,EAAEI,UAAU,EAAE+B,OAAO,EAAE5B,UAAU,EAAEG,UAAU,EAAEgC,aAAa,EAAEC,oBAAoB,EAAE/B,YAAY,EAAEqB,kBAAkB,EAAEH,OAAO,EAAEhB,aAAa,EAAEE,YAAY,EAAEuB,aAAa,EAAEE,uBAAuB,CAAC,CAAC;EAClN,IAAIuB,qBAAqB,GAAGzD,UAAU,IAAIiC,OAAO,CAACV,OAAO,CAAC;EAC1D,OAAOjE,aAAa,CAAC;IACnBkE,GAAG,EAAEa,MAAM;IACX7D,IAAI,EAAE4E,UAAU;IAChB;IACApD,UAAU,EAAEyD,qBAAqB;IACjC/C,QAAQ,EAAE,aAAa7C,KAAK,CAAC6F,aAAa,CAAC5F,QAAQ,EAAE,IAAI,EAAE4C,QAAQ,EAAEa,OAAO,GAAG,aAAa1D,KAAK,CAAC6F,aAAa,CAACnF,GAAG,EAAE;MACnHoF,EAAE,EAAE,MAAM;MACVnF,IAAI,EAAEI;IACR,CAAC,EAAE2C,OAAO,CAAC,GAAG,IAAI;EACpB,CAAC,EAAE7C,WAAW,CAAC+E,qBAAqB,EAAE;IACpC7C,OAAO,EAAEA,OAAO;IAChBE,kBAAkB,EAAEA,kBAAkB;IACtCC,gBAAgB,EAAEA,gBAAgB;IAClCC,gBAAgB,EAAEA,gBAAgB;IAClCC,cAAc,EAAEA,cAAc;IAC9BC,mBAAmB,EAAEA,mBAAmB;IACxCC,iBAAiB,EAAEA,iBAAiB;IACpCC,oBAAoB,EAAEA,oBAAoB;IAC1CC,kBAAkB,EAAEA,kBAAkB;IACtCC,cAAc,EAAEA;EAClB,CAAC,CAAC,CAAC;AACL,CAAC;AACD,eAAejC,aAAa"},"metadata":{},"sourceType":"module"}