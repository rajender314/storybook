{"ast":null,"code":"var map24 = {\n  '12': '12',\n  '01': '13',\n  '02': '14',\n  '03': '15',\n  '04': '16',\n  '05': '17',\n  '06': '18',\n  '07': '19',\n  '08': '20',\n  '09': '21',\n  '10': '22',\n  '11': '23'\n};\nexport function isValid(timeString) {\n  var time = timeString.trim().match(/(\\d+)(?::(\\d\\d))?\\s*(a|p)?/i);\n  var time24hr = timeString.trim().match(/(\\d\\d)[:.]?(\\d\\d)/);\n  var num = timeString.replace(/[^0-9]/g, '');\n  if (!time && !time24hr) {\n    return false;\n  }\n  if (time && !time[1]) {\n    return false;\n  }\n  if (num.length > 4) {\n    return false;\n  }\n  if (num.length === 2 && parseInt(num, 10) > 12) {\n    return false;\n  }\n  return true;\n}\nexport function removeSpacer(time) {\n  return time.replace(/[:.]/, '');\n}\nexport function formatSemi24(time) {\n  if (time.length === 1) {\n    return \"0\".concat(time, \"00\");\n  }\n  if (time.length === 2) {\n    return \"\".concat(time, \"00\");\n  }\n  if (time.length === 3) {\n    return \"0\".concat(time);\n  }\n  return time;\n}\nexport function checkHour(hour, meridiem) {\n  if (hour > '24') {\n    return null;\n  }\n  if (hour === '12' && meridiem === 'a') {\n    return '00';\n  }\n  if (hour < '12' && meridiem === 'p') {\n    return map24[hour];\n  }\n  return hour;\n}\nexport function checkMinute(minute) {\n  if (minute > '59') {\n    return null;\n  }\n  return minute;\n}\nexport function convertTo24hrTime(time) {\n  var timeArray = time.split(/(p|a)/);\n  var meridiem = timeArray[1];\n  var semi24 = formatSemi24(timeArray[0]);\n  var hour = checkHour(semi24.substring(0, 2), meridiem);\n  var minute = checkMinute(semi24.substring(2, 4));\n  if (!hour || !minute) {\n    return null;\n  }\n  return {\n    hour: parseInt(hour, 10),\n    minute: parseInt(minute, 10)\n  };\n}\nexport function assignToDate(time) {\n  var dateTime = new Date();\n  dateTime.setHours(time.hour);\n  dateTime.setMinutes(time.minute);\n  dateTime.setSeconds(0, 0);\n  return dateTime;\n}\nexport default function (time) {\n  if (!isValid(time.toString())) {\n    return 'invalid time format';\n  }\n  var time1 = removeSpacer(time.toString());\n  var time2 = convertTo24hrTime(time1);\n  if (!time2) {\n    return 'invalid time format';\n  }\n  return assignToDate(time2);\n}","map":{"version":3,"names":["map24","isValid","timeString","time","trim","match","time24hr","num","replace","length","parseInt","removeSpacer","formatSemi24","concat","checkHour","hour","meridiem","checkMinute","minute","convertTo24hrTime","timeArray","split","semi24","substring","assignToDate","dateTime","Date","setHours","setMinutes","setSeconds","toString","time1","time2"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/datetime-picker/dist/esm/internal/parseTime.js"],"sourcesContent":["var map24 = {\n  '12': '12',\n  '01': '13',\n  '02': '14',\n  '03': '15',\n  '04': '16',\n  '05': '17',\n  '06': '18',\n  '07': '19',\n  '08': '20',\n  '09': '21',\n  '10': '22',\n  '11': '23'\n};\nexport function isValid(timeString) {\n  var time = timeString.trim().match(/(\\d+)(?::(\\d\\d))?\\s*(a|p)?/i);\n  var time24hr = timeString.trim().match(/(\\d\\d)[:.]?(\\d\\d)/);\n  var num = timeString.replace(/[^0-9]/g, '');\n\n  if (!time && !time24hr) {\n    return false;\n  }\n\n  if (time && !time[1]) {\n    return false;\n  }\n\n  if (num.length > 4) {\n    return false;\n  }\n\n  if (num.length === 2 && parseInt(num, 10) > 12) {\n    return false;\n  }\n\n  return true;\n}\nexport function removeSpacer(time) {\n  return time.replace(/[:.]/, '');\n}\nexport function formatSemi24(time) {\n  if (time.length === 1) {\n    return \"0\".concat(time, \"00\");\n  }\n\n  if (time.length === 2) {\n    return \"\".concat(time, \"00\");\n  }\n\n  if (time.length === 3) {\n    return \"0\".concat(time);\n  }\n\n  return time;\n}\nexport function checkHour(hour, meridiem) {\n  if (hour > '24') {\n    return null;\n  }\n\n  if (hour === '12' && meridiem === 'a') {\n    return '00';\n  }\n\n  if (hour < '12' && meridiem === 'p') {\n    return map24[hour];\n  }\n\n  return hour;\n}\nexport function checkMinute(minute) {\n  if (minute > '59') {\n    return null;\n  }\n\n  return minute;\n}\nexport function convertTo24hrTime(time) {\n  var timeArray = time.split(/(p|a)/);\n  var meridiem = timeArray[1];\n  var semi24 = formatSemi24(timeArray[0]);\n  var hour = checkHour(semi24.substring(0, 2), meridiem);\n  var minute = checkMinute(semi24.substring(2, 4));\n\n  if (!hour || !minute) {\n    return null;\n  }\n\n  return {\n    hour: parseInt(hour, 10),\n    minute: parseInt(minute, 10)\n  };\n}\nexport function assignToDate(time) {\n  var dateTime = new Date();\n  dateTime.setHours(time.hour);\n  dateTime.setMinutes(time.minute);\n  dateTime.setSeconds(0, 0);\n  return dateTime;\n}\nexport default function (time) {\n  if (!isValid(time.toString())) {\n    return 'invalid time format';\n  }\n\n  var time1 = removeSpacer(time.toString());\n  var time2 = convertTo24hrTime(time1);\n\n  if (!time2) {\n    return 'invalid time format';\n  }\n\n  return assignToDate(time2);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}