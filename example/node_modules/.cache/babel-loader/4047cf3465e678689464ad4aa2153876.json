{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nimport { createTheme } from '@atlaskit/theme/components';\nimport { getCss } from '../shared/css';\nvar stateToSelectorMap = {\n  focus: '&:focus',\n  focusSelected: '&:focus',\n  hover: '&:hover',\n  active: '&:active',\n  disabled: '&[disabled]'\n};\n\n// Mapping the new clean css back to the legacy theme format.\n// The legacy theme format has all styles at the top level (no nested selectors)\n// and uses `getSpecifiers()` to apply the style to all pseudo states\nexport function getCustomCss(_ref) {\n  var _ref$appearance = _ref.appearance,\n    appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,\n    _ref$spacing = _ref.spacing,\n    spacing = _ref$spacing === void 0 ? 'default' : _ref$spacing,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'light' : _ref$mode,\n    _ref$isSelected = _ref.isSelected,\n    isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,\n    _ref$shouldFitContain = _ref.shouldFitContainer,\n    shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain,\n    _ref$iconIsOnlyChild = _ref.iconIsOnlyChild,\n    iconIsOnlyChild = _ref$iconIsOnlyChild === void 0 ? false : _ref$iconIsOnlyChild,\n    _ref$isLoading = _ref.isLoading,\n    isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n    state = _ref.state;\n  var result = getCss({\n    appearance: appearance,\n    spacing: spacing,\n    mode: mode,\n    isSelected: isSelected,\n    shouldFitContainer: shouldFitContainer,\n    isOnlySingleIcon: iconIsOnlyChild\n  });\n\n  // we need to disable the default browser focus styles always\n  // this is because we are not expressing that we can have two pseudo states at a time\n  result.outline = 'none';\n\n  // Pulling relevant styles up to the top level\n  var selector = stateToSelectorMap[state];\n  if (selector) {\n    result = _objectSpread(_objectSpread({}, result), result[selector]);\n  }\n  if (isLoading) {\n    result = _objectSpread(_objectSpread({}, result), result['&[data-has-overlay=\"true\"]']);\n  }\n\n  // Delete all selectors and just keep root styles\n  Object.keys(result).forEach(function (key) {\n    // want to keep this one\n    if (key === '&::-moz-focus-inner') {\n      return;\n    }\n\n    // Not using .startsWith for ie11\n    if (key.indexOf('&') === 0) {\n      delete result[key];\n    }\n  });\n  return result;\n}\n\n// This styling approach works by generating a 'style' and applying with maximum specificity\n// To do this we are overwriting all pseudo selectors\nexport function getSpecifiers(styles) {\n  return {\n    '&, &:hover, &:active, &:focus, &:focus-visible, &:visited, &:disabled, &[disabled]': styles\n  };\n}\nexport function defaultThemeFn(current, values) {\n  return current(values);\n}\nvar Theme = createTheme(function (themeProps) {\n  return {\n    buttonStyles: getCustomCss(themeProps),\n    // No styles being applied directly to spinner by default\n    // Keeping this for legacy compat. We could remove it, but given\n    // that we are changing theme soon there is no point\n    spinnerStyles: {}\n  };\n});\n\n// eslint-disable-next-line @repo/internal/react/require-jsdoc\nexport default Theme;","map":{"version":3,"names":["_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","createTheme","getCss","stateToSelectorMap","focus","focusSelected","hover","active","disabled","getCustomCss","_ref","_ref$appearance","appearance","_ref$spacing","spacing","_ref$mode","mode","_ref$isSelected","isSelected","_ref$shouldFitContain","shouldFitContainer","_ref$iconIsOnlyChild","iconIsOnlyChild","_ref$isLoading","isLoading","state","result","isOnlySingleIcon","outline","selector","key","indexOf","getSpecifiers","styles","defaultThemeFn","current","values","Theme","themeProps","buttonStyles","spinnerStyles"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/button/dist/esm/old-button/custom-theme-button/theme.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createTheme } from '@atlaskit/theme/components';\nimport { getCss } from '../shared/css';\nvar stateToSelectorMap = {\n  focus: '&:focus',\n  focusSelected: '&:focus',\n  hover: '&:hover',\n  active: '&:active',\n  disabled: '&[disabled]'\n};\n\n// Mapping the new clean css back to the legacy theme format.\n// The legacy theme format has all styles at the top level (no nested selectors)\n// and uses `getSpecifiers()` to apply the style to all pseudo states\nexport function getCustomCss(_ref) {\n  var _ref$appearance = _ref.appearance,\n    appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,\n    _ref$spacing = _ref.spacing,\n    spacing = _ref$spacing === void 0 ? 'default' : _ref$spacing,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'light' : _ref$mode,\n    _ref$isSelected = _ref.isSelected,\n    isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,\n    _ref$shouldFitContain = _ref.shouldFitContainer,\n    shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain,\n    _ref$iconIsOnlyChild = _ref.iconIsOnlyChild,\n    iconIsOnlyChild = _ref$iconIsOnlyChild === void 0 ? false : _ref$iconIsOnlyChild,\n    _ref$isLoading = _ref.isLoading,\n    isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n    state = _ref.state;\n  var result = getCss({\n    appearance: appearance,\n    spacing: spacing,\n    mode: mode,\n    isSelected: isSelected,\n    shouldFitContainer: shouldFitContainer,\n    isOnlySingleIcon: iconIsOnlyChild\n  });\n\n  // we need to disable the default browser focus styles always\n  // this is because we are not expressing that we can have two pseudo states at a time\n  result.outline = 'none';\n\n  // Pulling relevant styles up to the top level\n  var selector = stateToSelectorMap[state];\n  if (selector) {\n    result = _objectSpread(_objectSpread({}, result), result[selector]);\n  }\n  if (isLoading) {\n    result = _objectSpread(_objectSpread({}, result), result['&[data-has-overlay=\"true\"]']);\n  }\n\n  // Delete all selectors and just keep root styles\n  Object.keys(result).forEach(function (key) {\n    // want to keep this one\n    if (key === '&::-moz-focus-inner') {\n      return;\n    }\n\n    // Not using .startsWith for ie11\n    if (key.indexOf('&') === 0) {\n      delete result[key];\n    }\n  });\n  return result;\n}\n\n// This styling approach works by generating a 'style' and applying with maximum specificity\n// To do this we are overwriting all pseudo selectors\nexport function getSpecifiers(styles) {\n  return {\n    '&, &:hover, &:active, &:focus, &:focus-visible, &:visited, &:disabled, &[disabled]': styles\n  };\n}\nexport function defaultThemeFn(current, values) {\n  return current(values);\n}\nvar Theme = createTheme(function (themeProps) {\n  return {\n    buttonStyles: getCustomCss(themeProps),\n    // No styles being applied directly to spinner by default\n    // Keeping this for legacy compat. We could remove it, but given\n    // that we are changing theme soon there is no point\n    spinnerStyles: {}\n  };\n});\n\n// eslint-disable-next-line @repo/internal/react/require-jsdoc\nexport default Theme;"],"mappings":"AAAA,OAAOA,eAAe,MAAM,uCAAuC;AACnE,SAASC,OAAOA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAAE,IAAIC,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACJ,CAAC,CAAC;EAAE,IAAIG,MAAM,CAACE,qBAAqB,EAAE;IAAE,IAAIC,CAAC,GAAGH,MAAM,CAACE,qBAAqB,CAACL,CAAC,CAAC;IAAEC,CAAC,KAAKK,CAAC,GAAGA,CAAC,CAACC,MAAM,CAAC,UAAUN,CAAC,EAAE;MAAE,OAAOE,MAAM,CAACK,wBAAwB,CAACR,CAAC,EAAEC,CAAC,CAAC,CAACQ,UAAU;IAAE,CAAC,CAAC,CAAC,EAAEP,CAAC,CAACQ,IAAI,CAACC,KAAK,CAACT,CAAC,EAAEI,CAAC,CAAC;EAAE;EAAE,OAAOJ,CAAC;AAAE;AAC9P,SAASU,aAAaA,CAACZ,CAAC,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,SAAS,CAACC,MAAM,EAAEb,CAAC,EAAE,EAAE;IAAE,IAAIC,CAAC,GAAG,IAAI,IAAIW,SAAS,CAACZ,CAAC,CAAC,GAAGY,SAAS,CAACZ,CAAC,CAAC,GAAG,CAAC,CAAC;IAAEA,CAAC,GAAG,CAAC,GAAGF,OAAO,CAACI,MAAM,CAACD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACa,OAAO,CAAC,UAAUd,CAAC,EAAE;MAAEH,eAAe,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAACD,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC,GAAGE,MAAM,CAACa,yBAAyB,GAAGb,MAAM,CAACc,gBAAgB,CAACjB,CAAC,EAAEG,MAAM,CAACa,yBAAyB,CAACd,CAAC,CAAC,CAAC,GAAGH,OAAO,CAACI,MAAM,CAACD,CAAC,CAAC,CAAC,CAACa,OAAO,CAAC,UAAUd,CAAC,EAAE;MAAEE,MAAM,CAACe,cAAc,CAAClB,CAAC,EAAEC,CAAC,EAAEE,MAAM,CAACK,wBAAwB,CAACN,CAAC,EAAED,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE;EAAE,OAAOD,CAAC;AAAE;AACtb,SAASmB,WAAW,QAAQ,4BAA4B;AACxD,SAASC,MAAM,QAAQ,eAAe;AACtC,IAAIC,kBAAkB,GAAG;EACvBC,KAAK,EAAE,SAAS;EAChBC,aAAa,EAAE,SAAS;EACxBC,KAAK,EAAE,SAAS;EAChBC,MAAM,EAAE,UAAU;EAClBC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,IAAI,EAAE;EACjC,IAAIC,eAAe,GAAGD,IAAI,CAACE,UAAU;IACnCA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGA,eAAe;IACrEE,YAAY,GAAGH,IAAI,CAACI,OAAO;IAC3BA,OAAO,GAAGD,YAAY,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGA,YAAY;IAC5DE,SAAS,GAAGL,IAAI,CAACM,IAAI;IACrBA,IAAI,GAAGD,SAAS,KAAK,KAAK,CAAC,GAAG,OAAO,GAAGA,SAAS;IACjDE,eAAe,GAAGP,IAAI,CAACQ,UAAU;IACjCA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,eAAe;IACjEE,qBAAqB,GAAGT,IAAI,CAACU,kBAAkB;IAC/CA,kBAAkB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,qBAAqB;IACrFE,oBAAoB,GAAGX,IAAI,CAACY,eAAe;IAC3CA,eAAe,GAAGD,oBAAoB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,oBAAoB;IAChFE,cAAc,GAAGb,IAAI,CAACc,SAAS;IAC/BA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,cAAc;IAC9DE,KAAK,GAAGf,IAAI,CAACe,KAAK;EACpB,IAAIC,MAAM,GAAGxB,MAAM,CAAC;IAClBU,UAAU,EAAEA,UAAU;IACtBE,OAAO,EAAEA,OAAO;IAChBE,IAAI,EAAEA,IAAI;IACVE,UAAU,EAAEA,UAAU;IACtBE,kBAAkB,EAAEA,kBAAkB;IACtCO,gBAAgB,EAAEL;EACpB,CAAC,CAAC;;EAEF;EACA;EACAI,MAAM,CAACE,OAAO,GAAG,MAAM;;EAEvB;EACA,IAAIC,QAAQ,GAAG1B,kBAAkB,CAACsB,KAAK,CAAC;EACxC,IAAII,QAAQ,EAAE;IACZH,MAAM,GAAGhC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEgC,MAAM,CAAC,EAAEA,MAAM,CAACG,QAAQ,CAAC,CAAC;EACrE;EACA,IAAIL,SAAS,EAAE;IACbE,MAAM,GAAGhC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEgC,MAAM,CAAC,EAAEA,MAAM,CAAC,4BAA4B,CAAC,CAAC;EACzF;;EAEA;EACAzC,MAAM,CAACC,IAAI,CAACwC,MAAM,CAAC,CAAC7B,OAAO,CAAC,UAAUiC,GAAG,EAAE;IACzC;IACA,IAAIA,GAAG,KAAK,qBAAqB,EAAE;MACjC;IACF;;IAEA;IACA,IAAIA,GAAG,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;MAC1B,OAAOL,MAAM,CAACI,GAAG,CAAC;IACpB;EACF,CAAC,CAAC;EACF,OAAOJ,MAAM;AACf;;AAEA;AACA;AACA,OAAO,SAASM,aAAaA,CAACC,MAAM,EAAE;EACpC,OAAO;IACL,oFAAoF,EAAEA;EACxF,CAAC;AACH;AACA,OAAO,SAASC,cAAcA,CAACC,OAAO,EAAEC,MAAM,EAAE;EAC9C,OAAOD,OAAO,CAACC,MAAM,CAAC;AACxB;AACA,IAAIC,KAAK,GAAGpC,WAAW,CAAC,UAAUqC,UAAU,EAAE;EAC5C,OAAO;IACLC,YAAY,EAAE9B,YAAY,CAAC6B,UAAU,CAAC;IACtC;IACA;IACA;IACAE,aAAa,EAAE,CAAC;EAClB,CAAC;AACH,CAAC,CAAC;;AAEF;AACA,eAAeH,KAAK"},"metadata":{},"sourceType":"module"}