{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport getIncreasedContrastTheme from './get-increased-contrast-theme';\nexport var getThemePreferences = function getThemePreferences(themeState) {\n  var colorMode = themeState.colorMode,\n    contrastMode = themeState.contrastMode,\n    dark = themeState.dark,\n    light = themeState.light,\n    shape = themeState.shape,\n    spacing = themeState.spacing,\n    typography = themeState.typography;\n  var autoColorModeThemes = [light, dark];\n  var themePreferences = [];\n  if (colorMode === 'auto') {\n    if (contrastMode !== 'no-preference' && getBooleanFF('platform.design-system-team.increased-contrast-themes')) {\n      autoColorModeThemes.forEach(function (normalTheme) {\n        var increasedContrastTheme = getIncreasedContrastTheme(normalTheme);\n        if (increasedContrastTheme) {\n          autoColorModeThemes.push(increasedContrastTheme);\n        }\n      });\n    }\n    themePreferences.push.apply(themePreferences, autoColorModeThemes);\n  } else {\n    themePreferences.push(themeState[colorMode]);\n    if (contrastMode !== 'no-preference' && getBooleanFF('platform.design-system-team.increased-contrast-themes')) {\n      var increasedContrastTheme = getIncreasedContrastTheme(themeState[colorMode]);\n      if (increasedContrastTheme) {\n        themePreferences.push(increasedContrastTheme);\n      }\n    }\n  }\n  [shape, spacing, typography].forEach(function (themeId) {\n    if (themeId) {\n      themePreferences.push(themeId);\n    }\n  });\n  return _toConsumableArray(new Set(themePreferences));\n};\nexport var getThemeOverridePreferences = function getThemeOverridePreferences(themeState) {\n  var colorMode = themeState.colorMode,\n    dark = themeState.dark,\n    light = themeState.light;\n  var themeOverridePreferences = [];\n  var themePreferences = colorMode === 'auto' ? [light, dark] : [themeState[colorMode]];\n  if (getBooleanFF('platform.design-system-team.border-checkbox_nyoiu')) {\n    themePreferences.includes('light') && themeOverridePreferences.push('light-new-input-border');\n    themePreferences.includes('dark') && themeOverridePreferences.push('dark-new-input-border');\n  }\n  return _toConsumableArray(new Set(themeOverridePreferences));\n};","map":{"version":3,"names":["_toConsumableArray","getBooleanFF","getIncreasedContrastTheme","getThemePreferences","themeState","colorMode","contrastMode","dark","light","shape","spacing","typography","autoColorModeThemes","themePreferences","forEach","normalTheme","increasedContrastTheme","push","apply","themeId","Set","getThemeOverridePreferences","themeOverridePreferences","includes"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/modal-dialog/node_modules/@atlaskit/tokens/dist/esm/utils/get-theme-preferences.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport getIncreasedContrastTheme from './get-increased-contrast-theme';\nexport var getThemePreferences = function getThemePreferences(themeState) {\n  var colorMode = themeState.colorMode,\n    contrastMode = themeState.contrastMode,\n    dark = themeState.dark,\n    light = themeState.light,\n    shape = themeState.shape,\n    spacing = themeState.spacing,\n    typography = themeState.typography;\n  var autoColorModeThemes = [light, dark];\n  var themePreferences = [];\n  if (colorMode === 'auto') {\n    if (contrastMode !== 'no-preference' && getBooleanFF('platform.design-system-team.increased-contrast-themes')) {\n      autoColorModeThemes.forEach(function (normalTheme) {\n        var increasedContrastTheme = getIncreasedContrastTheme(normalTheme);\n        if (increasedContrastTheme) {\n          autoColorModeThemes.push(increasedContrastTheme);\n        }\n      });\n    }\n    themePreferences.push.apply(themePreferences, autoColorModeThemes);\n  } else {\n    themePreferences.push(themeState[colorMode]);\n    if (contrastMode !== 'no-preference' && getBooleanFF('platform.design-system-team.increased-contrast-themes')) {\n      var increasedContrastTheme = getIncreasedContrastTheme(themeState[colorMode]);\n      if (increasedContrastTheme) {\n        themePreferences.push(increasedContrastTheme);\n      }\n    }\n  }\n  [shape, spacing, typography].forEach(function (themeId) {\n    if (themeId) {\n      themePreferences.push(themeId);\n    }\n  });\n  return _toConsumableArray(new Set(themePreferences));\n};\nexport var getThemeOverridePreferences = function getThemeOverridePreferences(themeState) {\n  var colorMode = themeState.colorMode,\n    dark = themeState.dark,\n    light = themeState.light;\n  var themeOverridePreferences = [];\n  var themePreferences = colorMode === 'auto' ? [light, dark] : [themeState[colorMode]];\n  if (getBooleanFF('platform.design-system-team.border-checkbox_nyoiu')) {\n    themePreferences.includes('light') && themeOverridePreferences.push('light-new-input-border');\n    themePreferences.includes('dark') && themeOverridePreferences.push('dark-new-input-border');\n  }\n  return _toConsumableArray(new Set(themeOverridePreferences));\n};"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,0CAA0C;AACzE,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,OAAOC,yBAAyB,MAAM,gCAAgC;AACtE,OAAO,IAAIC,mBAAmB,GAAG,SAASA,mBAAmBA,CAACC,UAAU,EAAE;EACxE,IAAIC,SAAS,GAAGD,UAAU,CAACC,SAAS;IAClCC,YAAY,GAAGF,UAAU,CAACE,YAAY;IACtCC,IAAI,GAAGH,UAAU,CAACG,IAAI;IACtBC,KAAK,GAAGJ,UAAU,CAACI,KAAK;IACxBC,KAAK,GAAGL,UAAU,CAACK,KAAK;IACxBC,OAAO,GAAGN,UAAU,CAACM,OAAO;IAC5BC,UAAU,GAAGP,UAAU,CAACO,UAAU;EACpC,IAAIC,mBAAmB,GAAG,CAACJ,KAAK,EAAED,IAAI,CAAC;EACvC,IAAIM,gBAAgB,GAAG,EAAE;EACzB,IAAIR,SAAS,KAAK,MAAM,EAAE;IACxB,IAAIC,YAAY,KAAK,eAAe,IAAIL,YAAY,CAAC,uDAAuD,CAAC,EAAE;MAC7GW,mBAAmB,CAACE,OAAO,CAAC,UAAUC,WAAW,EAAE;QACjD,IAAIC,sBAAsB,GAAGd,yBAAyB,CAACa,WAAW,CAAC;QACnE,IAAIC,sBAAsB,EAAE;UAC1BJ,mBAAmB,CAACK,IAAI,CAACD,sBAAsB,CAAC;QAClD;MACF,CAAC,CAAC;IACJ;IACAH,gBAAgB,CAACI,IAAI,CAACC,KAAK,CAACL,gBAAgB,EAAED,mBAAmB,CAAC;EACpE,CAAC,MAAM;IACLC,gBAAgB,CAACI,IAAI,CAACb,UAAU,CAACC,SAAS,CAAC,CAAC;IAC5C,IAAIC,YAAY,KAAK,eAAe,IAAIL,YAAY,CAAC,uDAAuD,CAAC,EAAE;MAC7G,IAAIe,sBAAsB,GAAGd,yBAAyB,CAACE,UAAU,CAACC,SAAS,CAAC,CAAC;MAC7E,IAAIW,sBAAsB,EAAE;QAC1BH,gBAAgB,CAACI,IAAI,CAACD,sBAAsB,CAAC;MAC/C;IACF;EACF;EACA,CAACP,KAAK,EAAEC,OAAO,EAAEC,UAAU,CAAC,CAACG,OAAO,CAAC,UAAUK,OAAO,EAAE;IACtD,IAAIA,OAAO,EAAE;MACXN,gBAAgB,CAACI,IAAI,CAACE,OAAO,CAAC;IAChC;EACF,CAAC,CAAC;EACF,OAAOnB,kBAAkB,CAAC,IAAIoB,GAAG,CAACP,gBAAgB,CAAC,CAAC;AACtD,CAAC;AACD,OAAO,IAAIQ,2BAA2B,GAAG,SAASA,2BAA2BA,CAACjB,UAAU,EAAE;EACxF,IAAIC,SAAS,GAAGD,UAAU,CAACC,SAAS;IAClCE,IAAI,GAAGH,UAAU,CAACG,IAAI;IACtBC,KAAK,GAAGJ,UAAU,CAACI,KAAK;EAC1B,IAAIc,wBAAwB,GAAG,EAAE;EACjC,IAAIT,gBAAgB,GAAGR,SAAS,KAAK,MAAM,GAAG,CAACG,KAAK,EAAED,IAAI,CAAC,GAAG,CAACH,UAAU,CAACC,SAAS,CAAC,CAAC;EACrF,IAAIJ,YAAY,CAAC,mDAAmD,CAAC,EAAE;IACrEY,gBAAgB,CAACU,QAAQ,CAAC,OAAO,CAAC,IAAID,wBAAwB,CAACL,IAAI,CAAC,wBAAwB,CAAC;IAC7FJ,gBAAgB,CAACU,QAAQ,CAAC,MAAM,CAAC,IAAID,wBAAwB,CAACL,IAAI,CAAC,uBAAuB,CAAC;EAC7F;EACA,OAAOjB,kBAAkB,CAAC,IAAIoB,GAAG,CAACE,wBAAwB,CAAC,CAAC;AAC9D,CAAC"},"metadata":{},"sourceType":"module"}