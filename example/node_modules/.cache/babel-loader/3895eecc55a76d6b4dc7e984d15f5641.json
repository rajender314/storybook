{"ast":null,"code":"// eslint-disable-next-line @repo/internal/react/consistent-types-definitions\n\n/**\n * @deprecated Please avoid using this function as we intend to remote it in a future release. See DSP-2673 for more information.\n */\nexport var createExtender = function createExtender(defaults) {\n  var overrides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Object.create(Object.prototype);\n  if (!defaults) {\n    throw new Error('a default set of overrides *must* be passed in as the first argument');\n  }\n  return function getOverrides(key) {\n    var _defaults$key = defaults[key],\n      defaultCssFn = _defaults$key.cssFn,\n      defaultComponent = _defaults$key.component;\n    if (!overrides[key]) {\n      return {\n        cssFn: defaultCssFn,\n        component: defaultComponent\n      };\n    }\n    var _overrides$key = overrides[key],\n      customCssFn = _overrides$key.cssFn,\n      customComponent = _overrides$key.component;\n    var composedCssFn = function composedCssFn(state) {\n      return customCssFn(defaultCssFn(state), state);\n    };\n    return {\n      cssFn: customCssFn ? composedCssFn : defaultCssFn,\n      component: customComponent || defaultComponent\n    };\n  };\n};","map":{"version":3,"names":["createExtender","defaults","overrides","arguments","length","undefined","Object","create","prototype","Error","getOverrides","key","_defaults$key","defaultCssFn","cssFn","defaultComponent","component","_overrides$key","customCssFn","customComponent","composedCssFn","state"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/drawer/dist/esm/components/utils.js"],"sourcesContent":["// eslint-disable-next-line @repo/internal/react/consistent-types-definitions\n\n/**\n * @deprecated Please avoid using this function as we intend to remote it in a future release. See DSP-2673 for more information.\n */\nexport var createExtender = function createExtender(defaults) {\n  var overrides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Object.create(Object.prototype);\n  if (!defaults) {\n    throw new Error('a default set of overrides *must* be passed in as the first argument');\n  }\n  return function getOverrides(key) {\n    var _defaults$key = defaults[key],\n      defaultCssFn = _defaults$key.cssFn,\n      defaultComponent = _defaults$key.component;\n    if (!overrides[key]) {\n      return {\n        cssFn: defaultCssFn,\n        component: defaultComponent\n      };\n    }\n    var _overrides$key = overrides[key],\n      customCssFn = _overrides$key.cssFn,\n      customComponent = _overrides$key.component;\n    var composedCssFn = function composedCssFn(state) {\n      return customCssFn(defaultCssFn(state), state);\n    };\n    return {\n      cssFn: customCssFn ? composedCssFn : defaultCssFn,\n      component: customComponent || defaultComponent\n    };\n  };\n};"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA,OAAO,IAAIA,cAAc,GAAG,SAASA,cAAcA,CAACC,QAAQ,EAAE;EAC5D,IAAIC,SAAS,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGG,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,SAAS,CAAC;EACnH,IAAI,CAACP,QAAQ,EAAE;IACb,MAAM,IAAIQ,KAAK,CAAC,sEAAsE,CAAC;EACzF;EACA,OAAO,SAASC,YAAYA,CAACC,GAAG,EAAE;IAChC,IAAIC,aAAa,GAAGX,QAAQ,CAACU,GAAG,CAAC;MAC/BE,YAAY,GAAGD,aAAa,CAACE,KAAK;MAClCC,gBAAgB,GAAGH,aAAa,CAACI,SAAS;IAC5C,IAAI,CAACd,SAAS,CAACS,GAAG,CAAC,EAAE;MACnB,OAAO;QACLG,KAAK,EAAED,YAAY;QACnBG,SAAS,EAAED;MACb,CAAC;IACH;IACA,IAAIE,cAAc,GAAGf,SAAS,CAACS,GAAG,CAAC;MACjCO,WAAW,GAAGD,cAAc,CAACH,KAAK;MAClCK,eAAe,GAAGF,cAAc,CAACD,SAAS;IAC5C,IAAII,aAAa,GAAG,SAASA,aAAaA,CAACC,KAAK,EAAE;MAChD,OAAOH,WAAW,CAACL,YAAY,CAACQ,KAAK,CAAC,EAAEA,KAAK,CAAC;IAChD,CAAC;IACD,OAAO;MACLP,KAAK,EAAEI,WAAW,GAAGE,aAAa,GAAGP,YAAY;MACjDG,SAAS,EAAEG,eAAe,IAAIJ;IAChC,CAAC;EACH,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}