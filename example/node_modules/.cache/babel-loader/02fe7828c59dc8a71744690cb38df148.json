{"ast":null,"code":"/** @jsx jsx */\nimport { forwardRef, memo } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { spaceStylesMap } from '../xcss/style-maps.partial';\nimport { parseXcss } from '../xcss/xcss';\nvar justifyContentMap = {\n  start: css({\n    justifyContent: 'start'\n  }),\n  center: css({\n    justifyContent: 'center'\n  }),\n  end: css({\n    justifyContent: 'end'\n  }),\n  'space-between': css({\n    justifyContent: 'space-between'\n  }),\n  'space-around': css({\n    justifyContent: 'space-around'\n  }),\n  'space-evenly': css({\n    justifyContent: 'space-evenly'\n  }),\n  stretch: css({\n    justifyContent: 'stretch'\n  })\n};\nvar justifyItemsMap = {\n  start: css({\n    justifyItems: 'start'\n  }),\n  center: css({\n    justifyItems: 'center'\n  }),\n  end: css({\n    justifyItems: 'end'\n  }),\n  stretch: css({\n    justifyItems: 'stretch'\n  })\n};\nvar alignContentMap = {\n  start: css({\n    alignContent: 'start'\n  }),\n  center: css({\n    alignContent: 'center'\n  }),\n  end: css({\n    alignContent: 'end'\n  }),\n  'space-between': css({\n    alignContent: 'space-between'\n  }),\n  'space-around': css({\n    alignContent: 'space-around'\n  }),\n  'space-evenly': css({\n    alignContent: 'space-evenly'\n  }),\n  stretch: css({\n    alignContent: 'stretch'\n  })\n};\nvar alignItemsMap = {\n  start: css({\n    alignItems: 'start'\n  }),\n  center: css({\n    alignItems: 'center'\n  }),\n  baseline: css({\n    alignItems: 'baseline'\n  }),\n  end: css({\n    alignItems: 'end'\n  })\n};\nvar baseStyles = css({\n  display: 'grid',\n  boxSizing: 'border-box'\n});\nvar gridAutoFlowMap = {\n  row: css({\n    gridAutoFlow: 'row'\n  }),\n  column: css({\n    gridAutoFlow: 'column'\n  }),\n  dense: css({\n    gridAutoFlow: 'dense'\n  }),\n  'row dense': css({\n    gridAutoFlow: 'row dense'\n  }),\n  'column dense': css({\n    gridAutoFlow: 'column dense'\n  })\n};\n\n/**\n * __Grid__\n *\n * `Grid` is a primitive component that implements the CSS Grid API.\n *\n * - [Examples](https://atlassian.design/components/primitives/grid/examples)\n * - [Code](https://atlassian.design/components/primitives/grid/code)\n *\n * @example\n * ```tsx\n * import { Grid, Box } from '@atlaskit/primitives'\n *\n * const Component = () => (\n *   <Grid gap=\"space.100\" gridColumns=\"1fr 1fr\">\n *     <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *     <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *   </Grid>\n * )\n * ```\n */\nvar Grid = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var as = _ref.as,\n    alignItems = _ref.alignItems,\n    alignContent = _ref.alignContent,\n    justifyContent = _ref.justifyContent,\n    gap = _ref.gap,\n    columnGap = _ref.columnGap,\n    rowGap = _ref.rowGap,\n    children = _ref.children,\n    id = _ref.id,\n    role = _ref.role,\n    testId = _ref.testId,\n    autoFlow = _ref.autoFlow,\n    gridTemplateAreas = _ref.templateAreas,\n    gridTemplateRows = _ref.templateRows,\n    gridTemplateColumns = _ref.templateColumns,\n    xcss = _ref.xcss;\n  var Component = as || 'div';\n  var xcssClassName = xcss && parseXcss(xcss);\n  var style = gridTemplateAreas || gridTemplateColumns || gridTemplateRows ? Object.assign({}, {\n    gridTemplateAreas: gridTemplateAreas ? gridTemplateAreas.map(function (str) {\n      return \"\\\"\".concat(str, \"\\\"\");\n    }).join('\\n') : undefined,\n    gridTemplateColumns: gridTemplateColumns,\n    gridTemplateRows: gridTemplateRows\n  }) : undefined;\n  return jsx(Component, {\n    id: id,\n    role: role,\n    style: style,\n    css: [baseStyles, gap && spaceStylesMap.gap[gap], columnGap && spaceStylesMap.columnGap[columnGap], rowGap && spaceStylesMap.rowGap[rowGap], alignItems && alignItemsMap[alignItems], alignContent && alignContentMap[alignContent], justifyContent && justifyContentMap[justifyContent], autoFlow && gridAutoFlowMap[autoFlow],\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    xcssClassName && xcssClassName],\n    \"data-testid\": testId,\n    ref: ref\n  }, children);\n}));\nGrid.displayName = 'Grid';\nexport default Grid;","map":{"version":3,"names":["forwardRef","memo","css","jsx","spaceStylesMap","parseXcss","justifyContentMap","start","justifyContent","center","end","stretch","justifyItemsMap","justifyItems","alignContentMap","alignContent","alignItemsMap","alignItems","baseline","baseStyles","display","boxSizing","gridAutoFlowMap","row","gridAutoFlow","column","dense","Grid","_ref","ref","as","gap","columnGap","rowGap","children","id","role","testId","autoFlow","gridTemplateAreas","templateAreas","gridTemplateRows","templateRows","gridTemplateColumns","templateColumns","xcss","Component","xcssClassName","style","Object","assign","map","str","concat","join","undefined","displayName"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/primitives/dist/esm/components/grid.js"],"sourcesContent":["/** @jsx jsx */\nimport { forwardRef, memo } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { spaceStylesMap } from '../xcss/style-maps.partial';\nimport { parseXcss } from '../xcss/xcss';\nvar justifyContentMap = {\n  start: css({\n    justifyContent: 'start'\n  }),\n  center: css({\n    justifyContent: 'center'\n  }),\n  end: css({\n    justifyContent: 'end'\n  }),\n  'space-between': css({\n    justifyContent: 'space-between'\n  }),\n  'space-around': css({\n    justifyContent: 'space-around'\n  }),\n  'space-evenly': css({\n    justifyContent: 'space-evenly'\n  }),\n  stretch: css({\n    justifyContent: 'stretch'\n  })\n};\nvar justifyItemsMap = {\n  start: css({\n    justifyItems: 'start'\n  }),\n  center: css({\n    justifyItems: 'center'\n  }),\n  end: css({\n    justifyItems: 'end'\n  }),\n  stretch: css({\n    justifyItems: 'stretch'\n  })\n};\nvar alignContentMap = {\n  start: css({\n    alignContent: 'start'\n  }),\n  center: css({\n    alignContent: 'center'\n  }),\n  end: css({\n    alignContent: 'end'\n  }),\n  'space-between': css({\n    alignContent: 'space-between'\n  }),\n  'space-around': css({\n    alignContent: 'space-around'\n  }),\n  'space-evenly': css({\n    alignContent: 'space-evenly'\n  }),\n  stretch: css({\n    alignContent: 'stretch'\n  })\n};\nvar alignItemsMap = {\n  start: css({\n    alignItems: 'start'\n  }),\n  center: css({\n    alignItems: 'center'\n  }),\n  baseline: css({\n    alignItems: 'baseline'\n  }),\n  end: css({\n    alignItems: 'end'\n  })\n};\nvar baseStyles = css({\n  display: 'grid',\n  boxSizing: 'border-box'\n});\nvar gridAutoFlowMap = {\n  row: css({\n    gridAutoFlow: 'row'\n  }),\n  column: css({\n    gridAutoFlow: 'column'\n  }),\n  dense: css({\n    gridAutoFlow: 'dense'\n  }),\n  'row dense': css({\n    gridAutoFlow: 'row dense'\n  }),\n  'column dense': css({\n    gridAutoFlow: 'column dense'\n  })\n};\n\n/**\n * __Grid__\n *\n * `Grid` is a primitive component that implements the CSS Grid API.\n *\n * - [Examples](https://atlassian.design/components/primitives/grid/examples)\n * - [Code](https://atlassian.design/components/primitives/grid/code)\n *\n * @example\n * ```tsx\n * import { Grid, Box } from '@atlaskit/primitives'\n *\n * const Component = () => (\n *   <Grid gap=\"space.100\" gridColumns=\"1fr 1fr\">\n *     <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *     <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *   </Grid>\n * )\n * ```\n */\nvar Grid = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var as = _ref.as,\n    alignItems = _ref.alignItems,\n    alignContent = _ref.alignContent,\n    justifyContent = _ref.justifyContent,\n    gap = _ref.gap,\n    columnGap = _ref.columnGap,\n    rowGap = _ref.rowGap,\n    children = _ref.children,\n    id = _ref.id,\n    role = _ref.role,\n    testId = _ref.testId,\n    autoFlow = _ref.autoFlow,\n    gridTemplateAreas = _ref.templateAreas,\n    gridTemplateRows = _ref.templateRows,\n    gridTemplateColumns = _ref.templateColumns,\n    xcss = _ref.xcss;\n  var Component = as || 'div';\n  var xcssClassName = xcss && parseXcss(xcss);\n  var style = gridTemplateAreas || gridTemplateColumns || gridTemplateRows ? Object.assign({}, {\n    gridTemplateAreas: gridTemplateAreas ? gridTemplateAreas.map(function (str) {\n      return \"\\\"\".concat(str, \"\\\"\");\n    }).join('\\n') : undefined,\n    gridTemplateColumns: gridTemplateColumns,\n    gridTemplateRows: gridTemplateRows\n  }) : undefined;\n  return jsx(Component, {\n    id: id,\n    role: role,\n    style: style,\n    css: [baseStyles, gap && spaceStylesMap.gap[gap], columnGap && spaceStylesMap.columnGap[columnGap], rowGap && spaceStylesMap.rowGap[rowGap], alignItems && alignItemsMap[alignItems], alignContent && alignContentMap[alignContent], justifyContent && justifyContentMap[justifyContent], autoFlow && gridAutoFlowMap[autoFlow],\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    xcssClassName && xcssClassName],\n    \"data-testid\": testId,\n    ref: ref\n  }, children);\n}));\nGrid.displayName = 'Grid';\nexport default Grid;"],"mappings":"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"},"metadata":{},"sourceType":"module"}