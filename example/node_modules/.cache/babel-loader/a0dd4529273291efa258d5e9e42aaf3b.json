{"ast":null,"code":"import React from 'react';\nimport Content from '../shared/content';\nimport useButtonBase from '../shared/use-button-base';\n/**\n * __Use icon button__\n *\n * A React hook that accepts a set of icon Button props,\n * and processes them to return consistent base props for usage\n * across IconButton and LinkIconButton variants.\n *\n * @private\n */\nvar useIconButton = function useIconButton(_ref) {\n  var analyticsContext = _ref.analyticsContext,\n    appearance = _ref.appearance,\n    autoFocus = _ref.autoFocus,\n    buttonType = _ref.buttonType,\n    icon = _ref.icon,\n    interactionName = _ref.interactionName,\n    isDisabled = _ref.isDisabled,\n    isSelected = _ref.isSelected,\n    onClick = _ref.onClick,\n    onMouseDownCapture = _ref.onMouseDownCapture,\n    onMouseUpCapture = _ref.onMouseUpCapture,\n    onKeyDownCapture = _ref.onKeyDownCapture,\n    onKeyUpCapture = _ref.onKeyUpCapture,\n    onTouchStartCapture = _ref.onTouchStartCapture,\n    onTouchEndCapture = _ref.onTouchEndCapture,\n    onPointerDownCapture = _ref.onPointerDownCapture,\n    onPointerUpCapture = _ref.onPointerUpCapture,\n    onClickCapture = _ref.onClickCapture,\n    overlay = _ref.overlay,\n    ref = _ref.ref,\n    shouldFitContainer = _ref.shouldFitContainer,\n    spacing = _ref.spacing;\n  var hasOverlay = Boolean(overlay);\n  var baseProps = useButtonBase({\n    analyticsContext: analyticsContext,\n    appearance: appearance,\n    autoFocus: autoFocus,\n    buttonType: buttonType,\n    /**\n     * TODO: Have not finished IconButton yet. It also needs a required accessible\n     * label - likely implemented using VisuallyHidden\n     */\n    children: /*#__PURE__*/React.createElement(Content, {\n      type: \"icon\",\n      hasOverlay: hasOverlay\n    }, icon),\n    interactionName: interactionName,\n    isDisabled: isDisabled,\n    isSelected: isSelected,\n    isIconButton: true,\n    onClick: onClick,\n    onMouseDownCapture: onMouseDownCapture,\n    onMouseUpCapture: onMouseUpCapture,\n    onKeyDownCapture: onKeyDownCapture,\n    onKeyUpCapture: onKeyUpCapture,\n    onTouchStartCapture: onTouchStartCapture,\n    onTouchEndCapture: onTouchEndCapture,\n    onPointerDownCapture: onPointerDownCapture,\n    onPointerUpCapture: onPointerUpCapture,\n    onClickCapture: onClickCapture,\n    overlay: overlay,\n    ref: ref,\n    shouldFitContainer: shouldFitContainer,\n    spacing: spacing\n  });\n  return baseProps;\n};\nexport default useIconButton;","map":{"version":3,"names":["React","Content","useButtonBase","useIconButton","_ref","analyticsContext","appearance","autoFocus","buttonType","icon","interactionName","isDisabled","isSelected","onClick","onMouseDownCapture","onMouseUpCapture","onKeyDownCapture","onKeyUpCapture","onTouchStartCapture","onTouchEndCapture","onPointerDownCapture","onPointerUpCapture","onClickCapture","overlay","ref","shouldFitContainer","spacing","hasOverlay","Boolean","baseProps","children","createElement","type","isIconButton"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/button/dist/esm/new-button/variants/icon/use-icon-button.js"],"sourcesContent":["import React from 'react';\nimport Content from '../shared/content';\nimport useButtonBase from '../shared/use-button-base';\n/**\n * __Use icon button__\n *\n * A React hook that accepts a set of icon Button props,\n * and processes them to return consistent base props for usage\n * across IconButton and LinkIconButton variants.\n *\n * @private\n */\nvar useIconButton = function useIconButton(_ref) {\n  var analyticsContext = _ref.analyticsContext,\n    appearance = _ref.appearance,\n    autoFocus = _ref.autoFocus,\n    buttonType = _ref.buttonType,\n    icon = _ref.icon,\n    interactionName = _ref.interactionName,\n    isDisabled = _ref.isDisabled,\n    isSelected = _ref.isSelected,\n    onClick = _ref.onClick,\n    onMouseDownCapture = _ref.onMouseDownCapture,\n    onMouseUpCapture = _ref.onMouseUpCapture,\n    onKeyDownCapture = _ref.onKeyDownCapture,\n    onKeyUpCapture = _ref.onKeyUpCapture,\n    onTouchStartCapture = _ref.onTouchStartCapture,\n    onTouchEndCapture = _ref.onTouchEndCapture,\n    onPointerDownCapture = _ref.onPointerDownCapture,\n    onPointerUpCapture = _ref.onPointerUpCapture,\n    onClickCapture = _ref.onClickCapture,\n    overlay = _ref.overlay,\n    ref = _ref.ref,\n    shouldFitContainer = _ref.shouldFitContainer,\n    spacing = _ref.spacing;\n  var hasOverlay = Boolean(overlay);\n  var baseProps = useButtonBase({\n    analyticsContext: analyticsContext,\n    appearance: appearance,\n    autoFocus: autoFocus,\n    buttonType: buttonType,\n    /**\n     * TODO: Have not finished IconButton yet. It also needs a required accessible\n     * label - likely implemented using VisuallyHidden\n     */\n    children: /*#__PURE__*/React.createElement(Content, {\n      type: \"icon\",\n      hasOverlay: hasOverlay\n    }, icon),\n    interactionName: interactionName,\n    isDisabled: isDisabled,\n    isSelected: isSelected,\n    isIconButton: true,\n    onClick: onClick,\n    onMouseDownCapture: onMouseDownCapture,\n    onMouseUpCapture: onMouseUpCapture,\n    onKeyDownCapture: onKeyDownCapture,\n    onKeyUpCapture: onKeyUpCapture,\n    onTouchStartCapture: onTouchStartCapture,\n    onTouchEndCapture: onTouchEndCapture,\n    onPointerDownCapture: onPointerDownCapture,\n    onPointerUpCapture: onPointerUpCapture,\n    onClickCapture: onClickCapture,\n    overlay: overlay,\n    ref: ref,\n    shouldFitContainer: shouldFitContainer,\n    spacing: spacing\n  });\n  return baseProps;\n};\nexport default useIconButton;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,aAAa,MAAM,2BAA2B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG,SAASA,aAAaA,CAACC,IAAI,EAAE;EAC/C,IAAIC,gBAAgB,GAAGD,IAAI,CAACC,gBAAgB;IAC1CC,UAAU,GAAGF,IAAI,CAACE,UAAU;IAC5BC,SAAS,GAAGH,IAAI,CAACG,SAAS;IAC1BC,UAAU,GAAGJ,IAAI,CAACI,UAAU;IAC5BC,IAAI,GAAGL,IAAI,CAACK,IAAI;IAChBC,eAAe,GAAGN,IAAI,CAACM,eAAe;IACtCC,UAAU,GAAGP,IAAI,CAACO,UAAU;IAC5BC,UAAU,GAAGR,IAAI,CAACQ,UAAU;IAC5BC,OAAO,GAAGT,IAAI,CAACS,OAAO;IACtBC,kBAAkB,GAAGV,IAAI,CAACU,kBAAkB;IAC5CC,gBAAgB,GAAGX,IAAI,CAACW,gBAAgB;IACxCC,gBAAgB,GAAGZ,IAAI,CAACY,gBAAgB;IACxCC,cAAc,GAAGb,IAAI,CAACa,cAAc;IACpCC,mBAAmB,GAAGd,IAAI,CAACc,mBAAmB;IAC9CC,iBAAiB,GAAGf,IAAI,CAACe,iBAAiB;IAC1CC,oBAAoB,GAAGhB,IAAI,CAACgB,oBAAoB;IAChDC,kBAAkB,GAAGjB,IAAI,CAACiB,kBAAkB;IAC5CC,cAAc,GAAGlB,IAAI,CAACkB,cAAc;IACpCC,OAAO,GAAGnB,IAAI,CAACmB,OAAO;IACtBC,GAAG,GAAGpB,IAAI,CAACoB,GAAG;IACdC,kBAAkB,GAAGrB,IAAI,CAACqB,kBAAkB;IAC5CC,OAAO,GAAGtB,IAAI,CAACsB,OAAO;EACxB,IAAIC,UAAU,GAAGC,OAAO,CAACL,OAAO,CAAC;EACjC,IAAIM,SAAS,GAAG3B,aAAa,CAAC;IAC5BG,gBAAgB,EAAEA,gBAAgB;IAClCC,UAAU,EAAEA,UAAU;IACtBC,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtB;AACJ;AACA;AACA;IACIsB,QAAQ,EAAE,aAAa9B,KAAK,CAAC+B,aAAa,CAAC9B,OAAO,EAAE;MAClD+B,IAAI,EAAE,MAAM;MACZL,UAAU,EAAEA;IACd,CAAC,EAAElB,IAAI,CAAC;IACRC,eAAe,EAAEA,eAAe;IAChCC,UAAU,EAAEA,UAAU;IACtBC,UAAU,EAAEA,UAAU;IACtBqB,YAAY,EAAE,IAAI;IAClBpB,OAAO,EAAEA,OAAO;IAChBC,kBAAkB,EAAEA,kBAAkB;IACtCC,gBAAgB,EAAEA,gBAAgB;IAClCC,gBAAgB,EAAEA,gBAAgB;IAClCC,cAAc,EAAEA,cAAc;IAC9BC,mBAAmB,EAAEA,mBAAmB;IACxCC,iBAAiB,EAAEA,iBAAiB;IACpCC,oBAAoB,EAAEA,oBAAoB;IAC1CC,kBAAkB,EAAEA,kBAAkB;IACtCC,cAAc,EAAEA,cAAc;IAC9BC,OAAO,EAAEA,OAAO;IAChBC,GAAG,EAAEA,GAAG;IACRC,kBAAkB,EAAEA,kBAAkB;IACtCC,OAAO,EAAEA;EACX,CAAC,CAAC;EACF,OAAOG,SAAS;AAClB,CAAC;AACD,eAAe1B,aAAa"},"metadata":{},"sourceType":"module"}