{"ast":null,"code":"import React, { useRef, useLayoutEffect } from 'react';\nfunction isLinkPrefetch(el) {\n  return el.tagName === 'LINK' && el.rel === 'prefetch';\n}\nconst usePlaceholderRender = (resolveId, content) => {\n  const hydrationRef = useRef(null);\n  const {\n    current: ssrDomNodes\n  } = useRef(content || []);\n  useLayoutEffect(() => {\n    const element = hydrationRef.current;\n    const {\n      parentNode\n    } = element || {};\n    if (parentNode && !parentNode.contains(ssrDomNodes[0])) {\n      ssrDomNodes.reverse().forEach(node => {\n        // this fixes an issue with Chrome that re-triggers and cancels prefetch\n        // when node is appended again, making network panel quite noisy\n        if (isLinkPrefetch(node)) node.rel = '';\n        parentNode.insertBefore(node, element.nextSibling);\n      });\n    }\n    return () => {\n      ssrDomNodes.forEach(node => {\n        var _node$parentNode;\n        return (_node$parentNode = node.parentNode) == null ? void 0 : _node$parentNode.removeChild(node);\n      });\n    }; // [hydrationRef.current, ssrDomNodes] are expected to be stable\n    // with the second one never changing by design and the first one changing after first render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return hydrationRef;\n};\nexport const PlaceholderFallbackRender = ({\n  id,\n  content\n}) => {\n  const placeholderRef = usePlaceholderRender(id, content);\n  return /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    \"data-lazy-begin\": id,\n    ref: placeholderRef\n  });\n};","map":{"version":3,"names":["React","useRef","useLayoutEffect","isLinkPrefetch","el","tagName","rel","usePlaceholderRender","resolveId","content","hydrationRef","current","ssrDomNodes","element","parentNode","contains","reverse","forEach","node","insertBefore","nextSibling","_node$parentNode","removeChild","PlaceholderFallbackRender","id","placeholderRef","createElement","type","ref"],"sources":["../../../../src/lazy/placeholders/render.tsx"],"sourcesContent":["import React, { useRef, useLayoutEffect } from 'react';\n\nfunction isLinkPrefetch(el: HTMLElement): el is HTMLLinkElement {\n  return el.tagName === 'LINK' && (el as HTMLLinkElement).rel === 'prefetch';\n}\n\nconst usePlaceholderRender = (resolveId: string, content: HTMLElement[]) => {\n  const hydrationRef = useRef<HTMLInputElement | null>(null);\n  const { current: ssrDomNodes } = useRef(content || ([] as HTMLElement[]));\n\n  useLayoutEffect(() => {\n    const element = hydrationRef.current;\n    const { parentNode } = element || {};\n\n    if (parentNode && !parentNode.contains(ssrDomNodes[0])) {\n      ssrDomNodes.reverse().forEach((node: HTMLElement) => {\n        // this fixes an issue with Chrome that re-triggers and cancels prefetch\n        // when node is appended again, making network panel quite noisy\n        if (isLinkPrefetch(node)) node.rel = '';\n\n        parentNode.insertBefore(node, (element as any).nextSibling);\n      });\n    }\n\n    return () => {\n      ssrDomNodes.forEach((node: HTMLElement) =>\n        node.parentNode?.removeChild(node)\n      );\n    };\n    // [hydrationRef.current, ssrDomNodes] are expected to be stable\n    // with the second one never changing by design and the first one changing after first render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return hydrationRef;\n};\n\nexport type PlaceholderFallbackRenderProps = {\n  id: string;\n  content: HTMLElement[];\n};\n\nexport const PlaceholderFallbackRender = ({\n  id,\n  content,\n}: PlaceholderFallbackRenderProps) => {\n  const placeholderRef = usePlaceholderRender(id, content);\n\n  return <input type=\"hidden\" data-lazy-begin={id} ref={placeholderRef} />;\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,eAAxB,QAA+C,OAA/C;AAEA,SAASC,cAATA,CAAwBC,EAAxB,EAAgE;EAC9D,OAAOA,EAAE,CAACC,OAAH,KAAe,MAAf,IAA0BD,EAAD,CAAwBE,GAAxB,KAAgC,UAAhE;AACD;AAED,MAAMC,oBAAoB,GAAGA,CAACC,SAAD,EAAoBC,OAApB,KAA+C;EAC1E,MAAMC,YAAY,GAAGT,MAAM,CAA0B,IAA1B,CAA3B;EACA,MAAM;IAAEU,OAAO,EAAEC;EAAX,IAA2BX,MAAM,CAACQ,OAAO,IAAK,EAAb,CAAvC;EAEAP,eAAe,CAAC,MAAM;IACpB,MAAMW,OAAO,GAAGH,YAAY,CAACC,OAA7B;IACA,MAAM;MAAEG;IAAF,IAAiBD,OAAO,IAAI,EAAlC;IAEA,IAAIC,UAAU,IAAI,CAACA,UAAU,CAACC,QAAX,CAAoBH,WAAW,CAAC,CAAD,CAA/B,CAAnB,EAAwD;MACtDA,WAAW,CAACI,OAAZ,GAAsBC,OAAtB,CAA+BC,IAAD,IAAuB;QACnD;QACA;QACA,IAAIf,cAAc,CAACe,IAAD,CAAlB,EAA0BA,IAAI,CAACZ,GAAL,GAAW,EAAX;QAE1BQ,UAAU,CAACK,YAAX,CAAwBD,IAAxB,EAA+BL,OAAD,CAAiBO,WAA/C;MACD,CAND;IAOD;IAED,OAAO,MAAM;MACXR,WAAW,CAACK,OAAZ,CAAqBC,IAAD;QAAA,IAAAG,gBAAA;QAAA,QAAAA,gBAAA,GAClBH,IAAI,CAACJ,UADa,qBAClBO,gBAAA,CAAiBC,WAAjB,CAA6BJ,IAA7B,CADkB;MAAA,CAApB;IAGD,CAJD,CAdoB,CAmBpB;IACA;IACA;EACD,CAtBc,EAsBZ,EAtBY,CAAf;EAwBA,OAAOR,YAAP;AACD,CA7BD;AAoCA,OAAO,MAAMa,yBAAyB,GAAGA,CAAC;EACxCC,EADwC;EAExCf;AAFwC,CAAD,KAGH;EACpC,MAAMgB,cAAc,GAAGlB,oBAAoB,CAACiB,EAAD,EAAKf,OAAL,CAA3C;EAEA,oBAAOT,KAAA,CAAA0B,aAAA;IAAOC,IAAI,EAAC,QAAZ;IAAqB,mBAAiBH,EAAtC;IAA0CI,GAAG,EAAEH;EAA/C,EAAP;AACD,CAPM"},"metadata":{},"sourceType":"module"}