{"ast":null,"code":"import { setBooleanResolver, resolveBooleanFlag } from './resolvers';\n\n/**\n * This creates a boolean flag resolver that allows calls to `getBooleanFF` inside of Platform components to use a Product's\n * feature flag client and LD project, rather than installing a feature flag client of their own, or passing those flags in via props.\n *\n * @param flagResolver\n */\nexport function setBooleanFeatureFlagResolver(flagResolver) {\n  setBooleanResolver(flagResolver);\n}\n\n/**\n * Returns the value of a feature flag. If the flag does not resolve, it returns the \"false\" as a default value.\n *\n * @param name\n */\nexport function getBooleanFF(name) {\n  return resolveBooleanFlag(name);\n}","map":{"version":3,"names":["setBooleanResolver","resolveBooleanFlag","setBooleanFeatureFlagResolver","flagResolver","getBooleanFF","name"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js"],"sourcesContent":["import { setBooleanResolver, resolveBooleanFlag } from './resolvers';\n\n/**\n * This creates a boolean flag resolver that allows calls to `getBooleanFF` inside of Platform components to use a Product's\n * feature flag client and LD project, rather than installing a feature flag client of their own, or passing those flags in via props.\n *\n * @param flagResolver\n */\nexport function setBooleanFeatureFlagResolver(flagResolver) {\n  setBooleanResolver(flagResolver);\n}\n\n/**\n * Returns the value of a feature flag. If the flag does not resolve, it returns the \"false\" as a default value.\n *\n * @param name\n */\nexport function getBooleanFF(name) {\n  return resolveBooleanFlag(name);\n}"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,kBAAkB,QAAQ,aAAa;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,6BAA6BA,CAACC,YAAY,EAAE;EAC1DH,kBAAkB,CAACG,YAAY,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,IAAI,EAAE;EACjC,OAAOJ,kBAAkB,CAACI,IAAI,CAAC;AACjC"},"metadata":{},"sourceType":"module"}