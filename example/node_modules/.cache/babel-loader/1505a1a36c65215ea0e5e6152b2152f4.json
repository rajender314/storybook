{"ast":null,"code":"/* eslint-disable @repo/internal/styles/no-nested-styles */\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport Button from '@atlaskit/button/custom-theme-button';\nimport { gridSize as getGridSize } from '@atlaskit/theme/constants';\nimport { DEFAULT_APPEARANCE } from './constants';\nimport { getActionBackground, getActionColor, getFlagFocusRingColor } from './theme';\nvar gridSize = getGridSize();\nvar separatorWidth = gridSize * 2;\nvar defaultAppearanceTranslate = gridSize / 4;\nvar separatorStyles = css({\n  display: 'inline-block',\n  width: separatorWidth,\n  textAlign: 'center'\n});\nvar actionContainerStyles = css({\n  display: 'flex',\n  paddingTop: gridSize,\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  transform: \"translateX(-\".concat(defaultAppearanceTranslate, \"px)\")\n});\nvar boldActionContainerStyles = css({\n  transform: 0\n});\nvar buttonStyles = css({\n  '&&, a&&': {\n    marginLeft: 0,\n    padding: \"0 \".concat(gridSize, \"px !important\"),\n    background: \"var(--bg-color)\",\n    color: \"var(--color) !important\",\n    fontWeight: 500\n  },\n  '&&:focus, a&&:focus': {\n    boxShadow: \"0 0 0 2px var(--focus-color)\"\n  },\n  '&&:hover, &&:active, a&&:hover, a&&:active': {\n    textDecoration: 'underline'\n  }\n});\nvar appeanceNormalButtonStyles = css({\n  '&&, a&&': {\n    padding: '0 !important'\n  }\n});\nvar isBoldButtonStyles = css({\n  '&&, a&&': {\n    marginRight: gridSize\n  }\n});\nvar FlagActions = function FlagActions(props) {\n  var _props$appearance = props.appearance,\n    appearance = _props$appearance === void 0 ? DEFAULT_APPEARANCE : _props$appearance,\n    _props$actions = props.actions,\n    actions = _props$actions === void 0 ? [] : _props$actions,\n    linkComponent = props.linkComponent,\n    mode = props.mode,\n    testId = props.testId;\n  if (!actions.length) {\n    return null;\n  }\n  var isBold = appearance !== DEFAULT_APPEARANCE;\n  return jsx(\"div\", {\n    css: [actionContainerStyles, isBold && boldActionContainerStyles],\n    \"data-testid\": testId && \"\".concat(testId, \"-actions\")\n  }, actions.map(function (action, index) {\n    return [index && !isBold ? jsx(\"div\", {\n      css: separatorStyles,\n      key: index + 0.5\n    }, \"\\xB7\") : '', jsx(Button, {\n      onClick: action.onClick,\n      href: action.href,\n      target: action.target,\n      appearance: isBold ? 'default' : 'link',\n      component: linkComponent,\n      spacing: \"compact\",\n      testId: action.testId,\n      key: index,\n      style: {\n        '--color': getActionColor(appearance, mode),\n        '--bg-color': getActionBackground(appearance, mode),\n        '--focus-color': getFlagFocusRingColor(appearance, mode)\n      },\n      css: [buttonStyles, isBold && isBoldButtonStyles, appearance === 'normal' && appeanceNormalButtonStyles]\n    }, action.content)];\n  }));\n}; // eslint-disable-next-line @repo/internal/react/require-jsdoc\n\nexport default FlagActions;","map":{"version":3,"names":["css","jsx","Button","gridSize","getGridSize","DEFAULT_APPEARANCE","getActionBackground","getActionColor","getFlagFocusRingColor","separatorWidth","defaultAppearanceTranslate","separatorStyles","display","width","textAlign","actionContainerStyles","paddingTop","alignItems","flexWrap","transform","concat","boldActionContainerStyles","buttonStyles","marginLeft","padding","background","color","fontWeight","boxShadow","textDecoration","appeanceNormalButtonStyles","isBoldButtonStyles","marginRight","FlagActions","props","_props$appearance","appearance","_props$actions","actions","linkComponent","mode","testId","length","isBold","map","action","index","key","onClick","href","target","component","spacing","style","content"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/flag/dist/esm/flag-actions.js"],"sourcesContent":["/* eslint-disable @repo/internal/styles/no-nested-styles */\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport Button from '@atlaskit/button/custom-theme-button';\nimport { gridSize as getGridSize } from '@atlaskit/theme/constants';\nimport { DEFAULT_APPEARANCE } from './constants';\nimport { getActionBackground, getActionColor, getFlagFocusRingColor } from './theme';\nvar gridSize = getGridSize();\nvar separatorWidth = gridSize * 2;\nvar defaultAppearanceTranslate = gridSize / 4;\nvar separatorStyles = css({\n  display: 'inline-block',\n  width: separatorWidth,\n  textAlign: 'center'\n});\nvar actionContainerStyles = css({\n  display: 'flex',\n  paddingTop: gridSize,\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  transform: \"translateX(-\".concat(defaultAppearanceTranslate, \"px)\")\n});\nvar boldActionContainerStyles = css({\n  transform: 0\n});\nvar buttonStyles = css({\n  '&&, a&&': {\n    marginLeft: 0,\n    padding: \"0 \".concat(gridSize, \"px !important\"),\n    background: \"var(--bg-color)\",\n    color: \"var(--color) !important\",\n    fontWeight: 500\n  },\n  '&&:focus, a&&:focus': {\n    boxShadow: \"0 0 0 2px var(--focus-color)\"\n  },\n  '&&:hover, &&:active, a&&:hover, a&&:active': {\n    textDecoration: 'underline'\n  }\n});\nvar appeanceNormalButtonStyles = css({\n  '&&, a&&': {\n    padding: '0 !important'\n  }\n});\nvar isBoldButtonStyles = css({\n  '&&, a&&': {\n    marginRight: gridSize\n  }\n});\n\nvar FlagActions = function FlagActions(props) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? DEFAULT_APPEARANCE : _props$appearance,\n      _props$actions = props.actions,\n      actions = _props$actions === void 0 ? [] : _props$actions,\n      linkComponent = props.linkComponent,\n      mode = props.mode,\n      testId = props.testId;\n\n  if (!actions.length) {\n    return null;\n  }\n\n  var isBold = appearance !== DEFAULT_APPEARANCE;\n  return jsx(\"div\", {\n    css: [actionContainerStyles, isBold && boldActionContainerStyles],\n    \"data-testid\": testId && \"\".concat(testId, \"-actions\")\n  }, actions.map(function (action, index) {\n    return [index && !isBold ? jsx(\"div\", {\n      css: separatorStyles,\n      key: index + 0.5\n    }, \"\\xB7\") : '', jsx(Button, {\n      onClick: action.onClick,\n      href: action.href,\n      target: action.target,\n      appearance: isBold ? 'default' : 'link',\n      component: linkComponent,\n      spacing: \"compact\",\n      testId: action.testId,\n      key: index,\n      style: {\n        '--color': getActionColor(appearance, mode),\n        '--bg-color': getActionBackground(appearance, mode),\n        '--focus-color': getFlagFocusRingColor(appearance, mode)\n      },\n      css: [buttonStyles, isBold && isBoldButtonStyles, appearance === 'normal' && appeanceNormalButtonStyles]\n    }, action.content)];\n  }));\n}; // eslint-disable-next-line @repo/internal/react/require-jsdoc\n\n\nexport default FlagActions;"],"mappings":"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"},"metadata":{},"sourceType":"module"}