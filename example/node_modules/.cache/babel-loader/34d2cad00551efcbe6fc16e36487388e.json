{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nimport rawTokensDark from '../artifacts/atlassian-dark-token-value-for-contrast-check';\nimport { deltaE, getContrastRatio, hexToHSL, hexToRgb, hexToRgbA, HSLToRGB, relativeLuminanceW3C, rgbToHex } from './color-utils';\nimport { additionalContrastChecker } from './custom-theme-token-contrast-check';\nimport { argbFromRgba, Contrast, Hct, rgbaFromArgb } from './hct-color-utils';\nvar lowLuminanceContrastRatios = [1.12, 1.33, 2.03, 2.73, 3.33, 4.27, 5.2, 6.62, 12.46, 14.25];\nvar highLuminanceContrastRatios = [1.08, 1.24, 1.55, 1.99, 2.45, 3.34, 4.64, 6.1, 10.19, 12.6];\nexport var getClosestColorIndex = function getClosestColorIndex(themeRamp, brandColor) {\n  // Iterate over themeRamp and find whichever color is closest to brandColor\n  var closestColorIndex = 0;\n  var closestColorDistance = null;\n  themeRamp.forEach(function (value, index) {\n    var distance = deltaE(hexToRgb(value), hexToRgb(brandColor));\n    if (closestColorDistance === null || distance < closestColorDistance) {\n      closestColorIndex = index;\n      closestColorDistance = distance;\n    }\n  });\n  return closestColorIndex;\n};\nexport var generateColors = function generateColors(brandColor) {\n  // Determine luminance\n  var HSLBrandColorHue = hexToHSL(brandColor)[0];\n  var baseRgb = HSLToRGB(HSLBrandColorHue, 100, 60);\n  var isLowLuminance = relativeLuminanceW3C(baseRgb[0], baseRgb[1], baseRgb[2]) < 0.4;\n  // Choose right palette\n  var themeRatios = isLowLuminance ? lowLuminanceContrastRatios : highLuminanceContrastRatios;\n  var brandRgba = hexToRgbA(brandColor);\n  var hctColor = Hct.fromInt(argbFromRgba({\n    r: brandRgba[0],\n    g: brandRgba[1],\n    b: brandRgba[2],\n    a: brandRgba[3]\n  }));\n  var themeRamp = themeRatios.map(function (contrast) {\n    var rgbaColor = rgbaFromArgb(Hct.from(hctColor.hue, hctColor.chroma, Contrast.darker(100, contrast) + 0.25 // Material's utils provide an offset\n    ).toInt());\n    return rgbToHex(rgbaColor.r, rgbaColor.g, rgbaColor.b);\n  });\n  var closestColorIndex = getClosestColorIndex(themeRamp, brandColor);\n\n  // Replace closet color with brandColor\n  var updatedThemeRamp = _toConsumableArray(themeRamp);\n  updatedThemeRamp[closestColorIndex] = brandColor;\n  return {\n    ramp: updatedThemeRamp,\n    // add the replaced color into the result\n    replacedColor: themeRamp[closestColorIndex]\n  };\n};\n\n/**\n * Return the interaction tokens for a color, given its ramp position and the number of\n * needed interaction states. Use higher-indexed colors (i.e. darker colors) if possible;\n * if there's not enough room to shift up for the required number of interaction tokens,\n * it goes as far as it can, then returns lighter colors lower down the ramp instead.\n *\n * Returns an array of the resulting colors\n */\nfunction getInteractionStates(rampPosition, number, colors) {\n  var result = [];\n  for (var i = 1; i <= number; i++) {\n    if (rampPosition + i < colors.length) {\n      result.push(rampPosition + i);\n    } else {\n      result.push(rampPosition - (i - (colors.length - 1 - rampPosition)));\n    }\n  }\n  return result;\n}\nexport var generateTokenMap = function generateTokenMap(brandColor, mode, themeRamp) {\n  var _generateColors = generateColors(brandColor),\n    ramp = _generateColors.ramp,\n    replacedColor = _generateColors.replacedColor;\n  var colors = themeRamp || ramp;\n  var closestColorIndex = getClosestColorIndex(colors, brandColor);\n  var customThemeTokenMapLight = {};\n  var customThemeTokenMapDark = {};\n  var inputContrast = getContrastRatio(brandColor, '#FFFFFF');\n  // Branch based on brandColor's contrast against white\n  if (inputContrast >= 4.5) {\n    /**\n     * Generate interaction tokens for\n     * - color.background.brand.bold\n     * - color.background.selected.bold\n     */\n    var _getInteractionStates = getInteractionStates(closestColorIndex, 2, colors),\n      _getInteractionStates2 = _slicedToArray(_getInteractionStates, 2),\n      brandBoldSelectedHoveredIndex = _getInteractionStates2[0],\n      brandBoldSelectedPressedIndex = _getInteractionStates2[1];\n    var brandTextIndex = closestColorIndex;\n    if (inputContrast < 5.4 && inputContrast >= 4.8 && closestColorIndex === 6) {\n      // Use the one-level darker closest color (X800) for color.text.brand\n      // and color.link to avoid contrast breaches\n      brandTextIndex = closestColorIndex + 1;\n    }\n\n    /**\n     * Generate interaction token for color.link:\n     * If inputted color replaces X1000\n     * - Pressed = X900\n     *\n     * If inputted color replaces X700-X900\n     * - Shift one 1 step darker\n     */\n    var _getInteractionStates3 = getInteractionStates(brandTextIndex, 1, colors),\n      _getInteractionStates4 = _slicedToArray(_getInteractionStates3, 1),\n      linkPressed = _getInteractionStates4[0];\n    customThemeTokenMapLight = {\n      'color.text.brand': brandTextIndex,\n      'color.icon.brand': closestColorIndex,\n      'color.background.brand.subtlest': 0,\n      'color.background.brand.subtlest.hovered': 1,\n      'color.background.brand.subtlest.pressed': 2,\n      'color.background.brand.bold': closestColorIndex,\n      'color.background.brand.bold.hovered': brandBoldSelectedHoveredIndex,\n      'color.background.brand.bold.pressed': brandBoldSelectedPressedIndex,\n      'color.background.brand.boldest': 9,\n      'color.background.brand.boldest.hovered': 8,\n      'color.background.brand.boldest.pressed': 7,\n      'color.border.brand': closestColorIndex,\n      'color.text.selected': brandTextIndex,\n      'color.icon.selected': closestColorIndex,\n      'color.background.selected.bold': closestColorIndex,\n      'color.background.selected.bold.hovered': brandBoldSelectedHoveredIndex,\n      'color.background.selected.bold.pressed': brandBoldSelectedPressedIndex,\n      'color.border.selected': closestColorIndex,\n      'color.link': brandTextIndex,\n      'color.link.pressed': linkPressed,\n      'color.chart.brand': 5,\n      'color.chart.brand.hovered': 6,\n      'color.background.selected': 0,\n      'color.background.selected.hovered': 1,\n      'color.background.selected.pressed': 2\n    };\n  } else {\n    var brandBackgroundIndex = 6;\n    if (inputContrast < 4.5 && inputContrast >= 4 && closestColorIndex === 6) {\n      // Use the generated closest color instead of the input brand color for\n      // color.background.selected.bold and color.background.brand.bold\n      // to avoid contrast breaches\n      brandBackgroundIndex = replacedColor;\n    }\n    customThemeTokenMapLight = {\n      'color.background.brand.subtlest': 0,\n      'color.background.brand.subtlest.hovered': 1,\n      'color.background.brand.subtlest.pressed': 2,\n      'color.background.brand.bold': brandBackgroundIndex,\n      'color.background.brand.bold.hovered': 7,\n      'color.background.brand.bold.pressed': 8,\n      'color.background.brand.boldest': 9,\n      'color.background.brand.boldest.hovered': 8,\n      'color.background.brand.boldest.pressed': 7,\n      'color.border.brand': 6,\n      'color.background.selected.bold': brandBackgroundIndex,\n      'color.background.selected.bold.hovered': 7,\n      'color.background.selected.bold.pressed': 8,\n      'color.text.brand': 6,\n      'color.icon.brand': 6,\n      'color.chart.brand': 5,\n      'color.chart.brand.hovered': 6,\n      'color.text.selected': 6,\n      'color.icon.selected': 6,\n      'color.border.selected': 6,\n      'color.background.selected': 0,\n      'color.background.selected.hovered': 1,\n      'color.background.selected.pressed': 2,\n      'color.link': 6,\n      'color.link.pressed': 7\n    };\n  }\n  if (mode === 'light') {\n    return {\n      light: customThemeTokenMapLight\n    };\n  }\n\n  /**\n   * Generate dark mode values using rule of symmetry\n   */\n  Object.entries(customThemeTokenMapLight).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    customThemeTokenMapDark[key] = 9 - (typeof value === 'string' ? closestColorIndex : value);\n  });\n\n  /**\n   * If the input brand color < 4.5, and it meets 4.5 contrast again inverse text color\n   * in dark mode, shift color.background.brand.bold to the brand color\n   */\n  if (inputContrast < 4.5) {\n    var inverseTextColor = rawTokensDark['color.text.inverse'];\n    if (getContrastRatio(inverseTextColor, brandColor) >= 4.5 && closestColorIndex >= 2) {\n      customThemeTokenMapDark['color.background.brand.bold'] = closestColorIndex;\n      customThemeTokenMapDark['color.background.brand.bold.hovered'] = closestColorIndex - 1;\n      customThemeTokenMapDark['color.background.brand.bold.pressed'] = closestColorIndex - 2;\n    }\n  }\n  if (mode === 'dark') {\n    return {\n      dark: customThemeTokenMapDark\n    };\n  }\n  return {\n    light: customThemeTokenMapLight,\n    dark: customThemeTokenMapDark\n  };\n};\nexport var generateTokenMapWithContrastCheck = function generateTokenMapWithContrastCheck(brandColor, mode, themeRamp) {\n  var colors = themeRamp || generateColors(brandColor).ramp;\n  var tokenMaps = generateTokenMap(brandColor, mode, colors);\n  var result = {};\n  Object.entries(tokenMaps).forEach(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      mode = _ref4[0],\n      map = _ref4[1];\n    if (mode === 'light' || mode === 'dark') {\n      result[mode] = _objectSpread(_objectSpread({}, map), additionalContrastChecker({\n        customThemeTokenMap: map,\n        mode: mode,\n        themeRamp: colors\n      }));\n    }\n  });\n  return result;\n};","map":{"version":3,"names":["_defineProperty","_slicedToArray","_toConsumableArray","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","rawTokensDark","deltaE","getContrastRatio","hexToHSL","hexToRgb","hexToRgbA","HSLToRGB","relativeLuminanceW3C","rgbToHex","additionalContrastChecker","argbFromRgba","Contrast","Hct","rgbaFromArgb","lowLuminanceContrastRatios","highLuminanceContrastRatios","getClosestColorIndex","themeRamp","brandColor","closestColorIndex","closestColorDistance","value","index","distance","generateColors","HSLBrandColorHue","baseRgb","isLowLuminance","themeRatios","brandRgba","hctColor","fromInt","g","b","a","map","contrast","rgbaColor","from","hue","chroma","darker","toInt","updatedThemeRamp","ramp","replacedColor","getInteractionStates","rampPosition","number","colors","result","i","generateTokenMap","mode","_generateColors","customThemeTokenMapLight","customThemeTokenMapDark","inputContrast","_getInteractionStates","_getInteractionStates2","brandBoldSelectedHoveredIndex","brandBoldSelectedPressedIndex","brandTextIndex","_getInteractionStates3","_getInteractionStates4","linkPressed","brandBackgroundIndex","light","entries","_ref","_ref2","key","inverseTextColor","dark","generateTokenMapWithContrastCheck","tokenMaps","_ref3","_ref4","customThemeTokenMap"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/modal-dialog/node_modules/@atlaskit/tokens/dist/esm/utils/generate-custom-color-ramp.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport rawTokensDark from '../artifacts/atlassian-dark-token-value-for-contrast-check';\nimport { deltaE, getContrastRatio, hexToHSL, hexToRgb, hexToRgbA, HSLToRGB, relativeLuminanceW3C, rgbToHex } from './color-utils';\nimport { additionalContrastChecker } from './custom-theme-token-contrast-check';\nimport { argbFromRgba, Contrast, Hct, rgbaFromArgb } from './hct-color-utils';\nvar lowLuminanceContrastRatios = [1.12, 1.33, 2.03, 2.73, 3.33, 4.27, 5.2, 6.62, 12.46, 14.25];\nvar highLuminanceContrastRatios = [1.08, 1.24, 1.55, 1.99, 2.45, 3.34, 4.64, 6.1, 10.19, 12.6];\nexport var getClosestColorIndex = function getClosestColorIndex(themeRamp, brandColor) {\n  // Iterate over themeRamp and find whichever color is closest to brandColor\n  var closestColorIndex = 0;\n  var closestColorDistance = null;\n  themeRamp.forEach(function (value, index) {\n    var distance = deltaE(hexToRgb(value), hexToRgb(brandColor));\n    if (closestColorDistance === null || distance < closestColorDistance) {\n      closestColorIndex = index;\n      closestColorDistance = distance;\n    }\n  });\n  return closestColorIndex;\n};\nexport var generateColors = function generateColors(brandColor) {\n  // Determine luminance\n  var HSLBrandColorHue = hexToHSL(brandColor)[0];\n  var baseRgb = HSLToRGB(HSLBrandColorHue, 100, 60);\n  var isLowLuminance = relativeLuminanceW3C(baseRgb[0], baseRgb[1], baseRgb[2]) < 0.4;\n  // Choose right palette\n  var themeRatios = isLowLuminance ? lowLuminanceContrastRatios : highLuminanceContrastRatios;\n  var brandRgba = hexToRgbA(brandColor);\n  var hctColor = Hct.fromInt(argbFromRgba({\n    r: brandRgba[0],\n    g: brandRgba[1],\n    b: brandRgba[2],\n    a: brandRgba[3]\n  }));\n  var themeRamp = themeRatios.map(function (contrast) {\n    var rgbaColor = rgbaFromArgb(Hct.from(hctColor.hue, hctColor.chroma, Contrast.darker(100, contrast) + 0.25 // Material's utils provide an offset\n    ).toInt());\n    return rgbToHex(rgbaColor.r, rgbaColor.g, rgbaColor.b);\n  });\n  var closestColorIndex = getClosestColorIndex(themeRamp, brandColor);\n\n  // Replace closet color with brandColor\n  var updatedThemeRamp = _toConsumableArray(themeRamp);\n  updatedThemeRamp[closestColorIndex] = brandColor;\n  return {\n    ramp: updatedThemeRamp,\n    // add the replaced color into the result\n    replacedColor: themeRamp[closestColorIndex]\n  };\n};\n\n/**\n * Return the interaction tokens for a color, given its ramp position and the number of\n * needed interaction states. Use higher-indexed colors (i.e. darker colors) if possible;\n * if there's not enough room to shift up for the required number of interaction tokens,\n * it goes as far as it can, then returns lighter colors lower down the ramp instead.\n *\n * Returns an array of the resulting colors\n */\nfunction getInteractionStates(rampPosition, number, colors) {\n  var result = [];\n  for (var i = 1; i <= number; i++) {\n    if (rampPosition + i < colors.length) {\n      result.push(rampPosition + i);\n    } else {\n      result.push(rampPosition - (i - (colors.length - 1 - rampPosition)));\n    }\n  }\n  return result;\n}\nexport var generateTokenMap = function generateTokenMap(brandColor, mode, themeRamp) {\n  var _generateColors = generateColors(brandColor),\n    ramp = _generateColors.ramp,\n    replacedColor = _generateColors.replacedColor;\n  var colors = themeRamp || ramp;\n  var closestColorIndex = getClosestColorIndex(colors, brandColor);\n  var customThemeTokenMapLight = {};\n  var customThemeTokenMapDark = {};\n  var inputContrast = getContrastRatio(brandColor, '#FFFFFF');\n  // Branch based on brandColor's contrast against white\n  if (inputContrast >= 4.5) {\n    /**\n     * Generate interaction tokens for\n     * - color.background.brand.bold\n     * - color.background.selected.bold\n     */\n    var _getInteractionStates = getInteractionStates(closestColorIndex, 2, colors),\n      _getInteractionStates2 = _slicedToArray(_getInteractionStates, 2),\n      brandBoldSelectedHoveredIndex = _getInteractionStates2[0],\n      brandBoldSelectedPressedIndex = _getInteractionStates2[1];\n    var brandTextIndex = closestColorIndex;\n    if (inputContrast < 5.4 && inputContrast >= 4.8 && closestColorIndex === 6) {\n      // Use the one-level darker closest color (X800) for color.text.brand\n      // and color.link to avoid contrast breaches\n      brandTextIndex = closestColorIndex + 1;\n    }\n\n    /**\n     * Generate interaction token for color.link:\n     * If inputted color replaces X1000\n     * - Pressed = X900\n     *\n     * If inputted color replaces X700-X900\n     * - Shift one 1 step darker\n     */\n    var _getInteractionStates3 = getInteractionStates(brandTextIndex, 1, colors),\n      _getInteractionStates4 = _slicedToArray(_getInteractionStates3, 1),\n      linkPressed = _getInteractionStates4[0];\n    customThemeTokenMapLight = {\n      'color.text.brand': brandTextIndex,\n      'color.icon.brand': closestColorIndex,\n      'color.background.brand.subtlest': 0,\n      'color.background.brand.subtlest.hovered': 1,\n      'color.background.brand.subtlest.pressed': 2,\n      'color.background.brand.bold': closestColorIndex,\n      'color.background.brand.bold.hovered': brandBoldSelectedHoveredIndex,\n      'color.background.brand.bold.pressed': brandBoldSelectedPressedIndex,\n      'color.background.brand.boldest': 9,\n      'color.background.brand.boldest.hovered': 8,\n      'color.background.brand.boldest.pressed': 7,\n      'color.border.brand': closestColorIndex,\n      'color.text.selected': brandTextIndex,\n      'color.icon.selected': closestColorIndex,\n      'color.background.selected.bold': closestColorIndex,\n      'color.background.selected.bold.hovered': brandBoldSelectedHoveredIndex,\n      'color.background.selected.bold.pressed': brandBoldSelectedPressedIndex,\n      'color.border.selected': closestColorIndex,\n      'color.link': brandTextIndex,\n      'color.link.pressed': linkPressed,\n      'color.chart.brand': 5,\n      'color.chart.brand.hovered': 6,\n      'color.background.selected': 0,\n      'color.background.selected.hovered': 1,\n      'color.background.selected.pressed': 2\n    };\n  } else {\n    var brandBackgroundIndex = 6;\n    if (inputContrast < 4.5 && inputContrast >= 4 && closestColorIndex === 6) {\n      // Use the generated closest color instead of the input brand color for\n      // color.background.selected.bold and color.background.brand.bold\n      // to avoid contrast breaches\n      brandBackgroundIndex = replacedColor;\n    }\n    customThemeTokenMapLight = {\n      'color.background.brand.subtlest': 0,\n      'color.background.brand.subtlest.hovered': 1,\n      'color.background.brand.subtlest.pressed': 2,\n      'color.background.brand.bold': brandBackgroundIndex,\n      'color.background.brand.bold.hovered': 7,\n      'color.background.brand.bold.pressed': 8,\n      'color.background.brand.boldest': 9,\n      'color.background.brand.boldest.hovered': 8,\n      'color.background.brand.boldest.pressed': 7,\n      'color.border.brand': 6,\n      'color.background.selected.bold': brandBackgroundIndex,\n      'color.background.selected.bold.hovered': 7,\n      'color.background.selected.bold.pressed': 8,\n      'color.text.brand': 6,\n      'color.icon.brand': 6,\n      'color.chart.brand': 5,\n      'color.chart.brand.hovered': 6,\n      'color.text.selected': 6,\n      'color.icon.selected': 6,\n      'color.border.selected': 6,\n      'color.background.selected': 0,\n      'color.background.selected.hovered': 1,\n      'color.background.selected.pressed': 2,\n      'color.link': 6,\n      'color.link.pressed': 7\n    };\n  }\n  if (mode === 'light') {\n    return {\n      light: customThemeTokenMapLight\n    };\n  }\n\n  /**\n   * Generate dark mode values using rule of symmetry\n   */\n  Object.entries(customThemeTokenMapLight).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    customThemeTokenMapDark[key] = 9 - (typeof value === 'string' ? closestColorIndex : value);\n  });\n\n  /**\n   * If the input brand color < 4.5, and it meets 4.5 contrast again inverse text color\n   * in dark mode, shift color.background.brand.bold to the brand color\n   */\n  if (inputContrast < 4.5) {\n    var inverseTextColor = rawTokensDark['color.text.inverse'];\n    if (getContrastRatio(inverseTextColor, brandColor) >= 4.5 && closestColorIndex >= 2) {\n      customThemeTokenMapDark['color.background.brand.bold'] = closestColorIndex;\n      customThemeTokenMapDark['color.background.brand.bold.hovered'] = closestColorIndex - 1;\n      customThemeTokenMapDark['color.background.brand.bold.pressed'] = closestColorIndex - 2;\n    }\n  }\n  if (mode === 'dark') {\n    return {\n      dark: customThemeTokenMapDark\n    };\n  }\n  return {\n    light: customThemeTokenMapLight,\n    dark: customThemeTokenMapDark\n  };\n};\nexport var generateTokenMapWithContrastCheck = function generateTokenMapWithContrastCheck(brandColor, mode, themeRamp) {\n  var colors = themeRamp || generateColors(brandColor).ramp;\n  var tokenMaps = generateTokenMap(brandColor, mode, colors);\n  var result = {};\n  Object.entries(tokenMaps).forEach(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      mode = _ref4[0],\n      map = _ref4[1];\n    if (mode === 'light' || mode === 'dark') {\n      result[mode] = _objectSpread(_objectSpread({}, map), additionalContrastChecker({\n        customThemeTokenMap: map,\n        mode: mode,\n        themeRamp: colors\n      }));\n    }\n  });\n  return result;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}