{"ast":null,"code":"/** @jsx jsx */\nimport { forwardRef, memo } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { spaceStylesMap } from '../xcss/style-maps.partial';\nimport { parseXcss } from '../xcss/xcss';\nvar justifyContentMap = {\n  start: css({\n    justifyContent: 'start'\n  }),\n  center: css({\n    justifyContent: 'center'\n  }),\n  end: css({\n    justifyContent: 'end'\n  }),\n  'space-between': css({\n    justifyContent: 'space-between'\n  }),\n  'space-around': css({\n    justifyContent: 'space-around'\n  }),\n  'space-evenly': css({\n    justifyContent: 'space-evenly'\n  }),\n  stretch: css({\n    justifyContent: 'stretch'\n  })\n};\nvar flexDirectionMap = {\n  column: css({\n    flexDirection: 'column'\n  }),\n  row: css({\n    flexDirection: 'row'\n  })\n};\nvar flexWrapMap = {\n  wrap: css({\n    flexWrap: 'wrap'\n  }),\n  nowrap: css({\n    flexWrap: 'nowrap'\n  })\n};\nvar alignItemsMap = {\n  start: css({\n    alignItems: 'start'\n  }),\n  center: css({\n    alignItems: 'center'\n  }),\n  baseline: css({\n    alignItems: 'baseline'\n  }),\n  end: css({\n    alignItems: 'end'\n  }),\n  stretch: css({\n    alignItems: 'stretch'\n  })\n};\nvar baseStyles = css({\n  display: 'flex',\n  boxSizing: 'border-box'\n});\n\n/**\n * __Flex__\n *\n * `Flex` is a primitive component that implements the CSS Flexbox API.\n *\n * - [Examples](https://atlassian.design/components/primitives/flex/examples)\n * - [Code](https://atlassian.design/components/primitives/flex/code)\n *\n * @example\n * ```tsx\n * import { Flex, Box } from '@atlaskit/primitives'\n *\n * const Component = () => (\n *   <Flex direction=\"column\">\n *     <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *     <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *   </Flex>\n * )\n * ```\n */\nvar Flex = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    alignItems = _ref.alignItems,\n    justifyContent = _ref.justifyContent,\n    gap = _ref.gap,\n    columnGap = _ref.columnGap,\n    rowGap = _ref.rowGap,\n    children = _ref.children,\n    testId = _ref.testId,\n    direction = _ref.direction,\n    wrap = _ref.wrap,\n    xcss = _ref.xcss;\n  var xcssClassName = xcss && parseXcss(xcss);\n  return jsx(Component, {\n    css: [baseStyles, gap && spaceStylesMap.gap[gap], columnGap && spaceStylesMap.columnGap[columnGap], rowGap && spaceStylesMap.rowGap[rowGap], alignItems && alignItemsMap[alignItems], direction && flexDirectionMap[direction], justifyContent && justifyContentMap[justifyContent], wrap && flexWrapMap[wrap],\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    xcssClassName && xcssClassName],\n    \"data-testid\": testId,\n    ref: ref\n  }, children);\n}));\nFlex.displayName = 'Flex';\nexport default Flex;","map":{"version":3,"names":["forwardRef","memo","css","jsx","spaceStylesMap","parseXcss","justifyContentMap","start","justifyContent","center","end","stretch","flexDirectionMap","column","flexDirection","row","flexWrapMap","wrap","flexWrap","nowrap","alignItemsMap","alignItems","baseline","baseStyles","display","boxSizing","Flex","_ref","ref","_ref$as","as","Component","gap","columnGap","rowGap","children","testId","direction","xcss","xcssClassName","displayName"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/primitives/dist/esm/components/flex.js"],"sourcesContent":["/** @jsx jsx */\nimport { forwardRef, memo } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport { spaceStylesMap } from '../xcss/style-maps.partial';\nimport { parseXcss } from '../xcss/xcss';\nvar justifyContentMap = {\n  start: css({\n    justifyContent: 'start'\n  }),\n  center: css({\n    justifyContent: 'center'\n  }),\n  end: css({\n    justifyContent: 'end'\n  }),\n  'space-between': css({\n    justifyContent: 'space-between'\n  }),\n  'space-around': css({\n    justifyContent: 'space-around'\n  }),\n  'space-evenly': css({\n    justifyContent: 'space-evenly'\n  }),\n  stretch: css({\n    justifyContent: 'stretch'\n  })\n};\nvar flexDirectionMap = {\n  column: css({\n    flexDirection: 'column'\n  }),\n  row: css({\n    flexDirection: 'row'\n  })\n};\nvar flexWrapMap = {\n  wrap: css({\n    flexWrap: 'wrap'\n  }),\n  nowrap: css({\n    flexWrap: 'nowrap'\n  })\n};\nvar alignItemsMap = {\n  start: css({\n    alignItems: 'start'\n  }),\n  center: css({\n    alignItems: 'center'\n  }),\n  baseline: css({\n    alignItems: 'baseline'\n  }),\n  end: css({\n    alignItems: 'end'\n  }),\n  stretch: css({\n    alignItems: 'stretch'\n  })\n};\nvar baseStyles = css({\n  display: 'flex',\n  boxSizing: 'border-box'\n});\n\n/**\n * __Flex__\n *\n * `Flex` is a primitive component that implements the CSS Flexbox API.\n *\n * - [Examples](https://atlassian.design/components/primitives/flex/examples)\n * - [Code](https://atlassian.design/components/primitives/flex/code)\n *\n * @example\n * ```tsx\n * import { Flex, Box } from '@atlaskit/primitives'\n *\n * const Component = () => (\n *   <Flex direction=\"column\">\n *     <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *     <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *   </Flex>\n * )\n * ```\n */\nvar Flex = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    alignItems = _ref.alignItems,\n    justifyContent = _ref.justifyContent,\n    gap = _ref.gap,\n    columnGap = _ref.columnGap,\n    rowGap = _ref.rowGap,\n    children = _ref.children,\n    testId = _ref.testId,\n    direction = _ref.direction,\n    wrap = _ref.wrap,\n    xcss = _ref.xcss;\n  var xcssClassName = xcss && parseXcss(xcss);\n  return jsx(Component, {\n    css: [baseStyles, gap && spaceStylesMap.gap[gap], columnGap && spaceStylesMap.columnGap[columnGap], rowGap && spaceStylesMap.rowGap[rowGap], alignItems && alignItemsMap[alignItems], direction && flexDirectionMap[direction], justifyContent && justifyContentMap[justifyContent], wrap && flexWrapMap[wrap],\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    xcssClassName && xcssClassName],\n    \"data-testid\": testId,\n    ref: ref\n  }, children);\n}));\nFlex.displayName = 'Flex';\nexport default Flex;"],"mappings":"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"},"metadata":{},"sourceType":"module"}