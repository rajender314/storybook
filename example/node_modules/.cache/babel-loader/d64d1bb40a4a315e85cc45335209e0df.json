{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport getGlobalTheme from './get-global-theme';\nimport ThemeMutationObserver from './theme-mutation-observer';\n\n/**\n * A React hook which returns the current themes and color-mode set on `<html>`.\n *\n * @example\n * ```\n * const { colorMode, dark, light, spacing, typography } = useThemeObserver();\n *\n * // Performing side effects when it changes\n * useEffect(() => {\n *   console.log(`The color mode has changed to ${theme.colorMode}`);\n * }, [theme.colorMode]);\n * ```\n */\nvar useThemeObserver = function useThemeObserver() {\n  var _useState = useState(getGlobalTheme()),\n    _useState2 = _slicedToArray(_useState, 2),\n    theme = _useState2[0],\n    setTheme = _useState2[1];\n  useEffect(function () {\n    var observer = new ThemeMutationObserver(function (theme) {\n      return setTheme(theme);\n    });\n    observer.observe();\n    return function () {\n      return observer.disconnect();\n    };\n  }, []);\n  return theme;\n};\nexport default useThemeObserver;","map":{"version":3,"names":["_slicedToArray","useEffect","useState","getGlobalTheme","ThemeMutationObserver","useThemeObserver","_useState","_useState2","theme","setTheme","observer","observe","disconnect"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/popup/node_modules/@atlaskit/tokens/dist/esm/use-theme-observer.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport getGlobalTheme from './get-global-theme';\nimport ThemeMutationObserver from './theme-mutation-observer';\n\n/**\n * A React hook which returns the current themes and color-mode set on `<html>`.\n *\n * @example\n * ```\n * const { colorMode, dark, light, spacing, typography } = useThemeObserver();\n *\n * // Performing side effects when it changes\n * useEffect(() => {\n *   console.log(`The color mode has changed to ${theme.colorMode}`);\n * }, [theme.colorMode]);\n * ```\n */\nvar useThemeObserver = function useThemeObserver() {\n  var _useState = useState(getGlobalTheme()),\n    _useState2 = _slicedToArray(_useState, 2),\n    theme = _useState2[0],\n    setTheme = _useState2[1];\n  useEffect(function () {\n    var observer = new ThemeMutationObserver(function (theme) {\n      return setTheme(theme);\n    });\n    observer.observe();\n    return function () {\n      return observer.disconnect();\n    };\n  }, []);\n  return theme;\n};\nexport default useThemeObserver;"],"mappings":"AAAA,OAAOA,cAAc,MAAM,sCAAsC;AACjE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,OAAOC,qBAAqB,MAAM,2BAA2B;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAAA,EAAG;EACjD,IAAIC,SAAS,GAAGJ,QAAQ,CAACC,cAAc,CAAC,CAAC,CAAC;IACxCI,UAAU,GAAGP,cAAc,CAACM,SAAS,EAAE,CAAC,CAAC;IACzCE,KAAK,GAAGD,UAAU,CAAC,CAAC,CAAC;IACrBE,QAAQ,GAAGF,UAAU,CAAC,CAAC,CAAC;EAC1BN,SAAS,CAAC,YAAY;IACpB,IAAIS,QAAQ,GAAG,IAAIN,qBAAqB,CAAC,UAAUI,KAAK,EAAE;MACxD,OAAOC,QAAQ,CAACD,KAAK,CAAC;IACxB,CAAC,CAAC;IACFE,QAAQ,CAACC,OAAO,CAAC,CAAC;IAClB,OAAO,YAAY;MACjB,OAAOD,QAAQ,CAACE,UAAU,CAAC,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,OAAOJ,KAAK;AACd,CAAC;AACD,eAAeH,gBAAgB"},"metadata":{},"sourceType":"module"}