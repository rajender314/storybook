{"ast":null,"code":"import { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport { COLOR_MODE_ATTRIBUTE, CONTRAST_MODE_ATTRIBUTE } from './constants';\nimport { darkModeMediaQuery, moreContrastMediaQuery } from './utils/theme-loading';\n\n/**\n * Provides a script that, when executed before paint, sets the `data-color-mode` attribute based on the current system theme,\n * to enable SSR support for automatic theme switching, avoid a flash of un-themed content on first paint.\n *\n * @param {string} colorMode Determines which color theme is applied. If set to `auto`, the theme applied will be determined by the OS setting.\n *\n * @returns {string} A string to be added to the innerHTML of a script tag in the document head\n */\nvar getSSRAutoScript = function getSSRAutoScript(colorMode, contrastMode) {\n  if (colorMode !== 'auto' && contrastMode !== 'auto') {\n    return undefined;\n  }\n  var setColorMode = colorMode === 'auto' ? \"\\n  try {\\n    const darkModeMql = window.matchMedia('\".concat(darkModeMediaQuery, \"');\\n    const colorMode = darkModeMql.matches ? 'dark' : 'light';\\n    document.documentElement.setAttribute('\").concat(COLOR_MODE_ATTRIBUTE, \"', colorMode);\\n  } catch (e) {}\") : '';\n  var setContrastMode = getBooleanFF('platform.design-system-team.increased-contrast-themes') && contrastMode === 'auto' ? \"\\n  try {\\n    const contrastModeMql = window.matchMedia('\".concat(moreContrastMediaQuery, \"');\\n    const contrastMode = contrastModeMql.matches ? 'more' : 'no-preference';\\n    document.documentElement.setAttribute('\").concat(CONTRAST_MODE_ATTRIBUTE, \"', contrastMode);\\n  } catch (e) {}\") : '';\n  return \"(() => {\".concat(setColorMode).concat(setContrastMode, \"})()\");\n};\nexport default getSSRAutoScript;","map":{"version":3,"names":["getBooleanFF","COLOR_MODE_ATTRIBUTE","CONTRAST_MODE_ATTRIBUTE","darkModeMediaQuery","moreContrastMediaQuery","getSSRAutoScript","colorMode","contrastMode","undefined","setColorMode","concat","setContrastMode"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/get-ssr-auto-script.js"],"sourcesContent":["import { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport { COLOR_MODE_ATTRIBUTE, CONTRAST_MODE_ATTRIBUTE } from './constants';\nimport { darkModeMediaQuery, moreContrastMediaQuery } from './utils/theme-loading';\n\n/**\n * Provides a script that, when executed before paint, sets the `data-color-mode` attribute based on the current system theme,\n * to enable SSR support for automatic theme switching, avoid a flash of un-themed content on first paint.\n *\n * @param {string} colorMode Determines which color theme is applied. If set to `auto`, the theme applied will be determined by the OS setting.\n *\n * @returns {string} A string to be added to the innerHTML of a script tag in the document head\n */\nvar getSSRAutoScript = function getSSRAutoScript(colorMode, contrastMode) {\n  if (colorMode !== 'auto' && contrastMode !== 'auto') {\n    return undefined;\n  }\n  var setColorMode = colorMode === 'auto' ? \"\\n  try {\\n    const darkModeMql = window.matchMedia('\".concat(darkModeMediaQuery, \"');\\n    const colorMode = darkModeMql.matches ? 'dark' : 'light';\\n    document.documentElement.setAttribute('\").concat(COLOR_MODE_ATTRIBUTE, \"', colorMode);\\n  } catch (e) {}\") : '';\n  var setContrastMode = getBooleanFF('platform.design-system-team.increased-contrast-themes') && contrastMode === 'auto' ? \"\\n  try {\\n    const contrastModeMql = window.matchMedia('\".concat(moreContrastMediaQuery, \"');\\n    const contrastMode = contrastModeMql.matches ? 'more' : 'no-preference';\\n    document.documentElement.setAttribute('\").concat(CONTRAST_MODE_ATTRIBUTE, \"', contrastMode);\\n  } catch (e) {}\") : '';\n  return \"(() => {\".concat(setColorMode).concat(setContrastMode, \"})()\");\n};\nexport default getSSRAutoScript;"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,oBAAoB,EAAEC,uBAAuB,QAAQ,aAAa;AAC3E,SAASC,kBAAkB,EAAEC,sBAAsB,QAAQ,uBAAuB;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,SAAS,EAAEC,YAAY,EAAE;EACxE,IAAID,SAAS,KAAK,MAAM,IAAIC,YAAY,KAAK,MAAM,EAAE;IACnD,OAAOC,SAAS;EAClB;EACA,IAAIC,YAAY,GAAGH,SAAS,KAAK,MAAM,GAAG,wDAAwD,CAACI,MAAM,CAACP,kBAAkB,EAAE,iHAAiH,CAAC,CAACO,MAAM,CAACT,oBAAoB,EAAE,kCAAkC,CAAC,GAAG,EAAE;EACtT,IAAIU,eAAe,GAAGX,YAAY,CAAC,uDAAuD,CAAC,IAAIO,YAAY,KAAK,MAAM,GAAG,4DAA4D,CAACG,MAAM,CAACN,sBAAsB,EAAE,gIAAgI,CAAC,CAACM,MAAM,CAACR,uBAAuB,EAAE,qCAAqC,CAAC,GAAG,EAAE;EACla,OAAO,UAAU,CAACQ,MAAM,CAACD,YAAY,CAAC,CAACC,MAAM,CAACC,eAAe,EAAE,MAAM,CAAC;AACxE,CAAC;AACD,eAAeN,gBAAgB"},"metadata":{},"sourceType":"module"}