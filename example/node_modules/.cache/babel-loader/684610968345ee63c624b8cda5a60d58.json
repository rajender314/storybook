{"ast":null,"code":"export const cloneElements = (fromEl, id) => {\n  const fragment = document.createElement('div');\n  let el = fromEl;\n  while (el = el.nextSibling) {\n    if (el.dataset && el.dataset.lazyEnd === id) break; // cloneNode is 50% faster than outerHTML/textContent\n\n    fragment.appendChild(el.cloneNode(true));\n  }\n  return Array.from(fragment.childNodes);\n};","map":{"version":3,"names":["cloneElements","fromEl","id","fragment","document","createElement","el","nextSibling","dataset","lazyEnd","appendChild","cloneNode","Array","from","childNodes"],"sources":["../../../src/collect/render.ts"],"sourcesContent":["export const cloneElements = (\n  fromEl: HTMLInputElement,\n  id: string | undefined\n) => {\n  const fragment = document.createElement('div');\n  let el: (ChildNode & { readonly dataset?: DOMStringMap }) | null = fromEl;\n  while ((el = el.nextSibling)) {\n    if (el.dataset && el.dataset.lazyEnd === id) break;\n    // cloneNode is 50% faster than outerHTML/textContent\n    fragment.appendChild(el.cloneNode(true));\n  }\n\n  return Array.from(fragment.childNodes);\n};\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGA,CAC3BC,MAD2B,EAE3BC,EAF2B,KAGxB;EACH,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;EACA,IAAIC,EAA4D,GAAGL,MAAnE;EACA,OAAQK,EAAE,GAAGA,EAAE,CAACC,WAAhB,EAA8B;IAC5B,IAAID,EAAE,CAACE,OAAH,IAAcF,EAAE,CAACE,OAAH,CAAWC,OAAX,KAAuBP,EAAzC,EAA6C,MADjB,CAE5B;;IACAC,QAAQ,CAACO,WAAT,CAAqBJ,EAAE,CAACK,SAAH,CAAa,IAAb,CAArB;EACD;EAED,OAAOC,KAAK,CAACC,IAAN,CAAWV,QAAQ,CAACW,UAApB,CAAP;AACD,CAbM"},"metadata":{},"sourceType":"module"}