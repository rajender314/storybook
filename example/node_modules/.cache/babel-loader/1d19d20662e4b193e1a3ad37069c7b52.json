{"ast":null,"code":"import { useCallback, useEffect, useRef } from 'react';\nimport { bindAll } from 'bind-event-listener';\nimport { ESCAPE } from '../utils/keycodes';\n/**\n * Calls back when the escape key is pressed.\n * To be used exclusively for closing layered components.\n * Use the `isDisabled` argument to ignore closing events.\n *\n * ```js\n * useCloseOnEscapePress({\n *   onClose: () => {},\n *   isDisabled: false,\n * });\n * ```\n */\nexport default function useCloseOnEscapePress(_ref) {\n  var onClose = _ref.onClose,\n    isDisabled = _ref.isDisabled;\n  var escapePressed = useRef(false);\n  var onKeyDown = useCallback(function (e) {\n    if (isDisabled || escapePressed.current || e.key !== ESCAPE) {\n      // We're either already handling the key down event or it's not escape.\n      // Bail early!\n      return;\n    }\n    escapePressed.current = true;\n    onClose(e);\n  }, [onClose, isDisabled]);\n  var onKeyUp = useCallback(function () {\n    escapePressed.current = false;\n  }, []);\n  useEffect(function () {\n    return bindAll(document, [{\n      type: 'keydown',\n      listener: onKeyDown\n    }, {\n      type: 'keyup',\n      listener: onKeyUp\n    }], {\n      capture: false\n    });\n  }, [onKeyDown, onKeyUp]);\n}","map":{"version":3,"names":["useCallback","useEffect","useRef","bindAll","ESCAPE","useCloseOnEscapePress","_ref","onClose","isDisabled","escapePressed","onKeyDown","e","current","key","onKeyUp","document","type","listener","capture"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-close-on-escape-press.js"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { bindAll } from 'bind-event-listener';\nimport { ESCAPE } from '../utils/keycodes';\n/**\n * Calls back when the escape key is pressed.\n * To be used exclusively for closing layered components.\n * Use the `isDisabled` argument to ignore closing events.\n *\n * ```js\n * useCloseOnEscapePress({\n *   onClose: () => {},\n *   isDisabled: false,\n * });\n * ```\n */\nexport default function useCloseOnEscapePress(_ref) {\n  var onClose = _ref.onClose,\n    isDisabled = _ref.isDisabled;\n  var escapePressed = useRef(false);\n  var onKeyDown = useCallback(function (e) {\n    if (isDisabled || escapePressed.current || e.key !== ESCAPE) {\n      // We're either already handling the key down event or it's not escape.\n      // Bail early!\n      return;\n    }\n    escapePressed.current = true;\n    onClose(e);\n  }, [onClose, isDisabled]);\n  var onKeyUp = useCallback(function () {\n    escapePressed.current = false;\n  }, []);\n  useEffect(function () {\n    return bindAll(document, [{\n      type: 'keydown',\n      listener: onKeyDown\n    }, {\n      type: 'keyup',\n      listener: onKeyUp\n    }], {\n      capture: false\n    });\n  }, [onKeyDown, onKeyUp]);\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACtD,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,MAAM,QAAQ,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,qBAAqBA,CAACC,IAAI,EAAE;EAClD,IAAIC,OAAO,GAAGD,IAAI,CAACC,OAAO;IACxBC,UAAU,GAAGF,IAAI,CAACE,UAAU;EAC9B,IAAIC,aAAa,GAAGP,MAAM,CAAC,KAAK,CAAC;EACjC,IAAIQ,SAAS,GAAGV,WAAW,CAAC,UAAUW,CAAC,EAAE;IACvC,IAAIH,UAAU,IAAIC,aAAa,CAACG,OAAO,IAAID,CAAC,CAACE,GAAG,KAAKT,MAAM,EAAE;MAC3D;MACA;MACA;IACF;IACAK,aAAa,CAACG,OAAO,GAAG,IAAI;IAC5BL,OAAO,CAACI,CAAC,CAAC;EACZ,CAAC,EAAE,CAACJ,OAAO,EAAEC,UAAU,CAAC,CAAC;EACzB,IAAIM,OAAO,GAAGd,WAAW,CAAC,YAAY;IACpCS,aAAa,CAACG,OAAO,GAAG,KAAK;EAC/B,CAAC,EAAE,EAAE,CAAC;EACNX,SAAS,CAAC,YAAY;IACpB,OAAOE,OAAO,CAACY,QAAQ,EAAE,CAAC;MACxBC,IAAI,EAAE,SAAS;MACfC,QAAQ,EAAEP;IACZ,CAAC,EAAE;MACDM,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAEH;IACZ,CAAC,CAAC,EAAE;MACFI,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,CAACR,SAAS,EAAEI,OAAO,CAAC,CAAC;AAC1B"},"metadata":{},"sourceType":"module"}