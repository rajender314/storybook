{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"children\"];\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n/** @jsx jsx */\nimport { createContext, Fragment, useContext } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport invariant from 'tiny-invariant';\nimport { bodyTextStylesMap, inverseColorMap, textColorStylesMap, uiTextStylesMap } from '../xcss/style-maps.partial';\nimport { useSurface } from './internal/surface-provider';\nvar asAllowlist = ['span', 'p', 'strong', 'em'];\n// We're doing this because our CSS reset can add top margins to elements such as `p` which is totally insane.\n// Long term we should remove those instances from the reset - it should be a reset to 0.\n// For now, at least we know <Text> will be unaffected by this.\nvar resetStyles = css({\n  margin: 0\n});\nvar variantStyles = _objectSpread(_objectSpread({}, bodyTextStylesMap), uiTextStylesMap);\nvar strongStyles = css({\n  fontWeight: \"var(--ds-font-weight-bold, bold)\"\n});\nvar emStyles = css({\n  fontStyle: 'italic'\n});\nvar textAlignMap = {\n  center: css({\n    textAlign: 'center'\n  }),\n  end: css({\n    textAlign: 'end'\n  }),\n  start: css({\n    textAlign: 'start'\n  })\n};\nvar truncateStyles = css({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n});\n\n/**\n * Custom hook designed to abstract the parsing of the color props and make it clearer in the future how color is reconciled between themes and tokens.\n */\nvar useColor = function useColor(colorProp) {\n  var surface = useSurface();\n  var inverseTextColor = inverseColorMap[surface];\n\n  /**\n   * Where the color of the surface is inverted we override the user choice\n   * as there is no valid choice that is not covered by the override.\n   */\n  var color = inverseTextColor !== null && inverseTextColor !== void 0 ? inverseTextColor : colorProp;\n  return color;\n};\nvar HasTextAncestorContext = /*#__PURE__*/createContext(false);\nvar useHasTextAncestor = function useHasTextAncestor() {\n  return useContext(HasTextAncestorContext);\n};\n\n/**\n * __Text__\n *\n * Text is a primitive component that has the Atlassian Design System's design guidelines baked in.\n * This includes considerations for text attributes such as color, font size, font weight, and line height.\n * It renders a `span` by default.\n *\n * @internal\n */\nvar Text = function Text(_ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var asElement = props.as,\n    colorProp = props.color,\n    _props$shouldTruncate = props.shouldTruncate,\n    shouldTruncate = _props$shouldTruncate === void 0 ? false : _props$shouldTruncate,\n    textAlign = props.textAlign,\n    testId = props.testId,\n    id = props.id,\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'body' : _props$variant;\n  var Component = asElement;\n  if (!Component) {\n    if (variant.includes('body')) {\n      Component = 'p';\n    } else {\n      // ui text and default => span\n      Component = 'span';\n    }\n  }\n  invariant(asAllowlist.includes(Component), \"@atlaskit/primitives: Text received an invalid \\\"as\\\" value of \\\"\".concat(Component, \"\\\"\"));\n  var color = useColor(colorProp);\n  var isWrapped = useHasTextAncestor();\n\n  /**\n   * If the text is already wrapped and applies no props we can just\n   * render the children directly as a fragment.\n   */\n  if (isWrapped && Object.keys(props).length === 0) {\n    return jsx(Fragment, null, children);\n  }\n  var component = jsx(Component, {\n    css: [resetStyles, variant && variantStyles[variant], color && textColorStylesMap[color], shouldTruncate && truncateStyles, textAlign && textAlignMap[textAlign], asElement === 'em' && emStyles, asElement === 'strong' && strongStyles],\n    \"data-testid\": testId,\n    id: id\n  }, children);\n  return isWrapped ?\n  // no need to re-apply context if the text is already wrapped\n  component : jsx(HasTextAncestorContext.Provider, {\n    value: true\n  }, component);\n};\nexport default Text;","map":{"version":3,"names":["_objectWithoutProperties","_defineProperty","_excluded","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","createContext","Fragment","useContext","css","jsx","invariant","bodyTextStylesMap","inverseColorMap","textColorStylesMap","uiTextStylesMap","useSurface","asAllowlist","resetStyles","margin","variantStyles","strongStyles","fontWeight","emStyles","fontStyle","textAlignMap","center","textAlign","end","start","truncateStyles","overflow","textOverflow","whiteSpace","useColor","colorProp","surface","inverseTextColor","color","HasTextAncestorContext","useHasTextAncestor","Text","_ref","children","props","asElement","as","_props$shouldTruncate","shouldTruncate","testId","id","_props$variant","variant","Component","includes","concat","isWrapped","component","Provider","value"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/primitives/dist/esm/components/text.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"children\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/** @jsx jsx */\nimport { createContext, Fragment, useContext } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport invariant from 'tiny-invariant';\nimport { bodyTextStylesMap, inverseColorMap, textColorStylesMap, uiTextStylesMap } from '../xcss/style-maps.partial';\nimport { useSurface } from './internal/surface-provider';\nvar asAllowlist = ['span', 'p', 'strong', 'em'];\n// We're doing this because our CSS reset can add top margins to elements such as `p` which is totally insane.\n// Long term we should remove those instances from the reset - it should be a reset to 0.\n// For now, at least we know <Text> will be unaffected by this.\nvar resetStyles = css({\n  margin: 0\n});\nvar variantStyles = _objectSpread(_objectSpread({}, bodyTextStylesMap), uiTextStylesMap);\nvar strongStyles = css({\n  fontWeight: \"var(--ds-font-weight-bold, bold)\"\n});\nvar emStyles = css({\n  fontStyle: 'italic'\n});\nvar textAlignMap = {\n  center: css({\n    textAlign: 'center'\n  }),\n  end: css({\n    textAlign: 'end'\n  }),\n  start: css({\n    textAlign: 'start'\n  })\n};\nvar truncateStyles = css({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n});\n\n/**\n * Custom hook designed to abstract the parsing of the color props and make it clearer in the future how color is reconciled between themes and tokens.\n */\nvar useColor = function useColor(colorProp) {\n  var surface = useSurface();\n  var inverseTextColor = inverseColorMap[surface];\n\n  /**\n   * Where the color of the surface is inverted we override the user choice\n   * as there is no valid choice that is not covered by the override.\n   */\n  var color = inverseTextColor !== null && inverseTextColor !== void 0 ? inverseTextColor : colorProp;\n  return color;\n};\nvar HasTextAncestorContext = /*#__PURE__*/createContext(false);\nvar useHasTextAncestor = function useHasTextAncestor() {\n  return useContext(HasTextAncestorContext);\n};\n\n/**\n * __Text__\n *\n * Text is a primitive component that has the Atlassian Design System's design guidelines baked in.\n * This includes considerations for text attributes such as color, font size, font weight, and line height.\n * It renders a `span` by default.\n *\n * @internal\n */\nvar Text = function Text(_ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var asElement = props.as,\n    colorProp = props.color,\n    _props$shouldTruncate = props.shouldTruncate,\n    shouldTruncate = _props$shouldTruncate === void 0 ? false : _props$shouldTruncate,\n    textAlign = props.textAlign,\n    testId = props.testId,\n    id = props.id,\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'body' : _props$variant;\n  var Component = asElement;\n  if (!Component) {\n    if (variant.includes('body')) {\n      Component = 'p';\n    } else {\n      // ui text and default => span\n      Component = 'span';\n    }\n  }\n  invariant(asAllowlist.includes(Component), \"@atlaskit/primitives: Text received an invalid \\\"as\\\" value of \\\"\".concat(Component, \"\\\"\"));\n  var color = useColor(colorProp);\n  var isWrapped = useHasTextAncestor();\n\n  /**\n   * If the text is already wrapped and applies no props we can just\n   * render the children directly as a fragment.\n   */\n  if (isWrapped && Object.keys(props).length === 0) {\n    return jsx(Fragment, null, children);\n  }\n  var component = jsx(Component, {\n    css: [resetStyles, variant && variantStyles[variant], color && textColorStylesMap[color], shouldTruncate && truncateStyles, textAlign && textAlignMap[textAlign], asElement === 'em' && emStyles, asElement === 'strong' && strongStyles],\n    \"data-testid\": testId,\n    id: id\n  }, children);\n  return isWrapped ?\n  // no need to re-apply context if the text is already wrapped\n  component : jsx(HasTextAncestorContext.Provider, {\n    value: true\n  }, component);\n};\nexport default Text;"],"mappings":"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"},"metadata":{},"sourceType":"module"}