{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"href\", \"children\", \"backgroundColor\", \"padding\", \"paddingBlock\", \"paddingBlockStart\", \"paddingBlockEnd\", \"paddingInline\", \"paddingInlineStart\", \"paddingInlineEnd\", \"testId\", \"xcss\", \"target\", \"rel\"];\nimport React, { forwardRef } from 'react';\nimport invariant from 'tiny-invariant';\nimport { useRouterLink } from '@atlaskit/app-provider';\nimport { xcss } from '../xcss/xcss';\nimport Box from './box';\n// TODO: Duplicated FocusRing styles due to lack of `xcss` support\n// and to prevent additional dependency\nvar baseFocusRingStyles = {\n  outlineColor: 'color.border.focused',\n  outlineWidth: 'border.width.outline',\n  outlineStyle: 'solid',\n  outlineOffset: 'space.025'\n};\nvar focusRingStyles = xcss({\n  ':focus-visible': baseFocusRingStyles,\n  '@supports not selector(*:focus-visible)': {\n    ':focus': baseFocusRingStyles\n  },\n  '@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)': {\n    ':focus-visible': {\n      outline: '1px solid'\n    }\n  }\n});\nvar IS_EXTERNAL_LINK_REGEX = /^(?:(http|https):\\/\\/)/;\nvar IS_NON_HTTP_BASED = /^(((mailto|tel|sms):)|(#))/;\nvar Link = function Link(_ref, ref) {\n  var href = _ref.href,\n    children = _ref.children,\n    backgroundColor = _ref.backgroundColor,\n    padding = _ref.padding,\n    paddingBlock = _ref.paddingBlock,\n    paddingBlockStart = _ref.paddingBlockStart,\n    paddingBlockEnd = _ref.paddingBlockEnd,\n    paddingInline = _ref.paddingInline,\n    paddingInlineStart = _ref.paddingInlineStart,\n    paddingInlineEnd = _ref.paddingInlineEnd,\n    testId = _ref.testId,\n    xcssStyles = _ref.xcss,\n    target = _ref.target,\n    rel = _ref.rel,\n    htmlAttributes = _objectWithoutProperties(_ref, _excluded);\n  var RouterLink = useRouterLink();\n\n  // Combine default styles with supplied styles. XCSS does not support deep nested arrays\n  var styles = Array.isArray(xcssStyles) ? [focusRingStyles].concat(_toConsumableArray(xcssStyles)) : [focusRingStyles, xcssStyles];\n  var isExternal = typeof href === 'string' && IS_EXTERNAL_LINK_REGEX.test(href);\n  var isNonHttpBased = typeof href === 'string' && IS_NON_HTTP_BASED.test(href);\n\n  /**\n   * Renders a router link if:\n   * - a link component is set in the app provider\n   * - it's not an external link (starting with http:// or https://)\n   * - it's not a non-HTTP-based link (e.g. emails, phone numbers, hash links etc.)\n   */\n  var isRouterLink = RouterLink && !isExternal && !isNonHttpBased;\n  var hrefObjectUsedWithoutRouterLink = RouterLink === undefined && _typeof(href) === 'object';\n  invariant(!hrefObjectUsedWithoutRouterLink, \"@atlaskit/primitives: Link primitive cannot pass an object to 'href' unless a router link is configured in the AppProvider\");\n  return /*#__PURE__*/React.createElement(Box\n  // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props\n  , _extends({}, htmlAttributes, {\n    // @ts-expect-error (TODO: Box doesn't allow `as` components)\n    as: isRouterLink ? RouterLink : 'a',\n    ref: ref,\n    testId: testId,\n    \"data-is-router-link\": testId ? isRouterLink ? 'true' : 'false' : undefined,\n    href: !isRouterLink && typeof href !== 'string' ? undefined : href,\n    target: isExternal && target === undefined ? '_blank' : target,\n    rel: isExternal && rel === undefined ? 'noopener noreferrer' : rel,\n    backgroundColor: backgroundColor,\n    padding: padding,\n    paddingBlock: paddingBlock,\n    paddingBlockStart: paddingBlockStart,\n    paddingBlockEnd: paddingBlockEnd,\n    paddingInline: paddingInline,\n    paddingInlineStart: paddingInlineStart,\n    paddingInlineEnd: paddingInlineEnd\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    ,\n\n    xcss: styles\n  }), children);\n};\n\n// Workarounds to support generic types with forwardRef\n/**\n * __UNSAFE_LINK__\n *\n * @internal Still under development. Do not use.\n *\n * A Link is a primitive component that renders an `<a>` anchor. It utilizes\n * the configured router link component in the AppProvider if set.\n *\n * - [Examples](https://atlassian.design/components/primitives/link/examples)\n * - [Code](https://atlassian.design/components/primitives/link/code)\n * - [Usage](https://atlassian.design/components/primitives/link/usage)\n */\nvar UNSAFE_LINK = /*#__PURE__*/forwardRef(Link);\nexport default UNSAFE_LINK;","map":{"version":3,"names":["_extends","_typeof","_toConsumableArray","_objectWithoutProperties","_excluded","React","forwardRef","invariant","useRouterLink","xcss","Box","baseFocusRingStyles","outlineColor","outlineWidth","outlineStyle","outlineOffset","focusRingStyles","outline","IS_EXTERNAL_LINK_REGEX","IS_NON_HTTP_BASED","Link","_ref","ref","href","children","backgroundColor","padding","paddingBlock","paddingBlockStart","paddingBlockEnd","paddingInline","paddingInlineStart","paddingInlineEnd","testId","xcssStyles","target","rel","htmlAttributes","RouterLink","styles","Array","isArray","concat","isExternal","test","isNonHttpBased","isRouterLink","hrefObjectUsedWithoutRouterLink","undefined","createElement","as","UNSAFE_LINK"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/primitives/dist/esm/components/link.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"href\", \"children\", \"backgroundColor\", \"padding\", \"paddingBlock\", \"paddingBlockStart\", \"paddingBlockEnd\", \"paddingInline\", \"paddingInlineStart\", \"paddingInlineEnd\", \"testId\", \"xcss\", \"target\", \"rel\"];\nimport React, { forwardRef } from 'react';\nimport invariant from 'tiny-invariant';\nimport { useRouterLink } from '@atlaskit/app-provider';\nimport { xcss } from '../xcss/xcss';\nimport Box from './box';\n// TODO: Duplicated FocusRing styles due to lack of `xcss` support\n// and to prevent additional dependency\nvar baseFocusRingStyles = {\n  outlineColor: 'color.border.focused',\n  outlineWidth: 'border.width.outline',\n  outlineStyle: 'solid',\n  outlineOffset: 'space.025'\n};\nvar focusRingStyles = xcss({\n  ':focus-visible': baseFocusRingStyles,\n  '@supports not selector(*:focus-visible)': {\n    ':focus': baseFocusRingStyles\n  },\n  '@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)': {\n    ':focus-visible': {\n      outline: '1px solid'\n    }\n  }\n});\nvar IS_EXTERNAL_LINK_REGEX = /^(?:(http|https):\\/\\/)/;\nvar IS_NON_HTTP_BASED = /^(((mailto|tel|sms):)|(#))/;\nvar Link = function Link(_ref, ref) {\n  var href = _ref.href,\n    children = _ref.children,\n    backgroundColor = _ref.backgroundColor,\n    padding = _ref.padding,\n    paddingBlock = _ref.paddingBlock,\n    paddingBlockStart = _ref.paddingBlockStart,\n    paddingBlockEnd = _ref.paddingBlockEnd,\n    paddingInline = _ref.paddingInline,\n    paddingInlineStart = _ref.paddingInlineStart,\n    paddingInlineEnd = _ref.paddingInlineEnd,\n    testId = _ref.testId,\n    xcssStyles = _ref.xcss,\n    target = _ref.target,\n    rel = _ref.rel,\n    htmlAttributes = _objectWithoutProperties(_ref, _excluded);\n  var RouterLink = useRouterLink();\n\n  // Combine default styles with supplied styles. XCSS does not support deep nested arrays\n  var styles = Array.isArray(xcssStyles) ? [focusRingStyles].concat(_toConsumableArray(xcssStyles)) : [focusRingStyles, xcssStyles];\n  var isExternal = typeof href === 'string' && IS_EXTERNAL_LINK_REGEX.test(href);\n  var isNonHttpBased = typeof href === 'string' && IS_NON_HTTP_BASED.test(href);\n\n  /**\n   * Renders a router link if:\n   * - a link component is set in the app provider\n   * - it's not an external link (starting with http:// or https://)\n   * - it's not a non-HTTP-based link (e.g. emails, phone numbers, hash links etc.)\n   */\n  var isRouterLink = RouterLink && !isExternal && !isNonHttpBased;\n  var hrefObjectUsedWithoutRouterLink = RouterLink === undefined && _typeof(href) === 'object';\n  invariant(!hrefObjectUsedWithoutRouterLink, \"@atlaskit/primitives: Link primitive cannot pass an object to 'href' unless a router link is configured in the AppProvider\");\n  return /*#__PURE__*/React.createElement(Box\n  // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props\n  , _extends({}, htmlAttributes, {\n    // @ts-expect-error (TODO: Box doesn't allow `as` components)\n    as: isRouterLink ? RouterLink : 'a',\n    ref: ref,\n    testId: testId,\n    \"data-is-router-link\": testId ? isRouterLink ? 'true' : 'false' : undefined,\n    href: !isRouterLink && typeof href !== 'string' ? undefined : href,\n    target: isExternal && target === undefined ? '_blank' : target,\n    rel: isExternal && rel === undefined ? 'noopener noreferrer' : rel,\n    backgroundColor: backgroundColor,\n    padding: padding,\n    paddingBlock: paddingBlock,\n    paddingBlockStart: paddingBlockStart,\n    paddingBlockEnd: paddingBlockEnd,\n    paddingInline: paddingInline,\n    paddingInlineStart: paddingInlineStart,\n    paddingInlineEnd: paddingInlineEnd\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    ,\n    xcss: styles\n  }), children);\n};\n\n// Workarounds to support generic types with forwardRef\n/**\n * __UNSAFE_LINK__\n *\n * @internal Still under development. Do not use.\n *\n * A Link is a primitive component that renders an `<a>` anchor. It utilizes\n * the configured router link component in the AppProvider if set.\n *\n * - [Examples](https://atlassian.design/components/primitives/link/examples)\n * - [Code](https://atlassian.design/components/primitives/link/code)\n * - [Usage](https://atlassian.design/components/primitives/link/usage)\n */\nvar UNSAFE_LINK = /*#__PURE__*/forwardRef(Link);\nexport default UNSAFE_LINK;"],"mappings":"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"},"metadata":{},"sourceType":"module"}