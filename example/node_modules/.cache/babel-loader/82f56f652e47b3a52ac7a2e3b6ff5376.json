{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"component\", \"elemBefore\", \"elemAfter\", \"shouldTitleWrap\", \"shouldDescriptionWrap\", \"children\"];\nimport React, { forwardRef } from 'react';\nimport mergeRefs from '@atlaskit/ds-lib/merge-refs';\nimport ButtonItem from '@atlaskit/menu/button-item';\nimport CustomItem from '@atlaskit/menu/custom-item';\nimport LinkItem from '@atlaskit/menu/link-item';\nimport useRegisterItemWithFocusManager from './internal/hooks/use-register-item-with-focus-manager';\n/**\n * __Dropdown menu item__\n *\n * A dropdown item populates the dropdown menu with items. Every item should be inside a dropdown item group.\n *\n * - [Examples](https://atlassian.design/components/dropdown-item/examples)\n * - [Code](https://atlassian.design/components/dropdown-item/code)\n * - [Usage](https://atlassian.design/components/dropdown-item/usage)\n */\nvar DropdownMenuItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var component = props.component,\n    elemBefore = props.elemBefore,\n    elemAfter = props.elemAfter,\n    _props$shouldTitleWra = props.shouldTitleWrap,\n    shouldTitleWrap = _props$shouldTitleWra === void 0 ? true : _props$shouldTitleWra,\n    _props$shouldDescript = props.shouldDescriptionWrap,\n    shouldDescriptionWrap = _props$shouldDescript === void 0 ? true : _props$shouldDescript,\n    children = props.children,\n    rest = _objectWithoutProperties(props, _excluded);\n  var itemRef = useRegisterItemWithFocusManager();\n  if (component) {\n    return /*#__PURE__*/React.createElement(CustomItem, _extends({\n      component: component,\n      iconBefore: elemBefore,\n      iconAfter: elemAfter,\n      ref: mergeRefs([ref, itemRef]),\n      shouldTitleWrap: shouldTitleWrap,\n      shouldDescriptionWrap: shouldDescriptionWrap\n    }, rest), children);\n  } else if (props.href) {\n    return /*#__PURE__*/React.createElement(LinkItem, _extends({\n      href: props.href,\n      iconBefore: elemBefore,\n      iconAfter: elemAfter,\n      role: \"menuitem\",\n      ref: mergeRefs([ref, itemRef]),\n      shouldTitleWrap: shouldTitleWrap,\n      shouldDescriptionWrap: shouldDescriptionWrap\n    }, rest), children);\n  } else {\n    return /*#__PURE__*/React.createElement(ButtonItem, _extends({\n      role: \"menuitem\",\n      iconBefore: elemBefore,\n      iconAfter: elemAfter,\n      ref: mergeRefs([ref, itemRef]),\n      shouldTitleWrap: shouldTitleWrap,\n      shouldDescriptionWrap: shouldDescriptionWrap\n    }, rest), children);\n  }\n});\nexport default DropdownMenuItem;","map":{"version":3,"names":["_extends","_objectWithoutProperties","_excluded","React","forwardRef","mergeRefs","ButtonItem","CustomItem","LinkItem","useRegisterItemWithFocusManager","DropdownMenuItem","props","ref","component","elemBefore","elemAfter","_props$shouldTitleWra","shouldTitleWrap","_props$shouldDescript","shouldDescriptionWrap","children","rest","itemRef","createElement","iconBefore","iconAfter","href","role"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/dropdown-menu/dist/esm/dropdown-menu-item.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"component\", \"elemBefore\", \"elemAfter\", \"shouldTitleWrap\", \"shouldDescriptionWrap\", \"children\"];\nimport React, { forwardRef } from 'react';\nimport mergeRefs from '@atlaskit/ds-lib/merge-refs';\nimport ButtonItem from '@atlaskit/menu/button-item';\nimport CustomItem from '@atlaskit/menu/custom-item';\nimport LinkItem from '@atlaskit/menu/link-item';\nimport useRegisterItemWithFocusManager from './internal/hooks/use-register-item-with-focus-manager';\n/**\n * __Dropdown menu item__\n *\n * A dropdown item populates the dropdown menu with items. Every item should be inside a dropdown item group.\n *\n * - [Examples](https://atlassian.design/components/dropdown-item/examples)\n * - [Code](https://atlassian.design/components/dropdown-item/code)\n * - [Usage](https://atlassian.design/components/dropdown-item/usage)\n */\nvar DropdownMenuItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var component = props.component,\n    elemBefore = props.elemBefore,\n    elemAfter = props.elemAfter,\n    _props$shouldTitleWra = props.shouldTitleWrap,\n    shouldTitleWrap = _props$shouldTitleWra === void 0 ? true : _props$shouldTitleWra,\n    _props$shouldDescript = props.shouldDescriptionWrap,\n    shouldDescriptionWrap = _props$shouldDescript === void 0 ? true : _props$shouldDescript,\n    children = props.children,\n    rest = _objectWithoutProperties(props, _excluded);\n  var itemRef = useRegisterItemWithFocusManager();\n  if (component) {\n    return /*#__PURE__*/React.createElement(CustomItem, _extends({\n      component: component,\n      iconBefore: elemBefore,\n      iconAfter: elemAfter,\n      ref: mergeRefs([ref, itemRef]),\n      shouldTitleWrap: shouldTitleWrap,\n      shouldDescriptionWrap: shouldDescriptionWrap\n    }, rest), children);\n  } else if (props.href) {\n    return /*#__PURE__*/React.createElement(LinkItem, _extends({\n      href: props.href,\n      iconBefore: elemBefore,\n      iconAfter: elemAfter,\n      role: \"menuitem\",\n      ref: mergeRefs([ref, itemRef]),\n      shouldTitleWrap: shouldTitleWrap,\n      shouldDescriptionWrap: shouldDescriptionWrap\n    }, rest), children);\n  } else {\n    return /*#__PURE__*/React.createElement(ButtonItem, _extends({\n      role: \"menuitem\",\n      iconBefore: elemBefore,\n      iconAfter: elemAfter,\n      ref: mergeRefs([ref, itemRef]),\n      shouldTitleWrap: shouldTitleWrap,\n      shouldDescriptionWrap: shouldDescriptionWrap\n    }, rest), children);\n  }\n});\nexport default DropdownMenuItem;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,wBAAwB,MAAM,gDAAgD;AACrF,IAAIC,SAAS,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,UAAU,CAAC;AAChH,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,+BAA+B,MAAM,uDAAuD;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,gBAAgB,GAAG,aAAaN,UAAU,CAAC,UAAUO,KAAK,EAAEC,GAAG,EAAE;EACnE,IAAIC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC7BC,UAAU,GAAGH,KAAK,CAACG,UAAU;IAC7BC,SAAS,GAAGJ,KAAK,CAACI,SAAS;IAC3BC,qBAAqB,GAAGL,KAAK,CAACM,eAAe;IAC7CA,eAAe,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,qBAAqB;IACjFE,qBAAqB,GAAGP,KAAK,CAACQ,qBAAqB;IACnDA,qBAAqB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,qBAAqB;IACvFE,QAAQ,GAAGT,KAAK,CAACS,QAAQ;IACzBC,IAAI,GAAGpB,wBAAwB,CAACU,KAAK,EAAET,SAAS,CAAC;EACnD,IAAIoB,OAAO,GAAGb,+BAA+B,CAAC,CAAC;EAC/C,IAAII,SAAS,EAAE;IACb,OAAO,aAAaV,KAAK,CAACoB,aAAa,CAAChB,UAAU,EAAEP,QAAQ,CAAC;MAC3Da,SAAS,EAAEA,SAAS;MACpBW,UAAU,EAAEV,UAAU;MACtBW,SAAS,EAAEV,SAAS;MACpBH,GAAG,EAAEP,SAAS,CAAC,CAACO,GAAG,EAAEU,OAAO,CAAC,CAAC;MAC9BL,eAAe,EAAEA,eAAe;MAChCE,qBAAqB,EAAEA;IACzB,CAAC,EAAEE,IAAI,CAAC,EAAED,QAAQ,CAAC;EACrB,CAAC,MAAM,IAAIT,KAAK,CAACe,IAAI,EAAE;IACrB,OAAO,aAAavB,KAAK,CAACoB,aAAa,CAACf,QAAQ,EAAER,QAAQ,CAAC;MACzD0B,IAAI,EAAEf,KAAK,CAACe,IAAI;MAChBF,UAAU,EAAEV,UAAU;MACtBW,SAAS,EAAEV,SAAS;MACpBY,IAAI,EAAE,UAAU;MAChBf,GAAG,EAAEP,SAAS,CAAC,CAACO,GAAG,EAAEU,OAAO,CAAC,CAAC;MAC9BL,eAAe,EAAEA,eAAe;MAChCE,qBAAqB,EAAEA;IACzB,CAAC,EAAEE,IAAI,CAAC,EAAED,QAAQ,CAAC;EACrB,CAAC,MAAM;IACL,OAAO,aAAajB,KAAK,CAACoB,aAAa,CAACjB,UAAU,EAAEN,QAAQ,CAAC;MAC3D2B,IAAI,EAAE,UAAU;MAChBH,UAAU,EAAEV,UAAU;MACtBW,SAAS,EAAEV,SAAS;MACpBH,GAAG,EAAEP,SAAS,CAAC,CAACO,GAAG,EAAEU,OAAO,CAAC,CAAC;MAC9BL,eAAe,EAAEA,eAAe;MAChCE,qBAAqB,EAAEA;IACzB,CAAC,EAAEE,IAAI,CAAC,EAAED,QAAQ,CAAC;EACrB;AACF,CAAC,CAAC;AACF,eAAeV,gBAAgB"},"metadata":{},"sourceType":"module"}