{"ast":null,"code":"import { getAssetUrlsFromId } from '@react-loosely-lazy/manifest';\nimport { noopCleanup } from '../../cleanup';\nimport { getConfig } from '../../config';\nimport { isNodeEnvironment } from '../../utils';\nimport { PRIORITY } from '../constants';\nimport { insertLinkTag } from './utils';\nimport { GlobalReactLooselyLazyProfiler } from '../../profiler';\nexport function manifestPreloadStrategy({\n  moduleId,\n  rel\n}) {\n  const {\n    manifest\n  } = getConfig();\n  const assets = getAssetUrlsFromId(manifest, moduleId);\n  if (!assets) {\n    throw new Error('Unsupported preload strategy');\n  }\n  const cleanupLinkTags = assets.map(url => insertLinkTag(url, rel));\n  return () => {\n    for (const cleanupLinkTag of cleanupLinkTags) {\n      cleanupLinkTag();\n    }\n  };\n}\nconst fakePromise = {\n  then: () => fakePromise,\n  catch: () => fakePromise,\n  finally: () => fakePromise\n};\nexport function webpackPreloadStrategy({\n  loader,\n  rel\n}) {\n  if (typeof __webpack_require__ === 'undefined' || typeof __webpack_get_script_filename__ === 'undefined') throw new Error('Unsupported preload strategy'); // Replace requireEnsure to create link tags instead of scripts\n\n  const requireEnsure = __webpack_require__.e;\n  const cleanupLinkTags = [];\n  __webpack_require__.e = function requirePreload(chunkId) {\n    const href = __webpack_get_script_filename__(chunkId);\n    cleanupLinkTags.push(insertLinkTag(href, rel));\n    return fakePromise;\n  };\n  try {\n    loader();\n  } catch (err) {// Ignore any errors\n  } // Restore real webpack require ensure\n\n  __webpack_require__.e = requireEnsure;\n  return () => {\n    for (const cleanupLinkTag of cleanupLinkTags) {\n      cleanupLinkTag();\n    }\n  };\n}\nexport function loaderPreloadStrategy({\n  loader\n}) {\n  loader();\n  return noopCleanup;\n}\nexport function preloadAsset({\n  loader,\n  moduleId,\n  priority\n}) {\n  var _GlobalReactLooselyLa;\n  if (isNodeEnvironment()) return noopCleanup;\n  (_GlobalReactLooselyLa = GlobalReactLooselyLazyProfiler.current) == null ? void 0 : _GlobalReactLooselyLa.onPreload(moduleId, priority);\n  const rel = priority === PRIORITY.HIGH ? 'preload' : 'prefetch';\n  const preloadStrategies = [manifestPreloadStrategy, webpackPreloadStrategy, loaderPreloadStrategy];\n  for (const strategy of preloadStrategies) {\n    try {\n      return strategy({\n        loader,\n        moduleId,\n        rel\n      });\n    } catch (_) {// Try next strategy...\n    }\n  }\n  return noopCleanup;\n}","map":{"version":3,"names":["getAssetUrlsFromId","noopCleanup","getConfig","isNodeEnvironment","PRIORITY","insertLinkTag","GlobalReactLooselyLazyProfiler","manifestPreloadStrategy","moduleId","rel","manifest","assets","Error","cleanupLinkTags","map","url","cleanupLinkTag","fakePromise","then","catch","finally","webpackPreloadStrategy","loader","__webpack_require__","__webpack_get_script_filename__","requireEnsure","e","requirePreload","chunkId","href","push","err","loaderPreloadStrategy","preloadAsset","priority","_GlobalReactLooselyLa","current","onPreload","HIGH","preloadStrategies","strategy","_"],"sources":["../../../../src/lazy/preload/index.ts"],"sourcesContent":["import { getAssetUrlsFromId } from '@react-loosely-lazy/manifest';\n\nimport { noopCleanup } from '../../cleanup';\nimport type { Cleanup } from '../../cleanup';\nimport { getConfig } from '../../config';\nimport { isNodeEnvironment } from '../../utils';\n\nimport { PRIORITY } from '../constants';\nimport { Loader } from '../loader';\nimport { PreloadPriority } from '../types';\n\nimport { insertLinkTag } from './utils';\nimport { GlobalReactLooselyLazyProfiler } from '../../profiler';\n\ndeclare const __webpack_require__: any;\ndeclare function __webpack_get_script_filename__(chunkId: string): string;\n\nexport type { Cleanup };\n\ntype PreloadStrategyOptions = {\n  loader: Loader<unknown>;\n  moduleId: string;\n  rel: string;\n};\n\nexport function manifestPreloadStrategy({\n  moduleId,\n  rel,\n}: Pick<PreloadStrategyOptions, 'moduleId' | 'rel'>): Cleanup {\n  const { manifest } = getConfig();\n  const assets = getAssetUrlsFromId(manifest, moduleId);\n  if (!assets) {\n    throw new Error('Unsupported preload strategy');\n  }\n\n  const cleanupLinkTags = assets.map(url => insertLinkTag(url, rel));\n\n  return () => {\n    for (const cleanupLinkTag of cleanupLinkTags) {\n      cleanupLinkTag();\n    }\n  };\n}\n\nconst fakePromise = {\n  then: () => fakePromise,\n  catch: () => fakePromise,\n  finally: () => fakePromise,\n};\n\nexport function webpackPreloadStrategy({\n  loader,\n  rel,\n}: Pick<PreloadStrategyOptions, 'loader' | 'rel'>): Cleanup {\n  if (\n    typeof __webpack_require__ === 'undefined' ||\n    typeof __webpack_get_script_filename__ === 'undefined'\n  )\n    throw new Error('Unsupported preload strategy');\n\n  // Replace requireEnsure to create link tags instead of scripts\n  const requireEnsure = __webpack_require__.e;\n  const cleanupLinkTags: Cleanup[] = [];\n  __webpack_require__.e = function requirePreload(chunkId: string) {\n    const href = __webpack_get_script_filename__(chunkId);\n    cleanupLinkTags.push(insertLinkTag(href, rel));\n\n    return fakePromise;\n  };\n\n  try {\n    loader();\n  } catch (err) {\n    // Ignore any errors\n  }\n\n  // Restore real webpack require ensure\n  __webpack_require__.e = requireEnsure;\n\n  return () => {\n    for (const cleanupLinkTag of cleanupLinkTags) {\n      cleanupLinkTag();\n    }\n  };\n}\n\nexport function loaderPreloadStrategy({\n  loader,\n}: Pick<PreloadStrategyOptions, 'loader'>): Cleanup {\n  loader();\n\n  return noopCleanup;\n}\n\nexport type PreloadAssetOptions = {\n  loader: Loader<unknown>;\n  moduleId: string;\n  priority?: PreloadPriority;\n};\n\nexport function preloadAsset({\n  loader,\n  moduleId,\n  priority,\n}: PreloadAssetOptions): Cleanup {\n  if (isNodeEnvironment()) return noopCleanup;\n\n  GlobalReactLooselyLazyProfiler.current?.onPreload(moduleId, priority);\n\n  const rel = priority === PRIORITY.HIGH ? 'preload' : 'prefetch';\n  const preloadStrategies = [\n    manifestPreloadStrategy,\n    webpackPreloadStrategy,\n    loaderPreloadStrategy,\n  ];\n\n  for (const strategy of preloadStrategies) {\n    try {\n      return strategy({ loader, moduleId, rel });\n    } catch (_) {\n      // Try next strategy...\n    }\n  }\n\n  return noopCleanup;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}