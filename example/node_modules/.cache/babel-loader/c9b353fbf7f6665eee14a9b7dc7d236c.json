{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n/* eslint-disable @repo/internal/styles/no-exported-styles */\n/** @jsx jsx */\nimport { forwardRef, memo } from 'react';\nimport { jsx } from '@emotion/react';\nimport { xcss } from '../xcss/xcss';\nimport Flex from './flex';\nvar flexGrowMap = {\n  hug: xcss({\n    flexGrow: 0\n  }),\n  fill: xcss({\n    width: '100%',\n    flexGrow: 1\n  })\n};\n\n/**\n * __Stack__\n *\n * Stack is a primitive component based on flexbox that manages the block layout of direct children.\n *\n * @example\n * ```tsx\n *  <Stack>\n *    <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *    <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *  </Stack>\n * ```\n *\n */\nvar Stack = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var as = _ref.as,\n    alignItems = _ref.alignInline,\n    _ref$alignBlock = _ref.alignBlock,\n    alignBlock = _ref$alignBlock === void 0 ? 'stretch' : _ref$alignBlock,\n    spread = _ref.spread,\n    grow = _ref.grow,\n    space = _ref.space,\n    children = _ref.children,\n    testId = _ref.testId,\n    xcss = _ref.xcss;\n  var justifyContent = spread || alignBlock;\n  return jsx(Flex, {\n    as: as,\n    gap: space,\n    direction: \"column\",\n    alignItems: alignItems,\n    justifyContent: justifyContent,\n    xcss: grow ? [flexGrowMap[grow]].concat(_toConsumableArray(Array.isArray(xcss) ? xcss : [xcss])) :\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    xcss,\n    testId: testId,\n    ref: ref\n  }, children);\n}));\nStack.displayName = 'Stack';\nexport default Stack;","map":{"version":3,"names":["_toConsumableArray","forwardRef","memo","jsx","xcss","Flex","flexGrowMap","hug","flexGrow","fill","width","Stack","_ref","ref","as","alignItems","alignInline","_ref$alignBlock","alignBlock","spread","grow","space","children","testId","justifyContent","gap","direction","concat","Array","isArray","displayName"],"sources":["/home/enterpi/Documents/iidm/pixel-kit/node_modules/@atlaskit/primitives/dist/esm/components/stack.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n/* eslint-disable @repo/internal/styles/no-exported-styles */\n/** @jsx jsx */\nimport { forwardRef, memo } from 'react';\nimport { jsx } from '@emotion/react';\nimport { xcss } from '../xcss/xcss';\nimport Flex from './flex';\nvar flexGrowMap = {\n  hug: xcss({\n    flexGrow: 0\n  }),\n  fill: xcss({\n    width: '100%',\n    flexGrow: 1\n  })\n};\n\n/**\n * __Stack__\n *\n * Stack is a primitive component based on flexbox that manages the block layout of direct children.\n *\n * @example\n * ```tsx\n *  <Stack>\n *    <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *    <Box padding=\"space.100\" backgroundColor=\"neutral\"></Box>\n *  </Stack>\n * ```\n *\n */\nvar Stack = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var as = _ref.as,\n    alignItems = _ref.alignInline,\n    _ref$alignBlock = _ref.alignBlock,\n    alignBlock = _ref$alignBlock === void 0 ? 'stretch' : _ref$alignBlock,\n    spread = _ref.spread,\n    grow = _ref.grow,\n    space = _ref.space,\n    children = _ref.children,\n    testId = _ref.testId,\n    xcss = _ref.xcss;\n  var justifyContent = spread || alignBlock;\n  return jsx(Flex, {\n    as: as,\n    gap: space,\n    direction: \"column\",\n    alignItems: alignItems,\n    justifyContent: justifyContent,\n    xcss: grow ? [flexGrowMap[grow]].concat(_toConsumableArray(Array.isArray(xcss) ? xcss : [xcss])) :\n    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage\n    xcss,\n    testId: testId,\n    ref: ref\n  }, children);\n}));\nStack.displayName = 'Stack';\nexport default Stack;"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,0CAA0C;AACzE;AACA;AACA,SAASC,UAAU,EAAEC,IAAI,QAAQ,OAAO;AACxC,SAASC,GAAG,QAAQ,gBAAgB;AACpC,SAASC,IAAI,QAAQ,cAAc;AACnC,OAAOC,IAAI,MAAM,QAAQ;AACzB,IAAIC,WAAW,GAAG;EAChBC,GAAG,EAAEH,IAAI,CAAC;IACRI,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFC,IAAI,EAAEL,IAAI,CAAC;IACTM,KAAK,EAAE,MAAM;IACbF,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,KAAK,GAAG,aAAaT,IAAI,EAAE,aAAaD,UAAU,CAAC,UAAUW,IAAI,EAAEC,GAAG,EAAE;EAC1E,IAAIC,EAAE,GAAGF,IAAI,CAACE,EAAE;IACdC,UAAU,GAAGH,IAAI,CAACI,WAAW;IAC7BC,eAAe,GAAGL,IAAI,CAACM,UAAU;IACjCA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGA,eAAe;IACrEE,MAAM,GAAGP,IAAI,CAACO,MAAM;IACpBC,IAAI,GAAGR,IAAI,CAACQ,IAAI;IAChBC,KAAK,GAAGT,IAAI,CAACS,KAAK;IAClBC,QAAQ,GAAGV,IAAI,CAACU,QAAQ;IACxBC,MAAM,GAAGX,IAAI,CAACW,MAAM;IACpBnB,IAAI,GAAGQ,IAAI,CAACR,IAAI;EAClB,IAAIoB,cAAc,GAAGL,MAAM,IAAID,UAAU;EACzC,OAAOf,GAAG,CAACE,IAAI,EAAE;IACfS,EAAE,EAAEA,EAAE;IACNW,GAAG,EAAEJ,KAAK;IACVK,SAAS,EAAE,QAAQ;IACnBX,UAAU,EAAEA,UAAU;IACtBS,cAAc,EAAEA,cAAc;IAC9BpB,IAAI,EAAEgB,IAAI,GAAG,CAACd,WAAW,CAACc,IAAI,CAAC,CAAC,CAACO,MAAM,CAAC3B,kBAAkB,CAAC4B,KAAK,CAACC,OAAO,CAACzB,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC,CAAC,CAAC;IAChG;IACAA,IAAI;IACJmB,MAAM,EAAEA,MAAM;IACdV,GAAG,EAAEA;EACP,CAAC,EAAES,QAAQ,CAAC;AACd,CAAC,CAAC,CAAC;AACHX,KAAK,CAACmB,WAAW,GAAG,OAAO;AAC3B,eAAenB,KAAK"},"metadata":{},"sourceType":"module"}